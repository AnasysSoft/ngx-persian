var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/pipes/EnNumPipe.html",[0,0.958,1,1.99]],["body/pipes/EnNumPipe.html",[0,1.148,1,3.051,2,1.825,3,0.391,4,0.391,5,0.391,6,0.329,7,2.801,8,0.912,9,3.584,10,1.707,11,2.407,12,3.051,13,2.87,14,1.618,15,0.693,16,4.394,17,0.911,18,2.073,19,2.653,20,1.674,21,0.713,22,3.434,23,0.624,24,0.044,25,0.464,26,0.541,27,0.833,28,4.394,29,3.051,30,3.051,31,4.394,32,2.544,33,2.653,34,0.713,35,1.645,36,3.584,37,1.034,38,2.653,39,0.713,40,1.814,41,2.073,42,2.073,43,2.073,44,0.464,45,0.391,46,1.148,47,2.384,48,1.034,49,0.911,50,2.384,51,3.434,52,0.026,53,0.033,54,0.026]],["title/pipes/FaNumPipe.html",[0,0.958,55,1.99]],["body/pipes/FaNumPipe.html",[0,1.148,2,1.825,3,0.391,4,0.391,5,0.391,6,0.329,8,0.912,9,3.584,10,1.707,11,2.544,13,2.714,14,1.618,15,0.693,17,0.911,18,2.073,19,2.653,20,1.674,21,0.713,23,0.624,24,0.045,25,0.464,26,0.541,27,0.764,32,2.07,33,2.653,34,0.713,35,1.645,36,3.584,37,1.034,38,2.653,39,0.713,40,1.814,41,2.073,42,2.073,43,2.073,44,0.464,45,0.391,46,1.148,47,2.384,48,1.034,49,0.911,50,2.384,52,0.026,53,0.033,54,0.026,55,3.051,56,2.801,57,3.547,58,4.394,59,1.401,60,3.434,61,4.394,62,3.434]],["title/pipes/IRCurrencyPipe.html",[0,0.958,63,1.99]],["body/pipes/IRCurrencyPipe.html",[0,1.637,2,1.454,3,0.312,4,0.312,5,0.312,6,0.283,8,0.784,14,1.289,15,0.596,17,0.726,18,1.652,19,2.281,20,1.672,21,0.568,23,0.497,24,0.045,25,0.734,26,0.432,27,0.798,32,1.78,34,0.568,35,1.414,37,0.889,38,2.281,39,0.568,43,1.652,44,0.511,45,0.312,46,0.915,48,0.644,49,1.148,52,0.021,53,0.029,54,0.021,59,1.343,63,2.624,64,1.9,65,3.082,66,5.063,67,2.602,68,4.233,69,3.778,70,3.778,71,3.778,72,3.53,73,3.53,74,3.005,75,4.666,76,3.778,77,2.008,78,3.778,79,3.778,80,3.778,81,4.666,82,4.666,83,1.957,84,3.778,85,4.896,86,2.737,87,1.78,88,3.778,89,2.008,90,3.778,91,2.737,92,3.778,93,2.232,94,2.737,95,2.232,96,2.232,97,2.737,98,2.737,99,2.737,100,1.9,101,1.024,102,2.232,103,1.9,104,2.737,105,2.737]],["title/classes/InvalidJalaliDateError.html",[45,0.327,106,1.523]],["body/classes/InvalidJalaliDateError.html",[3,0.449,4,0.449,5,0.449,6,0.359,15,0.622,21,0.819,23,0.717,24,0.044,25,0.533,26,0.622,44,0.533,45,0.449,52,0.03,53,0.036,54,0.03,74,3.327,106,2.742,107,2.739,108,3.218,109,4.21,110,2.382,111,3.909,112,3.945,113,3.218,114,3.218,115,3.218,116,3.218,117,3.218,118,3.218,119,3.218,120,2.739,121,3.218,122,3.909,123,3.909,124,3.218,125,3.218,126,3.218,127,2.382,128,2.739,129,2.096]],["title/classes/InvalidServiceInputError.html",[45,0.327,130,1.731]],["body/classes/InvalidServiceInputError.html",[3,0.448,4,0.448,5,0.448,6,0.358,15,0.621,21,0.817,23,0.715,24,0.044,25,0.532,26,0.621,27,0.621,44,0.532,45,0.448,52,0.03,53,0.036,54,0.03,74,3.322,107,2.732,109,4.205,110,2.376,111,3.902,113,3.21,114,3.21,115,3.21,116,3.21,117,3.21,118,3.21,119,3.21,120,2.732,121,3.21,122,3.902,123,3.902,124,3.21,125,3.21,126,3.21,127,2.376,130,3.112,131,3.21,132,3.935,133,3.21,134,2.091]],["title/injectables/JalaliDateCalculatorService.html",[135,0.855,136,1.99]],["body/injectables/JalaliDateCalculatorService.html",[3,0.12,4,0.354,5,0.12,6,0.36,8,0.825,11,0.844,15,0.649,17,0.735,21,0.987,23,0.749,24,0.045,25,0.602,26,0.649,27,0.282,29,1.244,34,0.958,37,0.731,39,0.218,44,0.142,45,0.204,47,0.729,48,0.969,49,1.126,52,0.018,53,0.014,54,0.008,59,1.519,67,0.952,83,0.983,101,1.164,106,0.558,110,0.634,128,3.65,129,3.008,133,2.949,135,0.534,136,1.244,137,0.558,138,3.342,139,0.856,140,0.247,141,0.844,142,2.112,143,3.975,144,2.343,145,2.343,146,2.343,147,2.343,148,2.044,149,1.791,150,1.791,151,1.791,152,1.791,153,1.791,154,1.791,155,1.791,156,1.791,157,1.791,158,1.791,159,3.36,160,3.462,161,3.552,162,1.05,163,2.183,164,1.791,165,1.05,166,4.145,167,1.791,168,4.244,169,2.255,170,2.343,171,2.343,172,1.415,173,1.911,174,1.05,175,1.05,176,2.645,177,0.856,178,2.159,179,1.05,180,3.462,181,3.748,182,2.949,183,3.826,184,2.536,185,2.629,186,1.791,187,1.05,188,1.672,189,2.351,190,1.791,191,1.877,192,1.791,193,2.351,194,3.153,195,1.791,196,2.769,197,1.791,198,1.05,199,1.791,200,2.536,201,2.86,202,2.343,203,1.791,204,1.05,205,1.791,206,1.911,207,3.386,208,0.752,209,1.791,210,1.791,211,1.05,212,1.461,213,2.769,214,3.386,215,2.769,216,1.791,217,1.05,218,1.791,219,1.791,220,1.05,221,1.461,222,2.769,223,1.791,224,1.461,225,1.923,226,1.791,227,1.791,228,1.791,229,1.791,230,1.791,231,2.769,232,1.791,233,1.791,234,1.791,235,1.791,236,1.791,237,2.259,238,1.791,239,2.343,240,1.791,241,1.791,242,1.05,243,1.461,244,1.791,245,1.05,246,0.952,247,1.461,248,1.791,249,3.109,250,1.461,251,2.769,252,1.05,253,1.05,254,1.05,255,1.05,256,1.05,257,1.05,258,1.05,259,1.05,260,1.05,261,0.634,262,0.634,263,0.856,264,0.856,265,1.05,266,1.05,267,0.558,268,0.558,269,1.05,270,1.05,271,0.558,272,0.558,273,2.741,274,1.05,275,1.05,276,1.791,277,1.05,278,1.791,279,1.05,280,1.791,281,1.05,282,1.672,283,2.769,284,1.05,285,2.769,286,1.05,287,1.461,288,1.791,289,2.343,290,1.05,291,1.911,292,1.05,293,2.343,294,2.645,295,1.05,296,1.05,297,1.05,298,1.791,299,1.627,300,1.627,301,1.05,302,1.05,303,1.05,304,1.461,305,1.245,306,1.05,307,1.791,308,1.05,309,1.05,310,1.05,311,1.05,312,1.05,313,1.05,314,1.05,315,1.05,316,1.05,317,1.05,318,1.05,319,1.05,320,1.05,321,1.791,322,1.05,323,1.791,324,1.05,325,1.05,326,1.05,327,1.05,328,1.05,329,1.05,330,1.05,331,1.05,332,1.05,333,1.05,334,0.856,335,1.05,336,1.05,337,1.05,338,1.05,339,1.791,340,1.05,341,1.791,342,1.05,343,1.05,344,1.05,345,1.05,346,1.05,347,2.343]],["title/injectables/JalaliDateValidatorService.html",[135,0.855,163,1.731]],["body/injectables/JalaliDateValidatorService.html",[3,0.216,4,0.216,5,0.216,6,0.38,8,0.925,15,0.731,17,0.931,21,1.036,23,0.842,24,0.044,25,0.626,26,0.731,27,0.553,29,2.727,34,1.054,37,0.826,39,0.394,44,0.257,45,0.216,48,0.924,49,1.122,52,0.014,53,0.022,54,0.014,59,1.517,67,2.087,77,1.009,83,1.472,103,1.318,106,1.009,110,2.119,128,3.691,129,2.868,134,1.538,135,0.863,137,1.009,138,3.526,140,0.447,141,1.364,142,2.368,159,3.78,160,4.336,161,3.994,163,1.748,166,1.548,172,1.748,173,1.548,177,3.203,180,3.897,181,3.657,182,3.897,183,3.203,184,3.449,185,1.748,193,3.318,194,2.01,200,2.362,201,2.01,206,2.362,208,0.796,212,2.362,221,1.548,224,1.548,237,2.362,243,2.863,247,3.203,250,1.548,261,1.146,262,1.146,263,1.548,264,1.548,267,1.009,268,1.009,271,1.009,272,2.368,348,1.548,349,3.51,350,3.51,351,2.895,352,2.895,353,2.895,354,2.895,355,2.895,356,2.895,357,2.895,358,2.895,359,1.898,360,1.898,361,2.371,362,1.898,363,2.539,364,2.895,365,1.898,366,2.119,367,1.748,368,1.898,369,1.898,370,1.865,371,3.51,372,1.318,373,2.895,374,1.898,375,3.51,376,1.898,377,1.548,378,1.898,379,1.898,380,1.898,381,1.898,382,2.895,383,1.898,384,2.895,385,2.895,386,2.895,387,1.898,388,1.898,389,1.898,390,1.898,391,3.51,392,3.51,393,1.898,394,1.898,395,1.318,396,1.898,397,1.898,398,1.548,399,1.898,400,1.898,401,1.898,402,1.146,403,1.898,404,1.898,405,1.898,406,1.898,407,1.898]],["title/pipes/NationalCodePipe.html",[0,0.958,408,1.99]],["body/pipes/NationalCodePipe.html",[0,1.13,2,1.797,3,0.385,4,0.385,5,0.385,6,0.326,8,0.903,14,1.593,15,0.686,17,0.897,18,2.041,19,2.627,20,1.631,21,0.702,23,0.614,24,0.045,25,0.457,26,0.533,27,0.759,32,2.05,34,0.702,37,0.795,38,2.627,39,0.702,43,2.041,44,0.457,45,0.385,46,1.13,48,0.795,49,0.897,50,2.348,52,0.026,53,0.033,54,0.026,59,1.452,65,3.549,87,2.05,89,2.312,100,2.348,101,1.266,102,2.758,103,2.348,225,3.34,300,3.021,305,1.797,408,3.021,409,2.758,410,4.463,411,5.079,412,4.81,413,4.35,414,4.35,415,3.381,416,4.35,417,4.35,418,2.758,419,3.381,420,3.381,421,2.041,422,3.381]],["title/modules/NgxPersianModule.html",[423,2.338,424,1.99]],["body/modules/NgxPersianModule.html",[3,0.487,4,0.487,5,0.487,6,0.32,24,0.044,37,1.006,39,0.887,44,0.578,45,0.487,52,0.032,53,0.038,54,0.032,424,3.49,425,2.968,426,4.274,427,4.274,428,5.026,429,3.487,430,4.274,431,3.487]],["title/interfaces/PLOptions.html",[432,1.073,433,1.35]],["body/interfaces/PLOptions.html",[3,0.227,4,0.227,5,0.227,6,0.149,8,0.413,10,1.792,12,1.381,13,1.057,20,1.199,24,0.045,25,0.544,26,0.764,27,0.838,32,1.413,33,1.201,34,0.896,35,1.857,37,0.85,39,0.413,40,0.745,42,1.201,44,0.405,45,0.227,46,0.665,48,1.067,49,1.204,52,0.04,53,0.023,54,0.015,59,1.067,77,2.137,83,1.687,87,2.137,101,1.123,134,1.594,135,0.894,140,0.468,141,1.413,142,2.293,169,2.293,178,1.381,188,2.181,189,1.381,208,0.834,267,1.057,268,1.057,271,1.057,272,2.293,273,1.811,361,2.927,363,2.797,366,2.181,367,1.811,370,1.057,372,1.381,395,3.15,402,1.201,421,1.201,432,1.352,433,1.895,434,1.201,435,1.057,436,1.381,437,2.137,438,2.765,439,2.083,440,2.946,441,2.447,442,2.447,443,3.521,444,3.521,445,3.842,446,3.281,447,1.413,448,1.623,449,1.623,450,1.623,451,2.843,452,1.381,453,1.057,454,1.623,455,1.623,456,1.623,457,1.623,458,1.623,459,1.623,460,1.623,461,2.447,462,1.623,463,1.623,464,1.623,465,2.508,466,2.793,467,1.623,468,1.623,469,1.623,470,1.623,471,1.381,472,2.946,473,3.281,474,1.623,475,1.623,476,2.508,477,1.623,478,1.623,479,1.623,480,1.623,481,1.623,482,1.623,483,1.623,484,1.623,485,1.623,486,2.083,487,1.623,488,1.623,489,1.381,490,1.623,491,1.623,492,1.381,493,2.946,494,1.594,495,1.381,496,1.381,497,1.623,498,1.381,499,2.447,500,1.623,501,1.623,502,1.381,503,2.083,504,1.623,505,1.381,506,2.083,507,1.201,508,1.381,509,1.381,510,1.623,511,1.623,512,1.381,513,2.447,514,2.447,515,1.623,516,2.946,517,1.623,518,1.623]],["title/directives/PersianLetterDirective.html",[519,1.523,520,1.731]],["body/directives/PersianLetterDirective.html",[3,0.309,4,0.309,5,0.309,6,0.323,8,0.563,10,0.907,14,1.278,15,0.428,17,0.996,20,1.12,21,0.779,23,0.493,24,0.045,25,0.582,26,0.428,27,0.77,34,0.563,35,1.74,37,1.094,39,0.563,41,1.638,44,0.507,45,0.428,46,1.44,48,1.094,49,0.996,52,0.021,53,0.029,54,0.021,89,1.441,127,2.6,140,0.638,148,3.125,169,1.995,172,2.6,208,1.575,246,2.683,282,2.267,433,2.299,438,2.289,494,2.683,519,2.289,520,3.274,521,1.883,522,2.6,523,1.883,524,3.513,525,3.981,526,3.513,527,3.048,528,3.063,529,3.063,530,3.063,531,2.991,532,3.513,533,3.792,534,3.513,535,3.513,536,3.048,537,3.063,538,3.389,539,2.712,540,3.513,541,3.981,542,2.712,543,3.513,544,2.991,545,2.213,546,3.513,547,3.513,548,1.883,549,2.213,550,2.213,551,2.807,552,3.063,553,2.213,554,2.213,555,2.213]],["title/injectables/PersianLetterService.html",[135,0.855,453,1.523]],["body/injectables/PersianLetterService.html",[3,0.165,4,0.165,5,0.165,6,0.336,8,0.3,10,1.814,12,1.623,13,1.242,15,0.585,17,0.62,20,1.529,21,0.903,23,0.674,24,0.045,25,0.565,26,0.585,27,0.871,32,1.593,33,1.412,34,1.042,35,1.937,37,0.692,39,0.3,40,0.541,42,0.873,44,0.316,45,0.165,46,0.483,48,0.934,49,1.054,52,0.039,53,0.018,54,0.011,57,1.004,59,1.154,67,1.796,77,1.972,83,1.666,87,2.266,101,0.875,134,1.242,135,0.697,137,0.768,140,0.34,141,1.101,142,2.508,169,2.22,176,1.004,178,1.623,188,1.777,189,1.623,208,0.981,267,0.768,268,0.768,271,1.242,272,2.669,273,1.412,361,3.097,363,2.22,366,2.523,367,2.041,370,1.242,372,1.623,395,3.277,402,0.873,421,0.873,432,0.875,433,2.117,435,2.388,436,1.004,437,1.796,438,2.828,439,1.004,440,2.401,441,1.18,442,1.18,443,2.757,444,2.757,445,3.548,446,1.907,447,1.101,448,1.18,449,1.18,450,1.18,451,3.032,452,1.004,453,1.242,454,2.401,455,1.907,456,1.907,457,1.907,458,1.907,459,1.907,460,2.401,461,2.757,462,2.401,463,1.907,464,1.907,465,2.757,466,3.021,467,1.907,468,1.907,469,1.907,470,1.907,471,1.623,472,3.239,473,3.548,474,1.907,475,1.907,476,2.757,477,1.907,478,1.907,479,1.18,480,1.18,481,1.18,482,1.18,483,1.18,484,1.18,485,1.18,486,1.623,487,1.18,488,1.18,489,1.004,490,1.907,491,1.907,492,1.623,493,3.239,494,1.564,495,1.623,496,1.623,497,1.907,498,1.623,499,2.757,500,1.907,501,1.907,502,1.623,503,1.623,504,1.18,505,1.004,506,2.347,507,1.412,508,1.004,509,1.004,510,1.18,511,1.18,512,1.004,513,2.757,514,2.757,515,1.907,516,3.239,517,1.907,518,1.907,556,1.907,557,2.338,558,1.623,559,1.623,560,1.446,561,1.446,562,1.446,563,1.004,564,1.446,565,1.004,566,1.446,567,1.446,568,1.446,569,1.446,570,1.446]],["title/injectables/PersianNumberService.html",[40,1.073,135,0.855]],["body/injectables/PersianNumberService.html",[3,0.213,4,0.213,5,0.213,6,0.372,10,1.811,11,2.343,13,1.847,15,0.698,17,0.759,20,1.656,21,1.011,23,0.805,24,0.045,25,0.659,26,0.698,27,0.9,34,0.986,35,1.945,37,0.818,39,0.388,40,1.071,44,0.252,45,0.213,46,0.624,48,1.118,49,1.114,52,0.014,53,0.022,54,0.014,57,2.704,59,1.293,67,1.847,83,1.858,87,2.086,100,1.297,101,1.071,130,1.727,134,0.993,135,0.853,137,0.993,140,0.44,141,1.348,142,2.643,176,2.704,185,1.727,267,0.993,268,0.993,272,2.727,273,1.727,287,2.333,291,2.333,294,1.986,299,1.986,300,1.986,305,1.52,361,1.727,363,2.069,366,2.351,367,2.351,370,2.069,402,1.128,418,1.524,421,1.727,435,2.643,437,1.52,447,1.348,451,2.673,452,1.986,465,1.297,466,1.297,486,1.986,489,1.297,492,1.986,494,0.993,495,1.986,496,1.986,498,1.986,502,1.986,503,1.986,505,1.297,506,1.986,507,1.727,508,1.297,509,1.297,512,1.297,556,2.333,558,1.986,559,1.986,563,1.986,565,1.986,571,1.524,572,3.475,573,3.475,574,3.475,575,2.86,576,2.86,577,1.868,578,2.86,579,1.868,580,1.868,581,1.868,582,1.868,583,1.868,584,1.868,585,2.86,586,1.868,587,3.894,588,3.894,589,1.868,590,2.86,591,2.86,592,2.86,593,2.86,594,2.86,595,2.86,596,2.86,597,2.86,598,1.868,599,1.868,600,2.86,601,1.868,602,1.868,603,1.868,604,1.868,605,1.868,606,1.868,607,1.868,608,1.868,609,1.868,610,1.868]],["title/directives/PersianNumbersDirective.html",[519,1.523,551,1.731]],["body/directives/PersianNumbersDirective.html",[3,0.321,4,0.321,5,0.321,6,0.289,8,0.585,10,0.942,14,1.327,15,0.444,17,1.023,20,1.149,21,0.585,23,0.512,24,0.045,25,0.521,26,0.444,27,0.745,34,0.585,35,1.768,37,1.111,39,0.585,41,1.701,44,0.521,45,0.439,46,1.468,48,1.111,49,1.023,52,0.021,53,0.029,54,0.021,89,1.497,127,2.652,140,0.663,148,3.157,169,1.497,172,2.652,208,1.182,246,2.714,282,2.327,433,2.07,438,2.048,494,2.714,519,2.334,520,2.852,521,1.956,522,2.327,523,1.956,524,3.584,525,3.853,526,3.584,527,3.157,528,2.298,529,2.298,530,2.298,531,3.051,532,3.584,533,3.853,534,3.584,535,3.584,536,2.852,537,3.144,538,3.051,540,3.584,541,4.035,543,3.584,544,3.051,545,2.298,546,3.584,547,3.584,548,1.956,549,2.298,550,2.298,551,3.214,552,3.144,553,2.298,554,2.298,555,2.298,611,2.817]],["title/interfaces/PersianService.html",[432,1.073,447,1.35]],["body/interfaces/PersianService.html",[3,0.409,4,0.409,5,0.409,6,0.389,8,0.744,10,1.199,15,0.78,17,1.198,20,1.71,21,1.026,23,0.899,24,0.044,25,0.668,26,0.78,27,0.78,34,1.026,44,0.485,52,0.027,53,0.034,54,0.027,59,1.312,140,0.844,363,2.758,377,2.925,432,1.691,434,2.165,435,2.758,437,2.4,439,2.49,447,2.128,471,2.49,507,2.727,558,3.136,559,3.136,563,3.136,565,3.136,612,2.925,613,3.586,614,2.925,615,3.586,616,3.586,617,3.586,618,3.586,619,3.586]],["title/interfaces/SimpleDateInterface.html",[191,1.731,432,1.073]],["body/interfaces/SimpleDateInterface.html",[3,0.449,4,0.449,5,0.449,6,0.295,8,0.819,11,2.257,24,0.043,25,0.697,44,0.533,52,0.03,53,0.036,54,0.03,59,1.526,129,2.096,140,0.928,141,2.257,181,3.819,191,2.893,193,3.819,194,3.819,201,2.739,432,1.794,434,2.382,620,3.218,621,3.945,622,3.945,623,3.945,624,3.945,625,3.945]],["title/coverage.html",[626,3.182]],["body/coverage.html",[0,1.634,1,2.128,5,0.349,6,0.436,7,2.499,24,0.044,25,0.414,40,1.147,45,0.522,52,0.023,53,0.031,54,0.023,55,2.128,56,2.499,63,2.128,64,2.128,83,1.711,101,1.147,106,1.628,108,2.499,129,2.167,130,1.85,131,2.499,135,1.458,136,2.128,138,2.832,139,2.499,163,1.85,191,1.85,246,2.705,261,1.85,262,1.85,304,4.527,334,2.499,348,2.499,408,2.128,409,2.499,432,1.717,433,1.444,435,2.598,436,2.832,447,1.444,453,1.628,519,2.167,520,1.85,522,2.952,523,2.832,527,1.85,536,1.85,551,1.85,571,2.499,612,2.499,620,2.499,626,2.499,627,3.064,628,3.064,629,3.064,630,3.741,631,5.495,632,2.499,633,4.079,634,4.079,635,4.079,636,4.079,637,3.064,638,3.064,639,3.064,640,3.064,641,3.064,642,3.064,643,3.064,644,3.064,645,3.064,646,3.064,647,3.064,648,3.064,649,3.064,650,3.064,651,3.327,652,3.064,653,3.064]],["title/dependencies.html",[654,2.4,655,2.392]],["body/dependencies.html",[24,0.045,39,0.845,52,0.031,53,0.037,54,0.031,93,3.321,548,2.827,655,2.827,656,4.071,657,5.742,658,4.071,659,4.883,660,4.883,661,4.071,662,4.071,663,4.071,664,4.071,665,4.071,666,4.071,667,4.071,668,4.071,669,4.071,670,4.071,671,4.071,672,4.071,673,4.071]],["title/miscellaneous/enumerations.html",[674,1.449,675,2.81]],["body/miscellaneous/enumerations.html",[6,0.322,24,0.044,27,0.871,52,0.033,53,0.038,54,0.033,64,2.985,68,3.506,72,3.506,73,3.506,95,4.114,96,3.506,140,1.011,674,2.595,675,3.506,676,4.298]],["title/miscellaneous/functions.html",[674,1.449,677,2.81]],["body/miscellaneous/functions.html",[3,0.367,6,0.316,8,0.668,10,1.408,11,1.985,15,0.816,23,0.94,24,0.043,26,0.816,27,0.664,30,2.235,34,1.101,40,1.205,48,0.757,52,0.036,53,0.032,54,0.024,59,1.322,77,1.71,87,1.985,89,2.239,140,0.757,148,2.544,188,1.943,208,1.35,246,2.496,261,2.836,262,2.836,282,1.943,305,2.239,370,2.239,410,2.625,437,1.71,438,2.496,451,1.943,453,2.496,476,2.235,522,1.943,527,2.544,536,2.544,538,2.235,544,2.926,630,2.625,632,3.437,651,3.832,674,1.943,677,2.625,678,4.697,679,4.213,680,3.218,681,5.173,682,4.213,683,4.213,684,3.218,685,4.697,686,3.218,687,3.218,688,3.218,689,3.218,690,3.218,691,3.218,692,3.218,693,3.218,694,4.213,695,4.213,696,3.218,697,3.218,698,4.213,699,4.984,700,3.218,701,3.218,702,4.213,703,3.218]],["title/index.html",[140,0.565,704,2.4,705,2.4]],["body/index.html",[4,0.411,15,0.569,24,0.034,30,2.508,52,0.027,53,0.034,54,0.027,101,1.352,225,2.508,271,2.636,398,2.946,614,2.946,706,3.611,707,4.537,708,3.611,709,4.96,710,4.96,711,3.611,712,3.611,713,3.611,714,4.537,715,5.361,716,5.553,717,3.611,718,3.611,719,3.611,720,3.611,721,3.611,722,3.611,723,3.611,724,3.611,725,4.96,726,4.96,727,3.611,728,5.361,729,3.611,730,3.611,731,3.611,732,3.611,733,3.611,734,3.611,735,3.611,736,4.537,737,4.537,738,5.203,739,3.611,740,4.537,741,4.537,742,3.611,743,5.203,744,3.611,745,3.611,746,3.611,747,4.96,748,3.611,749,3.611,750,2.946,751,3.611]],["title/modules.html",[425,2.708]],["body/modules.html",[24,0.04,52,0.034,53,0.04,54,0.034,120,3.152,424,3.152,425,3.152,752,4.54,753,4.54]],["title/overview.html",[754,3.182]],["body/overview.html",[2,2.284,24,0.038,52,0.033,53,0.038,54,0.033,107,2.985,137,2.284,185,2.595,294,3.502,299,2.985,305,2.68,423,4.114,429,3.506,431,3.506,434,2.595,521,2.985,531,2.985,655,2.985,750,3.506,754,3.506,755,4.298,756,4.298,757,5.043,758,4.298]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":83,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"coverage.html":{}}}],["0.14.2",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["001",{"_index":416,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["1",{"_index":185,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"injectables/PersianNumberService.html":{},"overview.html":{}}}],["1,925,100",{"_index":92,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["1.0",{"_index":82,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["1.9.0",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":410,"title":{},"body":{"pipes/NationalCodePipe.html":{},"miscellaneous/functions.html":{}}}],["10/15",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":304,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"coverage.html":{}}}],["100100",{"_index":231,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["11",{"_index":385,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["12",{"_index":298,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["139361631",{"_index":314,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["1397",{"_index":182,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["145",{"_index":695,"title":{},"body":{"miscellaneous/functions.html":{}}}],["145,455",{"_index":694,"title":{},"body":{"miscellaneous/functions.html":{}}}],["146097",{"_index":317,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["1461",{"_index":293,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["150",{"_index":331,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["153",{"_index":323,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["17",{"_index":297,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["183187720",{"_index":316,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["1925100",{"_index":90,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["2",{"_index":299,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianNumberService.html":{},"overview.html":{}}}],["2.5.4",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":334,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"coverage.html":{}}}],["2018",{"_index":215,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["236547",{"_index":417,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["25",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":305,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"pipes/NationalCodePipe.html":{},"injectables/PersianNumberService.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["308",{"_index":320,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["31",{"_index":310,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["3177",{"_index":392,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["34840408",{"_index":302,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["35/76",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["3908",{"_index":318,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["4",{"_index":294,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianNumberService.html":{},"overview.html":{}}}],["46",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":300,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"pipes/NationalCodePipe.html":{},"injectables/PersianNumberService.html":{}}}],["5/9",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":291,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianNumberService.html":{}}}],["6.3.3",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":391,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["621",{"_index":249,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["63",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":287,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianNumberService.html":{}}}],["7.2.0",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["7.3.5",{"_index":712,"title":{},"body":{"index.html":{}}}],["7/11",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["752",{"_index":306,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["8",{"_index":585,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["9",{"_index":421,"title":{},"body":{"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["_",{"_index":461,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["_getmatchedpatternlength",{"_index":556,"title":{},"body":{"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["_getmatchedpatternlength(value",{"_index":502,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["_jday",{"_index":144,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["_jmonth",{"_index":145,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["_jyear",{"_index":146,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["_maxacceptableyear",{"_index":349,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["_minacceptableyear",{"_index":350,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["_stringvalidationregex",{"_index":557,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["_stringvalidationregex(options",{"_index":478,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["abstractcontrol",{"_index":541,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["acceptable",{"_index":103,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{}}}],["accessors",{"_index":158,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["according",{"_index":372,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["ad",{"_index":248,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["add",{"_index":524,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["allowed",{"_index":700,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":709,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":93,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":548,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":398,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"index.html":{}}}],["applied",{"_index":227,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["arabic",{"_index":57,"title":{},"body":{"pipes/FaNumPipe.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["arabictopersian",{"_index":575,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["arabictopersian(value",{"_index":578,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["arithmetic",{"_index":687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arithmeticutils",{"_index":263,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["around",{"_index":397,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["array",{"_index":496,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["artifacts",{"_index":729,"title":{},"body":{"index.html":{}}}],["attention",{"_index":192,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["automatically",{"_index":720,"title":{},"body":{"index.html":{}}}],["available",{"_index":120,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"modules.html":{}}}],["between",{"_index":390,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["boolean",{"_index":363,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["bootstrap",{"_index":756,"title":{},"body":{"overview.html":{}}}],["both",{"_index":232,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["brings",{"_index":448,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["browse",{"_index":753,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":728,"title":{},"body":{"index.html":{}}}],["calculates",{"_index":221,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["calculator.service.ts",{"_index":139,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"coverage.html":{}}}],["calculator.service.ts:100",{"_index":204,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:110",{"_index":217,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:118",{"_index":211,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:129",{"_index":187,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:16",{"_index":253,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:17",{"_index":252,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:170",{"_index":175,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:18",{"_index":164,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:25",{"_index":254,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:34",{"_index":256,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:37",{"_index":258,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:40",{"_index":260,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:54",{"_index":220,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:68",{"_index":242,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:77",{"_index":198,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:91",{"_index":245,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calendar",{"_index":201,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["calendars",{"_index":233,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["change",{"_index":722,"title":{},"body":{"index.html":{}}}],["characters",{"_index":476,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"miscellaneous/functions.html":{}}}],["chars",{"_index":491,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["check",{"_index":749,"title":{},"body":{"index.html":{}}}],["checks",{"_index":370,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":69,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["class",{"_index":45,"title":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["classes",{"_index":107,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"overview.html":{}}}],["cleaning",{"_index":226,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["cli",{"_index":710,"title":{},"body":{"index.html":{}}}],["code",{"_index":225,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"pipes/NationalCodePipe.html":{},"index.html":{}}}],["component",{"_index":726,"title":{},"body":{"index.html":{}}}],["const",{"_index":273,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["constructor",{"_index":110,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["constructor(...params",{"_index":111,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["constructor(date",{"_index":162,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["constructor(private",{"_index":47,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"injectables/JalaliDateCalculatorService.html":{}}}],["containing",{"_index":28,"title":{},"body":{"pipes/EnNumPipe.html":{}}}],["contains",{"_index":87,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"miscellaneous/functions.html":{}}}],["containspersian",{"_index":558,"title":{},"body":{"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["containspersian(value",{"_index":507,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["control",{"_index":544,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["controlling",{"_index":515,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["controls",{"_index":514,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["conversion",{"_index":615,"title":{},"body":{"interfaces/PersianService.html":{}}}],["convert",{"_index":402,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["converts",{"_index":176,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["converttogeorgian",{"_index":149,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["converttogeorgian(jyear",{"_index":174,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["converttojalali",{"_index":150,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["converttojalali(gdate",{"_index":186,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["convrteddate",{"_index":274,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["convrteddate.day",{"_index":281,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["convrteddate.month",{"_index":279,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["convrteddate.year",{"_index":277,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["core",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["corresponding",{"_index":567,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["counting",{"_index":384,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["coverage",{"_index":626,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creategdatefromdays",{"_index":151,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["creategdatefromdays(numofdays",{"_index":197,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["creates",{"_index":199,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["currency",{"_index":66,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["date",{"_index":129,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["date(georgianyear",{"_index":342,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["date(gyear",{"_index":327,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["date(this.jalaliyeartogeorgianyear(jyear",{"_index":308,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["dates",{"_index":224,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["day",{"_index":194,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["days",{"_index":200,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["decimal",{"_index":88,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["decimalpipe",{"_index":75,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["declarations",{"_index":429,"title":{},"body":{"modules/NgxPersianModule.html":{},"overview.html":{}}}],["default",{"_index":67,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["defined",{"_index":21,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{}}}],["dependencies",{"_index":655,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"miscellaneous/functions.html":{}}}],["descriptions",{"_index":441,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["desired",{"_index":79,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["dev",{"_index":717,"title":{},"body":{"index.html":{}}}],["development",{"_index":713,"title":{},"body":{"index.html":{}}}],["di",{"_index":173,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["digit",{"_index":411,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["digitinfo",{"_index":85,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["digits",{"_index":32,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["directive",{"_index":519,"title":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["directives",{"_index":521,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"overview.html":{}}}],["directives.ts",{"_index":523,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["directives.ts:22",{"_index":611,"title":{},"body":{"directives/PersianNumbersDirective.html":{}}}],["directives.ts:38",{"_index":539,"title":{},"body":{"directives/PersianLetterDirective.html":{}}}],["directives.ts:45",{"_index":542,"title":{},"body":{"directives/PersianLetterDirective.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":727,"title":{},"body":{"index.html":{}}}],["directory",{"_index":732,"title":{},"body":{"index.html":{}}}],["dist",{"_index":731,"title":{},"body":{"index.html":{}}}],["div",{"_index":261,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["div((div(targetgyear",{"_index":330,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div((gyear",{"_index":292,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(153",{"_index":295,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(7",{"_index":326,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(div(4",{"_index":315,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(div(gyear",{"_index":303,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(gmonth",{"_index":290,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(j",{"_index":325,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(jmonth",{"_index":311,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(mod(i",{"_index":322,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(mod(j",{"_index":319,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(num1",{"_index":680,"title":{},"body":{"miscellaneous/functions.html":{}}}],["div(targetgyear",{"_index":329,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["division",{"_index":684,"title":{},"body":{"miscellaneous/functions.html":{}}}],["document",{"_index":442,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["documentation",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["documents",{"_index":701,"title":{},"body":{"miscellaneous/functions.html":{}}}],["doing",{"_index":394,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["dynamic",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":744,"title":{},"body":{"index.html":{}}}],["each",{"_index":469,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["elements",{"_index":470,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["empty",{"_index":33,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["end",{"_index":743,"title":{},"body":{"index.html":{}}}],["endigits",{"_index":443,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["english",{"_index":13,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["englishnumberstable",{"_index":572,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["ennum",{"_index":16,"title":{},"body":{"pipes/EnNumPipe.html":{}}}],["ennumpipe",{"_index":1,"title":{"pipes/EnNumPipe.html":{}},"body":{"pipes/EnNumPipe.html":{},"coverage.html":{}}}],["enter",{"_index":78,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["enum",{"_index":94,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["enumerations",{"_index":675,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":208,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["equivalent",{"_index":179,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["error",{"_index":109,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["error(`${value",{"_index":102,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["error.capturestacktrace",{"_index":124,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["error.capturestacktrace(this",{"_index":125,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["esfand",{"_index":386,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["example",{"_index":89,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["execute",{"_index":740,"title":{},"body":{"index.html":{}}}],["existence",{"_index":513,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["exists",{"_index":692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":44,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["exports",{"_index":431,"title":{},"body":{"modules/NgxPersianModule.html":{},"overview.html":{}}}],["extends",{"_index":74,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["fact",{"_index":362,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["false",{"_index":366,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["fanum",{"_index":58,"title":{},"body":{"pipes/FaNumPipe.html":{}}}],["fanumpipe",{"_index":55,"title":{"pipes/FaNumPipe.html":{}},"body":{"pipes/FaNumPipe.html":{},"coverage.html":{}}}],["farvardin",{"_index":206,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["few",{"_index":235,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["fields",{"_index":440,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["file",{"_index":5,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["files",{"_index":723,"title":{},"body":{"index.html":{}}}],["find",{"_index":346,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["finding",{"_index":468,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["first",{"_index":205,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["firstdayofjyearinmarch",{"_index":152,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["firstdayofjyearinmarch(jyear",{"_index":203,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["flag",{"_index":734,"title":{},"body":{"index.html":{}}}],["following",{"_index":70,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["form",{"_index":699,"title":{},"body":{"miscellaneous/functions.html":{}}}],["format",{"_index":413,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["formats",{"_index":65,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["formatter",{"_index":81,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["formatting",{"_index":80,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["fraction",{"_index":691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["full",{"_index":180,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["function",{"_index":246,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":677,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":746,"title":{},"body":{"index.html":{}}}],["future",{"_index":238,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["g",{"_index":489,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["gdate",{"_index":196,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gdate.getdate",{"_index":301,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gdate.getfullyear",{"_index":288,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gdate.getmonth",{"_index":286,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gday",{"_index":321,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["generate",{"_index":725,"title":{},"body":{"index.html":{}}}],["generated",{"_index":708,"title":{},"body":{"index.html":{}}}],["georgian",{"_index":166,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["georgianyear",{"_index":336,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["georgianyeartojalaliyear",{"_index":153,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["georgianyeartojalaliyear(gyear",{"_index":210,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["getjday",{"_index":255,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["getjmonth",{"_index":257,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["getjyear",{"_index":259,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gets",{"_index":490,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["getting",{"_index":704,"title":{"index.html":{}},"body":{}}],["given",{"_index":243,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["gmonth",{"_index":285,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gmonthdiv",{"_index":289,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["go",{"_index":748,"title":{},"body":{"index.html":{}}}],["good",{"_index":230,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["graph",{"_index":752,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":500,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["gregorian",{"_index":223,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["grouping",{"_index":622,"title":{},"body":{"interfaces/SimpleDateInterface.html":{}}}],["gt",{"_index":91,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["gyear",{"_index":214,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["help",{"_index":747,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":719,"title":{},"body":{"index.html":{}}}],["https://github.com/sijad/ts",{"_index":283,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["identifier",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":123,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["implement",{"_index":439,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"interfaces/PersianService.html":{}}}],["implementing",{"_index":190,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["implements",{"_index":46,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{}}}],["import",{"_index":37,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{}}}],["important",{"_index":624,"title":{},"body":{"interfaces/SimpleDateInterface.html":{}}}],["imports",{"_index":430,"title":{},"body":{"modules/NgxPersianModule.html":{}}}],["index",{"_index":140,"title":{"index.html":{}},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"miscellaneous/functions.html":{}}}],["injectable",{"_index":135,"title":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"coverage.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"overview.html":{}}}],["injected",{"_index":171,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["input",{"_index":35,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{}}}],["input('persianletterdirective",{"_index":554,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["inputs",{"_index":538,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":240,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["instead",{"_index":378,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["integer",{"_index":682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["interface",{"_index":432,"title":{"interfaces/PLOptions.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{}},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":434,"title":{},"body":{"interfaces/PLOptions.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"overview.html":{}}}],["invalid",{"_index":127,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["invalidjalalidate.error",{"_index":264,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["invalidjalalidateerror",{"_index":106,"title":{"classes/InvalidJalaliDateError.html":{}},"body":{"classes/InvalidJalaliDateError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"coverage.html":{}}}],["invalidserviceinput.error",{"_index":599,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["invalidserviceinputerror",{"_index":130,"title":{"classes/InvalidServiceInputError.html":{}},"body":{"classes/InvalidServiceInputError.html":{},"injectables/PersianNumberService.html":{},"coverage.html":{}}}],["irc",{"_index":84,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["ircurrencies",{"_index":95,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"miscellaneous/enumerations.html":{}}}],["ircurrencies[type",{"_index":105,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["ircurrencypipe",{"_index":63,"title":{"pipes/IRCurrencyPipe.html":{}},"body":{"pipes/IRCurrencyPipe.html":{},"coverage.html":{}}}],["isjyearleap",{"_index":351,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isjyearleap(jyear",{"_index":359,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isnan(value",{"_index":99,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["ispersian",{"_index":437,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{}}}],["ispersian(value",{"_index":563,"title":{},"body":{"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["isvalidjdate",{"_index":352,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjdate(jyear",{"_index":364,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjday",{"_index":353,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjday(jyear",{"_index":368,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjmonth",{"_index":354,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjmonth(jmonth",{"_index":374,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjyear",{"_index":355,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjyear(jyear",{"_index":380,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["j",{"_index":313,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#l110",{"_index":328,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#l149",{"_index":335,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#l195",{"_index":284,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#l213",{"_index":312,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalali",{"_index":128,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["jalalidatecalculatorservice",{"_index":136,"title":{"injectables/JalaliDateCalculatorService.html":{}},"body":{"injectables/JalaliDateCalculatorService.html":{},"coverage.html":{}}}],["jalalidatevalidator",{"_index":170,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalalidatevalidatorservice",{"_index":163,"title":{"injectables/JalaliDateValidatorService.html":{}},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"coverage.html":{}}}],["jalalidatevalidatorservice._minacceptableyear",{"_index":403,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["jalaliday",{"_index":344,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalalimonth",{"_index":345,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaliyear",{"_index":337,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaliyeartogeorgianyear",{"_index":154,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaliyeartogeorgianyear(jyear",{"_index":216,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["javascript",{"_index":168,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jdate",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["jday",{"_index":159,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["jmonth",{"_index":160,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["jmonthlength",{"_index":356,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["jmonthlength(jyear",{"_index":382,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["js",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["julian",{"_index":222,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jyear",{"_index":161,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["karma",{"_index":742,"title":{},"body":{"index.html":{}}}],["key",{"_index":552,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["language",{"_index":616,"title":{},"body":{"interfaces/PersianService.html":{}}}],["language=jsregexp",{"_index":486,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["leap",{"_index":247,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["legend",{"_index":755,"title":{},"body":{"overview.html":{}}}],["length",{"_index":495,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["letter",{"_index":506,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["letter.service",{"_index":550,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["letter.service.ts",{"_index":436,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"coverage.html":{}}}],["letter.service.ts:24",{"_index":568,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:26",{"_index":569,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:27",{"_index":570,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:36",{"_index":561,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:55",{"_index":560,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:64",{"_index":562,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:83",{"_index":564,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:96",{"_index":566,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letters",{"_index":451,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":518,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["literal",{"_index":545,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["maintains",{"_index":115,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["make",{"_index":379,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["march",{"_index":207,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["match",{"_index":493,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["matched",{"_index":498,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["matches",{"_index":501,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["matching",{"_index":53,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matchresult",{"_index":503,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["matchresult.length",{"_index":505,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["method",{"_index":188,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":17,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{}}}],["million",{"_index":236,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["minmonthnumber",{"_index":404,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["miscellaneous",{"_index":674,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mod",{"_index":262,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mod(div(i",{"_index":324,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["mod(gmonth",{"_index":296,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["mod(num1",{"_index":686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":423,"title":{"modules/NgxPersianModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":425,"title":{"modules.html":{}},"body":{"modules/NgxPersianModule.html":{},"modules.html":{}}}],["month",{"_index":193,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["more",{"_index":30,"title":{},"body":{"pipes/EnNumPipe.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name",{"_index":15,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["national",{"_index":412,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["nationalcode",{"_index":414,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["nationalcodepipe",{"_index":408,"title":{"pipes/NationalCodePipe.html":{}},"body":{"pipes/NationalCodePipe.html":{},"coverage.html":{}}}],["native",{"_index":195,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["navigate",{"_index":718,"title":{},"body":{"index.html":{}}}],["needing",{"_index":401,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["new",{"_index":101,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":716,"title":{},"body":{"index.html":{}}}],["ng_validators",{"_index":533,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["ngmodule",{"_index":428,"title":{},"body":{"modules/NgxPersianModule.html":{}}}],["ngxpersian",{"_index":706,"title":{},"body":{"index.html":{}}}],["ngxpersianmodule",{"_index":424,"title":{"modules/NgxPersianModule.html":{}},"body":{"modules/NgxPersianModule.html":{},"modules.html":{}}}],["non",{"_index":31,"title":{},"body":{"pipes/EnNumPipe.html":{}}}],["null",{"_index":494,"title":{},"body":{"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{}}}],["num1",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["num2",{"_index":681,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":59,"title":{},"body":{"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"miscellaneous/functions.html":{}}}],["number(value",{"_index":97,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["number.service",{"_index":42,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["number.service.ts",{"_index":571,"title":{},"body":{"injectables/PersianNumberService.html":{},"coverage.html":{}}}],["number.service.ts:10",{"_index":598,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:11",{"_index":586,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:18",{"_index":580,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:31",{"_index":577,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:41",{"_index":581,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:50",{"_index":579,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:60",{"_index":584,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:77",{"_index":583,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:9",{"_index":589,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["numberofpassedgdays",{"_index":155,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numberofpassedgdays(gdate",{"_index":219,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numberofpassedjdays",{"_index":156,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numberofpassedjdays(jyear",{"_index":241,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numbers",{"_index":11,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianNumberService.html":{},"interfaces/SimpleDateInterface.html":{},"miscellaneous/functions.html":{}}}],["numofdayinjyear",{"_index":347,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numofdays",{"_index":202,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numofgleapyears",{"_index":157,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numofgleapyears(targetgyear",{"_index":244,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numofjleapyears",{"_index":357,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["numofjleapyears(targetjyear",{"_index":387,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["numofpasseddaysto1farvardin",{"_index":341,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["object",{"_index":169,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"directives/PersianNumbersDirective.html":{}}}],["occurred",{"_index":499,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["one",{"_index":29,"title":{},"body":{"pipes/EnNumPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["ones",{"_index":452,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["optional",{"_index":26,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":438,"title":{},"body":{"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["options.endigits",{"_index":479,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["options.persiandigits",{"_index":484,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["options.symbols",{"_index":480,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["options.whitespaces",{"_index":482,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["others",{"_index":477,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["otherwise",{"_index":367,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["out",{"_index":750,"title":{},"body":{"index.html":{},"overview.html":{}}}],["output",{"_index":189,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["overview",{"_index":754,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":654,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":49,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{}}}],["parameter",{"_index":77,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":113,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["part",{"_index":683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passed",{"_index":133,"title":{},"body":{"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{}}}],["passeddays",{"_index":339,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["pattern",{"_index":467,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persian",{"_index":10,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{}}}],["persian.module.ts",{"_index":427,"title":{},"body":{"modules/NgxPersianModule.html":{}}}],["persian/src/lib/jdate/arithmeticutils.ts",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["persian/src/lib/jdate/invalidjalalidate.error.ts",{"_index":108,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"coverage.html":{}}}],["persian/src/lib/jdate/invalidjalalidate.error.ts:1",{"_index":112,"title":{},"body":{"classes/InvalidJalaliDateError.html":{}}}],["persian/src/lib/jdate/jalali",{"_index":138,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"coverage.html":{}}}],["persian/src/lib/jdate/jdate.ts",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["persian/src/lib/jdate/simpledate.interface.ts",{"_index":620,"title":{},"body":{"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["persian/src/lib/ngx",{"_index":426,"title":{},"body":{"modules/NgxPersianModule.html":{}}}],["persian/src/lib/pipes/ennum.pipe.ts",{"_index":7,"title":{},"body":{"pipes/EnNumPipe.html":{},"coverage.html":{}}}],["persian/src/lib/pipes/ennum.pipe.ts:16",{"_index":22,"title":{},"body":{"pipes/EnNumPipe.html":{}}}],["persian/src/lib/pipes/fanum.pipe.ts",{"_index":56,"title":{},"body":{"pipes/FaNumPipe.html":{},"coverage.html":{}}}],["persian/src/lib/pipes/fanum.pipe.ts:17",{"_index":60,"title":{},"body":{"pipes/FaNumPipe.html":{}}}],["persian/src/lib/pipes/ircurrency.pipe.ts",{"_index":64,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["persian/src/lib/pipes/ircurrency.pipe.ts:30",{"_index":86,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["persian/src/lib/pipes/nationalcode.pipe.ts",{"_index":409,"title":{},"body":{"pipes/NationalCodePipe.html":{},"coverage.html":{}}}],["persian/src/lib/pipes/nationalcode.pipe.ts:14",{"_index":415,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["persian/src/lib/services/invalidserviceinput.error.ts",{"_index":131,"title":{},"body":{"classes/InvalidServiceInputError.html":{},"coverage.html":{}}}],["persian/src/lib/services/invalidserviceinput.error.ts:1",{"_index":132,"title":{},"body":{"classes/InvalidServiceInputError.html":{}}}],["persian/src/lib/services/persian",{"_index":435,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{},"coverage.html":{}}}],["persian/src/lib/validators/persian",{"_index":522,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persian_letters_pattern",{"_index":454,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persiandigits",{"_index":444,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persianletterdirective",{"_index":520,"title":{"directives/PersianLetterDirective.html":{}},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["persianletterservice",{"_index":453,"title":{"injectables/PersianLetterService.html":{}},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persianletterservice.persian_letters_pattern",{"_index":488,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persianletterservice.symbols_pattern",{"_index":481,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persianletterservice.whitespaces_pattern",{"_index":483,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persianlettersvalidator",{"_index":536,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persianlettersvalidator(options",{"_index":697,"title":{},"body":{"miscellaneous/functions.html":{}}}],["persianlettersvalidator(this.options)(control",{"_index":555,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["persiannumberpattern",{"_index":573,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumbersdirective",{"_index":551,"title":{"directives/PersianNumbersDirective.html":{}},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["persiannumberservice",{"_index":40,"title":{"injectables/PersianNumberService.html":{}},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persiannumberservice._getmatchedpatternlength(value",{"_index":602,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumberservice.persiannumberpattern",{"_index":485,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persiannumberservice.persiannumberstable[4",{"_index":604,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumberservice.persiannumberstable[5",{"_index":606,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumberservice.persiannumberstable[6",{"_index":608,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumberstable",{"_index":574,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumbersvalidator",{"_index":527,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persiannumbersvalidator()(control",{"_index":553,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["persiannumbersvalidator(persiannumberservice",{"_index":703,"title":{},"body":{"miscellaneous/functions.html":{}}}],["persianregex",{"_index":509,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["persianregex.test(value",{"_index":512,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["persianservice",{"_index":447,"title":{"interfaces/PersianService.html":{}},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{},"coverage.html":{}}}],["pipe",{"_index":0,"title":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"coverage.html":{}}}],["pipe({name",{"_index":43,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["pipes",{"_index":2,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":38,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["ploptions",{"_index":433,"title":{"interfaces/PLOptions.html":{}},"body":{"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["plus",{"_index":473,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["private",{"_index":142,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["probably",{"_index":61,"title":{},"body":{"pipes/FaNumPipe.html":{}}}],["procedure",{"_index":228,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["prod",{"_index":733,"title":{},"body":{"index.html":{}}}],["production",{"_index":735,"title":{},"body":{"index.html":{}}}],["program",{"_index":450,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["project",{"_index":707,"title":{},"body":{"index.html":{}}}],["projects/.../arithmeticutils.ts",{"_index":678,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../ircurrency.pipe.ts",{"_index":676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../persian",{"_index":679,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["proper",{"_index":116,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["properties",{"_index":141,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["property",{"_index":525,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["protractor",{"_index":745,"title":{},"body":{"index.html":{}}}],["provide",{"_index":532,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["providedin",{"_index":267,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["providers",{"_index":531,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"overview.html":{}}}],["public",{"_index":147,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["r",{"_index":72,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"miscellaneous/enumerations.html":{}}}],["range",{"_index":371,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["reactive",{"_index":698,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readme",{"_index":751,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":143,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["real",{"_index":209,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["regex",{"_index":466,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["regexp",{"_index":465,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["regexp(`[${persianletterservice.persian_letters_pattern",{"_index":510,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["regexp(`[${persiannumberservice.persiannumberpattern",{"_index":600,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["regexp(`[${result",{"_index":487,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["regular",{"_index":167,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["reload",{"_index":721,"title":{},"body":{"index.html":{}}}],["removes",{"_index":690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replace(/٥/g",{"_index":605,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["replace(/٦/g",{"_index":607,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["replaced",{"_index":36,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{}}}],["replaces",{"_index":9,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{}}}],["representing",{"_index":178,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["reset",{"_index":758,"title":{},"body":{"overview.html":{}}}],["result",{"_index":52,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":54,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":48,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":34,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{}}}],["rial",{"_index":68,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":268,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["round",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["round(x",{"_index":689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":715,"title":{},"body":{"index.html":{}}}],["running",{"_index":736,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":463,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["scaffolding",{"_index":724,"title":{},"body":{"index.html":{}}}],["searching",{"_index":474,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["second",{"_index":76,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["see",{"_index":282,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["selector",{"_index":535,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["serve",{"_index":614,"title":{},"body":{"interfaces/PersianService.html":{},"index.html":{}}}],["server",{"_index":714,"title":{},"body":{"index.html":{}}}],["service",{"_index":134,"title":{},"body":{"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["service.ts",{"_index":612,"title":{},"body":{"interfaces/PersianService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":617,"title":{},"body":{"interfaces/PersianService.html":{}}}],["service.ts:6",{"_index":618,"title":{},"body":{"interfaces/PersianService.html":{}}}],["service.ts:8",{"_index":619,"title":{},"body":{"interfaces/PersianService.html":{}}}],["services",{"_index":613,"title":{},"body":{"interfaces/PersianService.html":{}}}],["services/persian",{"_index":41,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["set",{"_index":530,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["sets",{"_index":516,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["setting",{"_index":528,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["shows",{"_index":497,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["simple",{"_index":621,"title":{},"body":{"interfaces/SimpleDateInterface.html":{}}}],["simpledate.interface",{"_index":265,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["simpledateinterface",{"_index":191,"title":{"interfaces/SimpleDateInterface.html":{}},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["simply",{"_index":529,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"index.html":{}}}],["special",{"_index":475,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["specific",{"_index":517,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["specified",{"_index":472,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["splits",{"_index":492,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["stack",{"_index":117,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["start",{"_index":212,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["started",{"_index":705,"title":{"index.html":{}},"body":{}}],["startfromzero",{"_index":375,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["starting",{"_index":373,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["starts",{"_index":183,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["statements",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":272,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["stored",{"_index":730,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{}}}],["string(value",{"_index":50,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["stuff",{"_index":396,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["success",{"_index":546,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["super(...params",{"_index":114,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["super.transform(value",{"_index":104,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["symbols",{"_index":445,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["symbols_pattern",{"_index":460,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["t",{"_index":96,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"miscellaneous/enumerations.html":{}}}],["table",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":526,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["targetgyear",{"_index":251,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["targetjyear",{"_index":389,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["test",{"_index":739,"title":{},"body":{"index.html":{}}}],["tested",{"_index":229,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["tests",{"_index":738,"title":{},"body":{"index.html":{}}}],["text",{"_index":12,"title":{},"body":{"pipes/EnNumPipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["texts",{"_index":449,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["this._jday",{"_index":280,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this._jmonth",{"_index":278,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this._jyear",{"_index":276,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.arabictopersian(value",{"_index":610,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["this.converttojalali(this.date",{"_index":275,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.date",{"_index":239,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.firstdayofjyearinmarch(jalaliyear",{"_index":343,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.firstdayofjyearinmarch(jyear",{"_index":309,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.georgianyeartojalaliyear(georgianyear",{"_index":338,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.isvalidjday(jyear",{"_index":407,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["this.isvalidjmonth(jmonth",{"_index":406,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["this.isvalidjyear(jyear",{"_index":405,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["this.message",{"_index":126,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["this.numberofpassedgdays(gdate",{"_index":340,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.numberofpassedgdays(new",{"_index":307,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.numofgleapyears(gyear",{"_index":333,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.persiannumberservice.toenglish(value",{"_index":51,"title":{},"body":{"pipes/EnNumPipe.html":{}}}],["this.persiannumberservice.topersian(value",{"_index":62,"title":{},"body":{"pipes/FaNumPipe.html":{}}}],["this.validator.numofjleapyears(jyear",{"_index":332,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["those",{"_index":471,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"interfaces/PersianService.html":{}}}],["three",{"_index":623,"title":{},"body":{"interfaces/SimpleDateInterface.html":{}}}],["throw",{"_index":100,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"injectables/PersianNumberService.html":{}}}],["thrown",{"_index":119,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["toenglish",{"_index":576,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["toenglish(value",{"_index":582,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["together",{"_index":625,"title":{},"body":{"interfaces/SimpleDateInterface.html":{}}}],["toman",{"_index":73,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"miscellaneous/enumerations.html":{}}}],["topersian",{"_index":559,"title":{},"body":{"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["topersian(value",{"_index":565,"title":{},"body":{"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["trace",{"_index":118,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["transform",{"_index":18,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["transform(value",{"_index":19,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["true",{"_index":361,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["ts",{"_index":122,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["tslib",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":693,"title":{},"body":{"miscellaneous/functions.html":{}}}],["two",{"_index":688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":25,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["type.tolowercase",{"_index":98,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["typedoc",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":71,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["u0629\\u0630",{"_index":457,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["u0639\\u0641",{"_index":458,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["u064d\\u064e\\u064f\\u067e\\u0670\\u0686\\u0698\\u200c\\u0621",{"_index":456,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["u0654",{"_index":459,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["u06a9\\u06af\\u06c0\\u06cc\\u060c\\u062a\\u062b\\u062c\\u062d\\u062e\\u062f\\u063a\\u064a\\u064b\\u064c",{"_index":455,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["u06f0",{"_index":587,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f1",{"_index":590,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f2",{"_index":591,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f3",{"_index":592,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f4",{"_index":593,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f5",{"_index":594,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f6",{"_index":595,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f7",{"_index":596,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f8",{"_index":597,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f9",{"_index":588,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["undefined",{"_index":508,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["unit",{"_index":737,"title":{},"body":{"index.html":{}}}],["until",{"_index":250,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["up",{"_index":234,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["use",{"_index":271,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"index.html":{}}}],["useexisting",{"_index":534,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["using",{"_index":172,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["v8",{"_index":121,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["valid",{"_index":177,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["validate",{"_index":537,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["validate(control",{"_index":540,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["validating",{"_index":399,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validation",{"_index":395,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["validationerror",{"_index":547,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["validator",{"_index":148,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["validator.service",{"_index":266,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["validator.service.ts",{"_index":348,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"coverage.html":{}}}],["validator.service.ts:112",{"_index":369,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:122",{"_index":365,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:14",{"_index":393,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:15",{"_index":358,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:24",{"_index":383,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:36",{"_index":388,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:79",{"_index":360,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:88",{"_index":381,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:96",{"_index":376,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validatorfn",{"_index":702,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":549,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["validators.ts",{"_index":651,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["value",{"_index":27,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["value.length",{"_index":418,"title":{},"body":{"pipes/NationalCodePipe.html":{},"injectables/PersianNumberService.html":{}}}],["value.match(new",{"_index":601,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["value.match(persianletterservice._stringvalidationregex(options",{"_index":504,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["value.replace(/٤/g",{"_index":603,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["value.substring(0",{"_index":419,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["value.substring(3",{"_index":420,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["value.tostring",{"_index":609,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["value.trim",{"_index":511,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["value[9",{"_index":422,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["values",{"_index":464,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["vase",{"_index":269,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["versa",{"_index":270,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["version",{"_index":711,"title":{},"body":{"index.html":{}}}],["via",{"_index":741,"title":{},"body":{"index.html":{}}}],["want",{"_index":377,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PersianService.html":{}}}],["whitespaces",{"_index":446,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["whitespaces_pattern",{"_index":462,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["winter",{"_index":218,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["within",{"_index":213,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["without",{"_index":400,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["wrapper",{"_index":543,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["x",{"_index":696,"title":{},"body":{"miscellaneous/functions.html":{}}}],["year",{"_index":181,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["years",{"_index":237,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["yes",{"_index":165,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["zero",{"_index":184,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["zone.js",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":757,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"pipes/EnNumPipe.html":{"url":"pipes/EnNumPipe.html","title":"pipe - EnNumPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EnNumPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Pipes/enNum.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Replaces all persian numbers in the text to the english numbers.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        enNum\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Pipes/enNum.pipe.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a string containing one or more non-english digits. Could be an empty string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        input value replaced all persian digits with english digits.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {PersianNumberService} from '../Services/persian-number.service';\n\n/**\n * Replaces all persian numbers in the text to the english numbers.\n */\n@Pipe({name: 'enNum'})\nexport class EnNumPipe  implements PipeTransform {\n\n  constructor(private persianNumberService: PersianNumberService) {}\n\n  /**\n   * @return input value replaced all persian digits with english digits.\n   * @param value a string containing one or more non-english digits. Could be an empty string.\n   */\n  transform(value: string): string {\n    value = String(value);\n    return this.persianNumberService.toEnglish(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FaNumPipe.html":{"url":"pipes/FaNumPipe.html","title":"pipe - FaNumPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FaNumPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Pipes/faNum.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Replaces all arabic and english numbers with persian numbers.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        faNum\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Pipes/faNum.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a number or string (probably empty).\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a string that all english and arabic numbers in the input has been replaced with persian digits.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform} from '@angular/core';\nimport {PersianNumberService} from '../Services/persian-number.service';\n\n/**\n * Replaces all arabic and english numbers with persian numbers.\n */\n@Pipe({name: 'faNum'})\nexport class FaNumPipe implements PipeTransform {\n\n  constructor(private persianNumberService: PersianNumberService) {}\n\n  /**\n   *\n   * @param value a number or string (probably empty).\n   * @return a string that all english and arabic numbers in the input has been replaced with persian digits.\n   */\n  transform(value: string | number): string {\n    value = String(value);\n    return this.persianNumberService.toPersian(value);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IRCurrencyPipe.html":{"url":"pipes/IRCurrencyPipe.html","title":"pipe - IRCurrencyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IRCurrencyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Pipes/IRCurrency.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Formats input as a currency value.\ndefault type is rial. You can choose on of the following currency types:\n  r or rial for ریال\n\n  to or toman for تومان  This pipe extends DecimalPipe, so as second parameter, you can enter your desired formatting string. Default formatter is: 1.0-0\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        irc\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number, type: string, digitInfo: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Pipes/IRCurrency.pipe.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        a number of a string only contains digits\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'rial'\n                                    \n\n                                    \n                                        currency type\n\n                                    \n                                \n                                \n                                    digitInfo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '1.0-0'\n                                    \n\n                                    \n                                        decimal pipe formatter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            1925100 -&gt; 1,925,100 ریال\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform} from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\n\nexport enum IRCurrencies {\n  rial = 'ریال',\n  r = 'ریال',\n  toman = 'تومان',\n  t = 'تومان'\n}\n\n/**\n * Formats input as a currency value.\n * default type is rial. You can choose on of the following currency types:\n *\n *      r or rial for ریال\n *\n *      to or toman for تومان\n *\n *  This pipe extends DecimalPipe, so as second parameter, you can enter your desired formatting string. Default formatter is: 1.0-0\n */\n@Pipe({name: 'irc'})\nexport class IRCurrencyPipe extends DecimalPipe implements PipeTransform {\n\n  /**\n   * @param value a number of a string only contains digits\n   * @param type currency type\n   * @param digitInfo decimal pipe formatter\n   * @example 1925100 -> 1,925,100 ریال\n   */\n  transform(value: string | number, type: string = 'rial', digitInfo: string = '1.0-0') {\n    value = Number(value);\n    type = type.toLowerCase();\n    if (isNaN(value)) { throw new Error(`${value} is not a acceptable number`); }\n    return super.transform(value, digitInfo) + ' ' + IRCurrencies[type];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidJalaliDateError.html":{"url":"classes/InvalidJalaliDateError.html","title":"class - InvalidJalaliDateError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidJalaliDateError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/JDate/InvalidJalaliDate.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(...params: any[])\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-persian/src/lib/JDate/InvalidJalaliDate.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidJalaliDateError extends Error {\n  constructor(...params) {\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    // @ts-ignore\n    if (Error.captureStackTrace) {\n      // @ts-ignore\n      Error.captureStackTrace(this, InvalidJalaliDateError);\n    }\n\n    this.message = 'Invalid jalali date.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidServiceInputError.html":{"url":"classes/InvalidServiceInputError.html","title":"class - InvalidServiceInputError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidServiceInputError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Services/InvalidServiceInput.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(...params: any[])\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-persian/src/lib/Services/InvalidServiceInput.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidServiceInputError extends Error {\n  constructor(...params) {\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    // @ts-ignore\n    if (Error.captureStackTrace) {\n      // @ts-ignore\n      Error.captureStackTrace(this, InvalidServiceInputError);\n    }\n\n    this.message = 'Invalid value has been passed to the service.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JalaliDateCalculatorService.html":{"url":"injectables/JalaliDateCalculatorService.html","title":"injectable - JalaliDateCalculatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JalaliDateCalculatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _jDay\n                            \n                            \n                                    Private\n                                    Readonly\n                                _jMonth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _jYear\n                            \n                            \n                                    Public\n                                validator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToGeorgian\n                            \n                            \n                                convertToJalali\n                            \n                            \n                                createGDateFromDays\n                            \n                            \n                                firstDayOfJYearInMarch\n                            \n                            \n                                GeorgianYearToJalaliYear\n                            \n                            \n                                jalaliYearToGeorgianYear\n                            \n                            \n                                numberOfPassedGDays\n                            \n                            \n                                numberOfPassedJDays\n                            \n                            \n                                numOfGLeapYears\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    jDay\n                                \n                                \n                                    jMonth\n                                \n                                \n                                    jYear\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date?: Date, validator: JalaliDateValidatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Georgian date as a regular javascript Date object.\n\n                                                        \n                                                \n                                                \n                                                        validator\n                                                  \n                                                        \n                                                                        JalaliDateValidatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                jalaliDateValidator injected using DI.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToGeorgian\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToGeorgian(jYear: number, jMonth: number, jDay: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:170\n                \n            \n\n\n            \n                \n                    Converts a valid jalali date to a javascript Date object representing a equivalent Georgian date.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a full Jalali year like 1397\n\n                                    \n                                \n                                \n                                    jMonth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        starts from zero\n\n                                    \n                                \n                                \n                                    jDay\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        starts from 1\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToJalali\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToJalali(gDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:129\n                \n            \n\n\n            \n                \n                    this method converts Georgian date to the jalali date. Output is an object implementing SimpleDateInterface.\nATTENTION: month number starts from 0, but day number starts from 1. Just like native javascript Date object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Georgian date as a javascript Date object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SimpleDateInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGDateFromDays\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGDateFromDays(numOfDays: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:77\n                \n            \n\n\n            \n                \n                    Creates a javascript Date object from number of passed days in Georgian calendar representing Georgian date.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    numOfDays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            firstDayOfJYearInMarch\n                        \n                        \n                    \n                \n            \n            \n                \nfirstDayOfJYearInMarch(jYear)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:100\n                \n            \n\n\n            \n                \n                    first day of the Farvardin month in Jalali calendar is in March month. This method returns the day number of new jalali year in March.\nThe day number starts from 1 not zero and is equal to the real numbers in the calendar.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GeorgianYearToJalaliYear\n                        \n                        \n                    \n                \n            \n            \n                \nGeorgianYearToJalaliYear(gYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:118\n                \n            \n\n\n            \n                \n                    Converts georgian year to the jalali year. Output year is the jalali year that start within the Georgian year.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full georgian year like 2018\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            jalaliYearToGeorgianYear\n                        \n                        \n                    \n                \n            \n            \n                \njalaliYearToGeorgianYear(jYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:110\n                \n            \n\n\n            \n                \n                    Converts jalali year number to the georgian year. Output year is the georgian year that jalali year starts within it, not the year\nthat starts in the winter of jalali year.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numberOfPassedGDays\n                        \n                        \n                    \n                \n            \n            \n                \nnumberOfPassedGDays(gDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:54\n                \n            \n\n\n            \n                \n                    Calculates the Julian Day number from Gregorian or Julian calendar dates.\nOnly some code cleaning applied to the source code.\nThe procedure was tested to be good since 1 March, -100100 (of both calendars) up to a few million years into the future.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    gDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.date\n                                    \n\n                                    \n                                        an instance of javascript date representing a Georgian date.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numberOfPassedJDays\n                        \n                        \n                    \n                \n            \n            \n                \nnumberOfPassedJDays(jYear: number, jMonth: number, jDay: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:68\n                \n            \n\n\n            \n                \n                    Returns number of passed days from source day in jalali calendar to the given jalali date.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                                \n                                    jMonth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        starts from zero\n\n                                    \n                                \n                                \n                                    jDay\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        day number starts from one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numOfGLeapYears\n                        \n                        \n                    \n                \n            \n            \n                \nnumOfGLeapYears(targetGYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:91\n                \n            \n\n\n            \n                \n                    This function returns number of passed leap years from AD 621 until targetGYear.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    targetGYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is full year number like 2018\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _jDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _jMonth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _jYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JalaliDateValidatorService\n\n                        \n                    \n                    \n                        \n                            Default value : new JalaliDateValidatorService()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:25\n                            \n                        \n\n                \n                    \n                        jalaliDateValidator injected using DI.\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        jDay\n                    \n                \n\n                \n                    \n                        getjDay()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jMonth\n                    \n                \n\n                \n                    \n                        getjMonth()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jYear\n                    \n                \n\n                \n                    \n                        getjYear()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:40\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {div, mod} from './ArithmeticUtils';\nimport {InvalidJalaliDateError} from './InvalidJalaliDate.error';\nimport {SimpleDateInterface} from './SimpleDate.interface';\nimport {JalaliDateValidatorService} from './jalali-date-validator.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * This class converts Jalali date to Georgian and vase versa. You can use all of the methods as static methods.\n *\n */\nexport class JalaliDateCalculatorService {\n\n  private readonly _jYear: number;\n  private readonly _jMonth: number;\n  private readonly _jDay: number;\n\n  /**\n   *\n   * @param date Georgian date as a regular javascript Date object.\n   * @param validator jalaliDateValidator injected using DI.\n   */\n  constructor(private date?: Date, public validator: JalaliDateValidatorService = new JalaliDateValidatorService(),) {\n    if (this.date) {\n      const convrtedDate = this.convertToJalali(this.date);\n      this._jYear = convrtedDate.year;\n      this._jMonth = convrtedDate.month;\n      this._jDay = convrtedDate.day;\n    }\n  }\n\n  get jDay(): number {\n    return this._jDay;\n  }\n  get jMonth(): number {\n    return this._jMonth;\n  }\n  get jYear(): number {\n    return this._jYear;\n  }\n\n  /**\n   * Calculates the Julian Day number from Gregorian or Julian calendar dates.\n   *\n   * Only some code cleaning applied to the source code.\n   *\n   * The procedure was tested to be good since 1 March, -100100 (of both calendars) up to a few million years into the future.\n   * @param gDate an instance of javascript date representing a Georgian date.\n   * @see https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L195\n\n   */\n  numberOfPassedGDays(gDate: Date = this.date): number {\n    const gMonth = gDate.getMonth() - 7;\n    const gYear = gDate.getFullYear() + 100100;\n    const gMonthDiv = div(gMonth, 6);\n    const result = div((gYear + gMonthDiv) * 1461, 4) + div(153 * mod(gMonth + 17, 12) + 2, 5) + gDate.getDate() - 34840408;\n    return result - div(div(gYear + gMonthDiv, 100) * 3, 4) + 752;\n  }\n\n  /**\n   * Returns number of passed days from source day in jalali calendar to the given jalali date.\n   * @param jYear full jalali year like 1397\n   * @param jMonth starts from zero\n   * @param jDay day number starts from one\n   */\n  numberOfPassedJDays(jYear: number, jMonth: number, jDay: number): number {\n    return this.numberOfPassedGDays(new Date(this.jalaliYearToGeorgianYear(jYear), 2, this.firstDayOfJYearInMarch(jYear))) +\n      jMonth * 31 - div(jMonth + 1, 7) * (jMonth - 6) + jDay - 1;\n  }\n\n  /**\n   * Creates a javascript Date object from number of passed days in Georgian calendar representing Georgian date.\n   * @see https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L213\n   */\n  createGDateFromDays(numOfDays: number): Date {\n    const j = (4 * numOfDays + 139361631) + div(div(4 * numOfDays + 183187720, 146097) * 3, 4) * 4 - 3908;\n    const i = div(mod(j, 1461), 4) * 5 + 308;\n    const gDay = div(mod(i, 153), 5) + 1;\n    const gMonth = mod(div(i, 153), 12);\n    const gYear = div(j, 1461) - 100100 + div(7 - gMonth, 6);\n    return new Date(gYear, gMonth, gDay);\n  }\n\n  /**\n   * This function returns number of passed leap years from AD 621 until targetGYear.\n   * @param targetGYear is full year number like 2018\n   * @see https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L110\n   */\n  numOfGLeapYears(targetGYear: number): number {\n    return div(targetGYear, 4) - div((div(targetGYear, 100) + 1) * 3, 4) - 150;\n  }\n\n  /**\n   * first day of the Farvardin month in Jalali calendar is in March month. This method returns the day number of new jalali year in March.\n   * The day number starts from 1 not zero and is equal to the real numbers in the calendar.\n   * @param jYear full jalali year like 1397\n   */\n  firstDayOfJYearInMarch(jYear): number {\n    const gYear = jYear + 621;\n    return this.validator.numOfJLeapYears(jYear) - this.numOfGLeapYears(gYear) + 20;\n  }\n\n  /**\n   * Converts jalali year number to the georgian year. Output year is the georgian year that jalali year starts within it, not the year\n   * that starts in the winter of jalali year.\n   * @param jYear full jalali year like 1397\n   */\n  jalaliYearToGeorgianYear(jYear: number): number {\n    return jYear + 621;\n  }\n\n  /**\n   * Converts georgian year to the jalali year. Output year is the jalali year that start within the Georgian year.\n   * @param gYear full georgian year like 2018\n   */\n  GeorgianYearToJalaliYear(gYear: number): number {\n    return gYear - 621;\n  }\n\n  /**\n   * this method converts Georgian date to the jalali date. Output is an object implementing SimpleDateInterface.\n   *\n   * ATTENTION: month number starts from 0, but day number starts from 1. Just like native javascript Date object.\n   * @param gDate Georgian date as a javascript Date object.\n   * @see https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L149\n   */\n  convertToJalali(gDate: Date): SimpleDateInterface {\n    const georgianYear = gDate.getFullYear();\n    let jalaliYear = this.GeorgianYearToJalaliYear(georgianYear);\n    const passedDays = this.numberOfPassedGDays(gDate);\n    const numOfPassedDaysTo1Farvardin = this.numberOfPassedGDays(new Date(georgianYear, 2, this.firstDayOfJYearInMarch(jalaliYear)));\n\n    let jalaliDay: number;\n    let jalaliMonth: number;\n\n    // Find number of days that passed since 1 Farvardin.\n    let numOfDayInJYear = passedDays - numOfPassedDaysTo1Farvardin;\n    if (numOfDayInJYear >= 0) {\n      if (numOfDayInJYear \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JalaliDateValidatorService.html":{"url":"injectables/JalaliDateValidatorService.html","title":"injectable - JalaliDateValidatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JalaliDateValidatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _maxAcceptableYear\n                            \n                            \n                                    Private\n                                    Static\n                                _minAcceptableYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isJYearLeap\n                            \n                            \n                                isValidJDate\n                            \n                            \n                                isValidJDay\n                            \n                            \n                                isValidJMonth\n                            \n                            \n                                isValidJYear\n                            \n                            \n                                jMonthLength\n                            \n                            \n                                numOfJLeapYears\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isJYearLeap\n                        \n                        \n                    \n                \n            \n            \n                \nisJYearLeap(jYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:79\n                \n            \n\n\n            \n                \n                    If JYear is a leap year in jalali Calendar, return true. We using the fact that if a year is leap, number of leap years until that year\nand the year after it is not equal.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : full jalali year like: 1397\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidJDate\n                        \n                        \n                    \n                \n            \n            \n                \nisValidJDate(jYear, jMonth, jDay)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:122\n                \n            \n\n\n            \n                \n                    If Jalali date is not a valid Jalali date, return false. otherwise returns true.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full year number like: 1397\n\n                                    \n                                \n                                \n                                    jMonth\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        starts from zero\n\n                                    \n                                \n                                \n                                    jDay\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        starts from one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidJDay\n                        \n                        \n                    \n                \n            \n            \n                \nisValidJDay(jYear: number, jMonth: number, jDay: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:112\n                \n            \n\n\n            \n                \n                    Checks if day number is in valid range according to the given year and month.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                                \n                                    jMonth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        month number starting from zero\n\n                                    \n                                \n                                \n                                    jDay\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        day number starting from one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidJMonth\n                        \n                        \n                    \n                \n            \n            \n                \nisValidJMonth(jMonth: number, startFromZero: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:96\n                \n            \n\n\n            \n                \n                    Checks if jalali month is in valid range or not. In default, jMonth should start from zero.\nIf you want to start month number from one instead of zero, you should make startFromZero parameter to false.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    jMonth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    startFromZero\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidJYear\n                        \n                        \n                    \n                \n            \n            \n                \nisValidJYear(jYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:88\n                \n            \n\n\n            \n                \n                    Checks if jalali year is in acceptable range or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            jMonthLength\n                        \n                        \n                    \n                \n            \n            \n                \njMonthLength(jYear: number, jMonth)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:24\n                \n            \n\n\n            \n                \n                    Returns number of days in a given month counting from 1.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                                \n                                    jMonth\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of month from 0 for Farvardin to 11 for Esfand.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numOfJLeapYears\n                        \n                        \n                    \n                \n            \n            \n                \nnumOfJLeapYears(targetJYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:36\n                \n            \n\n\n            \n                \n                    Calculates the number of the leap years in jalali Calendar.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    targetJYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        should be full year like: 1397 and should be between -61 to 3177.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _maxAcceptableYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3177\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _minAcceptableYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -61\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {div, mod} from './ArithmeticUtils';\nimport {InvalidJalaliDateError} from './InvalidJalaliDate.error';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Methods of this Service doing validation stuff on a Jalali date. You can use this Service using DI in all around of your app for\n * validating Jalali dates without needing to convert them to the Georgian Date.\n */\nexport class JalaliDateValidatorService {\n\n  private static _minAcceptableYear = -61;\n  private static _maxAcceptableYear = 3177;\n\n  constructor() { }\n\n  /**\n   * Returns number of days in a given month counting from 1.\n   * @param jYear full jalali year like 1397\n   * @param jMonth number of month from 0 for Farvardin to 11 for Esfand.\n   */\n  jMonthLength(jYear: number, jMonth): number {\n    if (jMonth = JalaliDateValidatorService._minAcceptableYear && jYear = minMonthNumber && jMonth  0;\n  }\n\n  /**\n   * If Jalali date is not a valid Jalali date, return false. otherwise returns true.\n   * @param jYear full year number like: 1397\n   * @param jMonth starts from zero\n   * @param jDay starts from one\n   */\n  isValidJDate(jYear, jMonth, jDay): boolean {\n    return this.isValidJYear(jYear) && this.isValidJMonth(jMonth) && this.isValidJDay(jYear, jMonth, jDay);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NationalCodePipe.html":{"url":"pipes/NationalCodePipe.html","title":"pipe - NationalCodePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  NationalCodePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Pipes/nationalCode.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Formats a 10-digit number or string to national code format.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        nationalCode\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Pipes/nationalCode.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a 10-digit number or a string only contains 10 digits.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            001-236547-5\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform} from '@angular/core';\n\n/**\n * Formats a 10-digit number or string to national code format.\n */\n@Pipe({name: 'nationalCode'})\nexport class NationalCodePipe implements PipeTransform {\n\n  /**\n   *\n   * @param value a 10-digit number or a string only contains 10 digits.\n   * @example 001-236547-5\n   */\n  transform(value: string | number): any {\n    value = String(value);\n    if (value.length !== 10) { throw new Error(`${value} is not a acceptable national code.`); }\n    return `${value.substring(0, 3)}-${value.substring(3, 9)}-${value[9]}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxPersianModule.html":{"url":"modules/NgxPersianModule.html","title":"module - NgxPersianModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxPersianModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/ngx-persian.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: []\n})\nexport class NgxPersianModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PLOptions.html":{"url":"interfaces/PLOptions.html","title":"interface - PLOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PLOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Services/persian-letter.service.ts\n        \n\n            \n                Description\n            \n            \n                isPersian options parameter object should implement this interface. Fields descriptions are in the isPersian method document.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        enDigits\n                                \n                                \n                                            Optional\n                                        persianDigits\n                                \n                                \n                                            Optional\n                                        symbols\n                                \n                                \n                                            Optional\n                                        whitespaces\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enDigits\n                                    \n                                \n                                \n                                    \n                                        enDigits:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persianDigits\n                                    \n                                \n                                \n                                    \n                                        persianDigits:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbols\n                                    \n                                \n                                \n                                    \n                                        symbols:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitespaces\n                                    \n                                \n                                \n                                    \n                                        whitespaces:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {PersianService} from './persian-service';\nimport {PersianNumberService} from './persian-number.service';\n\n/**\n * isPersian options parameter object should implement this interface. Fields descriptions are in the isPersian method document.\n */\nexport interface PLOptions {\n  persianDigits?: boolean;\n  enDigits?: boolean;\n  symbols?: boolean;\n  whitespaces?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * This service brings validation of persian texts to the program and let you convert some not-persian letters with persian ones.\n *\n */\nexport class PersianLetterService implements PersianService {\n\n  static PERSIAN_LETTERS_PATTERN = '\\u06A9\\u06AF\\u06C0\\u06CC\\u060C\\u062A\\u062B\\u062C\\u062D\\u062E\\u062F\\u063A\\u064A\\u064B\\u064C' +\n                                       '\\u064D\\u064E\\u064F\\u067E\\u0670\\u0686\\u0698\\u200C\\u0621-\\u0629\\u0630-\\u0639\\u0641-\\u0654';\n  private static SYMBOLS_PATTERN = '؟$-/:-?،{-~!\"^_`\\\\[\\\\]';\n  static WHITESPACES_PATTERN = '\\\\s';\n\n  /**\n   * According to the options values, returns a RegExp object. The regex pattern of it contains regex of finding each of\n   * elements those specified in the options object plus persian letters.\n   * @return a RegExp object that can use in searching a string for special characters (persian letters and others specified in the options)\n   * @param options\n   * @private\n   */\n  private static _stringValidationRegex(options: PLOptions): RegExp {\n    let result = '';\n    if (options.enDigits) { result += '0-9'; }\n    if (options.symbols) { result += PersianLetterService.SYMBOLS_PATTERN; }\n    if (options.whitespaces) { result += PersianLetterService.WHITESPACES_PATTERN; }\n    if (options.persianDigits) { result += PersianNumberService.persianNumberPattern; }\n    // language=JSRegexp\n    return new RegExp(`[${result + PersianLetterService.PERSIAN_LETTERS_PATTERN}]`, 'g');\n  }\n\n  /**\n   * This method gets regex of persian letters and other chars specified in the options and then splits the input value by that regex.\n   * If match result is null - there is no match - returns 0. otherwise returns length of the match array that shows number of matched\n   * occurred in the input value.\n   * @param value\n   * @param options\n   * @return a number greater equal to 0 representing number of matches occurred in the input value.\n   * @private\n   */\n  private static _getMatchedPatternLength(value: string, options: PLOptions): number {\n    const matchResult = value.match(PersianLetterService._stringValidationRegex(options));\n    return matchResult ? matchResult.length : 0;\n  }\n\n  /**\n   * If input value contains any persian letter or is an empty string, returns true. otherwise returns false.\n   * @param value\n   */\n  containsPersian(value: string): boolean {\n    if (value === undefined || value === null) { return false; }\n    // language=JSRegexp\n    const persianRegex = new RegExp(`[${PersianLetterService.PERSIAN_LETTERS_PATTERN}]`);\n    return value.trim() ? persianRegex.test(value) : true;\n  }\n\n  /**\n   * Checks if input value is a persian text or not. If input value contains any letter that is not persian, the output will be false.\n   * Result of validation on existence  of other characters controls by options parameter.\n   * @param value\n   * @param options controlling validation result on existence  of other characters controls by options parameter. Fields:\n   *        persianDigits: if sets to true, validation result will be true if input value contains persian digits plus persian letters\n   *        enDigits: if sets to true, validation result will be true if input value contains english digits plus persian letters\n   *        symbols: if sets to true, validation result will be true if input value contains specific symbols plus persian letters.\n   *                 symbols list: ?$-/:؟!~\"'^_-[]{}()%&*>\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PersianLetterDirective.html":{"url":"directives/PersianLetterDirective.html","title":"directive - PersianLetterDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PersianLetterDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Validators/persian-directives.ts\n        \n\n            \n                Description\n            \n            \n                You can add PersianLetterDirective property to your input tag for using persianNumbersValidator function on its value\nFor setting options value, you can simply set PersianLetterDirective property equal to the PLOptions object.\n\n            \n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: PersianLetterDirective }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        persianLettersValidator\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                PersianLetterDirective\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        PersianLetterDirective\n                    \n                \n                \n                    \n                        Type :         PLOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Validators/persian-directives.ts:38\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Validators/persian-directives.ts:45\n                \n            \n\n\n            \n                \n                    Only a wrapper for persianLettersValidator validator function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        null for success or ValidationError for invalid inputs\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\nimport {persianLettersValidator, persianNumbersValidator} from './persian-validators';\nimport {PLOptions} from '../Services/persian-letter.service';\n\n\n/**\n * You can add PersianNumbersDirective property to your input tag for using persianNumbersValidator function on its value.\n * @see persianNumbersValidator\n */\n@Directive({\n  selector: 'PersianNumbersDirective',\n  providers: [{provide: NG_VALIDATORS, useExisting: PersianNumbersDirective}]\n})\nexport class PersianNumbersDirective implements Validator {\n\n  /**\n   * Only a wrapper for persianNumbersValidator validator function.\n   * @param control\n   * @return null for success or ValidationError for invalid inputs\n   */\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    return persianNumbersValidator()(control);\n  }\n}\n\n/**\n * You can add PersianLetterDirective property to your input tag for using persianNumbersValidator function on its value\n * For setting options value, you can simply set PersianLetterDirective property equal to the PLOptions object.\n * @see persianLettersValidator\n */\n@Directive({\n  selector: 'persianLettersValidator',\n  providers: [{provide: NG_VALIDATORS, useExisting: PersianLetterDirective}]\n})\nexport class PersianLetterDirective implements Validator {\n\n  @Input('PersianLetterDirective') options: PLOptions;\n\n  /**\n   * Only a wrapper for persianLettersValidator validator function.\n   * @param control\n   * @return null for success or ValidationError for invalid inputs\n   */\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    return persianLettersValidator(this.options)(control);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersianLetterService.html":{"url":"injectables/PersianLetterService.html","title":"injectable - PersianLetterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PersianLetterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Services/persian-letter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                PERSIAN_LETTERS_PATTERN\n                            \n                            \n                                    Private\n                                    Static\n                                SYMBOLS_PATTERN\n                            \n                            \n                                    Static\n                                WHITESPACES_PATTERN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _getMatchedPatternLength\n                            \n                            \n                                    Private\n                                    Static\n                                _stringValidationRegex\n                            \n                            \n                                containsPersian\n                            \n                            \n                                isPersian\n                            \n                            \n                                toPersian\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            _getMatchedPatternLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMatchedPatternLength(value: string, options: PLOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:55\n                \n            \n\n\n            \n                \n                    This method gets regex of persian letters and other chars specified in the options and then splits the input value by that regex.\nIf match result is null - there is no match - returns 0. otherwise returns length of the match array that shows number of matched\noccurred in the input value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                PLOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        a number greater equal to 0 representing number of matches occurred in the input value.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            _stringValidationRegex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _stringValidationRegex(options: PLOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:36\n                \n            \n\n\n            \n                \n                    According to the options values, returns a RegExp object. The regex pattern of it contains regex of finding each of\nelements those specified in the options object plus persian letters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PLOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RegExp\n\n                    \n                    \n                        a RegExp object that can use in searching a string for special characters (persian letters and others specified in the options)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsPersian\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:64\n                \n            \n\n\n            \n                \n                    If input value contains any persian letter or is an empty string, returns true. otherwise returns false.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPersian\n                        \n                        \n                    \n                \n            \n            \n                \nisPersian(value: string, options: PLOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:83\n                \n            \n\n\n            \n                \n                    Checks if input value is a persian text or not. If input value contains any letter that is not persian, the output will be false.\nResult of validation on existence  of other characters controls by options parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    options\n                                    \n                                                PLOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {\n                                                  persianDigits: false,\n                                                  enDigits: false,\n                                                  symbols: true,\n                                                  whitespaces: true}\n                                    \n\n                                    \n                                        controlling validation result on existence  of other characters controls by options parameter. Fields:\npersianDigits: if sets to true, validation result will be true if input value contains persian digits plus persian letters\nenDigits: if sets to true, validation result will be true if input value contains english digits plus persian letters\nsymbols: if sets to true, validation result will be true if input value contains specific symbols plus persian letters.\nsymbols list: ?$-/:؟!~\"'^_-[]{}()%&*>\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toPersian\n                        \n                        \n                    \n                \n            \n            \n                \ntoPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:96\n                \n            \n\n\n            \n                \n                    Converts arabic letters: ي and ك to persian corresponding letters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PERSIAN_LETTERS_PATTERN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : '\\u06A9\\u06AF\\u06C0\\u06CC\\u060C\\u062A\\u062B\\u062C\\u062D\\u062E\\u062F\\u063A\\u064A\\u064B\\u064C' +\n                                       '\\u064D\\u064E\\u064F\\u067E\\u0670\\u0686\\u0698\\u200C\\u0621-\\u0629\\u0630-\\u0639\\u0641-\\u0654'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            SYMBOLS_PATTERN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '؟$-/:-?،{-~!\"^_`\\\\[\\\\]'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WHITESPACES_PATTERN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\\\s'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {PersianService} from './persian-service';\nimport {PersianNumberService} from './persian-number.service';\n\n/**\n * isPersian options parameter object should implement this interface. Fields descriptions are in the isPersian method document.\n */\nexport interface PLOptions {\n  persianDigits?: boolean;\n  enDigits?: boolean;\n  symbols?: boolean;\n  whitespaces?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * This service brings validation of persian texts to the program and let you convert some not-persian letters with persian ones.\n *\n */\nexport class PersianLetterService implements PersianService {\n\n  static PERSIAN_LETTERS_PATTERN = '\\u06A9\\u06AF\\u06C0\\u06CC\\u060C\\u062A\\u062B\\u062C\\u062D\\u062E\\u062F\\u063A\\u064A\\u064B\\u064C' +\n                                       '\\u064D\\u064E\\u064F\\u067E\\u0670\\u0686\\u0698\\u200C\\u0621-\\u0629\\u0630-\\u0639\\u0641-\\u0654';\n  private static SYMBOLS_PATTERN = '؟$-/:-?،{-~!\"^_`\\\\[\\\\]';\n  static WHITESPACES_PATTERN = '\\\\s';\n\n  /**\n   * According to the options values, returns a RegExp object. The regex pattern of it contains regex of finding each of\n   * elements those specified in the options object plus persian letters.\n   * @return a RegExp object that can use in searching a string for special characters (persian letters and others specified in the options)\n   * @param options\n   * @private\n   */\n  private static _stringValidationRegex(options: PLOptions): RegExp {\n    let result = '';\n    if (options.enDigits) { result += '0-9'; }\n    if (options.symbols) { result += PersianLetterService.SYMBOLS_PATTERN; }\n    if (options.whitespaces) { result += PersianLetterService.WHITESPACES_PATTERN; }\n    if (options.persianDigits) { result += PersianNumberService.persianNumberPattern; }\n    // language=JSRegexp\n    return new RegExp(`[${result + PersianLetterService.PERSIAN_LETTERS_PATTERN}]`, 'g');\n  }\n\n  /**\n   * This method gets regex of persian letters and other chars specified in the options and then splits the input value by that regex.\n   * If match result is null - there is no match - returns 0. otherwise returns length of the match array that shows number of matched\n   * occurred in the input value.\n   * @param value\n   * @param options\n   * @return a number greater equal to 0 representing number of matches occurred in the input value.\n   * @private\n   */\n  private static _getMatchedPatternLength(value: string, options: PLOptions): number {\n    const matchResult = value.match(PersianLetterService._stringValidationRegex(options));\n    return matchResult ? matchResult.length : 0;\n  }\n\n  /**\n   * If input value contains any persian letter or is an empty string, returns true. otherwise returns false.\n   * @param value\n   */\n  containsPersian(value: string): boolean {\n    if (value === undefined || value === null) { return false; }\n    // language=JSRegexp\n    const persianRegex = new RegExp(`[${PersianLetterService.PERSIAN_LETTERS_PATTERN}]`);\n    return value.trim() ? persianRegex.test(value) : true;\n  }\n\n  /**\n   * Checks if input value is a persian text or not. If input value contains any letter that is not persian, the output will be false.\n   * Result of validation on existence  of other characters controls by options parameter.\n   * @param value\n   * @param options controlling validation result on existence  of other characters controls by options parameter. Fields:\n   *        persianDigits: if sets to true, validation result will be true if input value contains persian digits plus persian letters\n   *        enDigits: if sets to true, validation result will be true if input value contains english digits plus persian letters\n   *        symbols: if sets to true, validation result will be true if input value contains specific symbols plus persian letters.\n   *                 symbols list: ?$-/:؟!~\"'^_-[]{}()%&*>\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersianNumberService.html":{"url":"injectables/PersianNumberService.html","title":"injectable - PersianNumberService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PersianNumberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Services/persian-number.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                englishNumbersTable\n                            \n                            \n                                    Static\n                                persianNumberPattern\n                            \n                            \n                                    Private\n                                    Static\n                                persianNumbersTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _getMatchedPatternLength\n                            \n                            \n                                arabicToPersian\n                            \n                            \n                                containsPersian\n                            \n                            \n                                isPersian\n                            \n                            \n                                toEnglish\n                            \n                            \n                                toPersian\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            _getMatchedPatternLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMatchedPatternLength(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:31\n                \n            \n\n\n            \n                \n                    splits input value by persian letters and then returns length of matched array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        0 if input value has no persian letter, numbers of persian letters in the input value otherwise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            arabicToPersian\n                        \n                        \n                    \n                \n            \n            \n                \narabicToPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:50\n                \n            \n\n\n            \n                \n                    Converts arabic numbers to the persian ones.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsPersian\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:18\n                \n            \n\n\n            \n                \n                    Checks if input value contains any persian number or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if input value contains any persian number. false otherwise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPersian\n                        \n                        \n                    \n                \n            \n            \n                \nisPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:41\n                \n            \n\n\n            \n                \n                    Checks if input value contains only persian letters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEnglish\n                        \n                        \n                    \n                \n            \n            \n                \ntoEnglish(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:77\n                \n            \n\n\n            \n                \n                    Convert persian numbers in input value to the english numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toPersian\n                        \n                        \n                    \n                \n            \n            \n                \ntoPersian(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:60\n                \n            \n\n\n            \n                \n                    Converts all arabic and english numbers to the persian numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            englishNumbersTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            persianNumberPattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u06F0-\\u06F9'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            persianNumbersTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['\\u06F0', '\\u06F1', '\\u06F2', '\\u06F3', '\\u06F4', '\\u06F5', '\\u06F6', '\\u06F7', '\\u06F8', '\\u06F9']\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {PersianService} from './persian-service';\nimport {InvalidServiceInputError} from './InvalidServiceInput.error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersianNumberService implements PersianService {\n  static persianNumberPattern = '\\u06F0-\\u06F9';\n  private static persianNumbersTable = ['\\u06F0', '\\u06F1', '\\u06F2', '\\u06F3', '\\u06F4', '\\u06F5', '\\u06F6', '\\u06F7', '\\u06F8', '\\u06F9'];\n  private static englishNumbersTable = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\n  /**\n   * Checks if input value contains any persian number or not.\n   * @param value\n   * @return true if input value contains any persian number. false otherwise.\n   */\n  containsPersian(value: string): boolean {\n    if (!value) { return false; }\n    // language=JSRegexp\n    const persianRegex = new RegExp(`[${PersianNumberService.persianNumberPattern}]`);\n    return persianRegex.test(value);\n  }\n\n  /**\n   * splits input value by persian letters and then returns length of matched array.\n   * @param value\n   * @return 0 if input value has no persian letter, numbers of persian letters in the input value otherwise.\n   * @private\n   */\n  private static _getMatchedPatternLength(value: string): number {\n    // language=JSRegexp\n    const matchResult = value.match(new RegExp(`[${PersianNumberService.persianNumberPattern}]`, 'g'));\n    return matchResult ? matchResult.length : 0;\n  }\n\n  /**\n   * Checks if input value contains only persian letters.\n   * @param value\n   */\n  isPersian(value: string): boolean {\n    if (!value) {return false; }\n    return value.length === PersianNumberService._getMatchedPatternLength(value);\n  }\n\n  /**\n   * Converts arabic numbers to the persian ones.\n   * @param value\n   */\n  arabicToPersian(value: string): string {\n    return value.replace(/٤/g, PersianNumberService.persianNumbersTable[4])\n                .replace(/٥/g, PersianNumberService.persianNumbersTable[5])\n                .replace(/٦/g, PersianNumberService.persianNumbersTable[6]);\n  }\n\n  /**\n   * Converts all arabic and english numbers to the persian numbers.\n   * @param value\n   */\n  toPersian(value: string | number): string {\n    if (value === undefined || value === null) {throw new InvalidServiceInputError(); }\n    value = value.toString();\n    value = this.arabicToPersian(value);\n    let regex: RegExp;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PersianNumbersDirective.html":{"url":"directives/PersianNumbersDirective.html","title":"directive - PersianNumbersDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PersianNumbersDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Validators/persian-directives.ts\n        \n\n            \n                Description\n            \n            \n                You can add PersianNumbersDirective property to your input tag for using persianNumbersValidator function on its value.\n\n            \n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: PersianNumbersDirective }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        PersianNumbersDirective\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Validators/persian-directives.ts:22\n                \n            \n\n\n            \n                \n                    Only a wrapper for persianNumbersValidator validator function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        null for success or ValidationError for invalid inputs\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\nimport {persianLettersValidator, persianNumbersValidator} from './persian-validators';\nimport {PLOptions} from '../Services/persian-letter.service';\n\n\n/**\n * You can add PersianNumbersDirective property to your input tag for using persianNumbersValidator function on its value.\n * @see persianNumbersValidator\n */\n@Directive({\n  selector: 'PersianNumbersDirective',\n  providers: [{provide: NG_VALIDATORS, useExisting: PersianNumbersDirective}]\n})\nexport class PersianNumbersDirective implements Validator {\n\n  /**\n   * Only a wrapper for persianNumbersValidator validator function.\n   * @param control\n   * @return null for success or ValidationError for invalid inputs\n   */\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    return persianNumbersValidator()(control);\n  }\n}\n\n/**\n * You can add PersianLetterDirective property to your input tag for using persianNumbersValidator function on its value\n * For setting options value, you can simply set PersianLetterDirective property equal to the PLOptions object.\n * @see persianLettersValidator\n */\n@Directive({\n  selector: 'persianLettersValidator',\n  providers: [{provide: NG_VALIDATORS, useExisting: PersianLetterDirective}]\n})\nexport class PersianLetterDirective implements Validator {\n\n  @Input('PersianLetterDirective') options: PLOptions;\n\n  /**\n   * Only a wrapper for persianLettersValidator validator function.\n   * @param control\n   * @return null for success or ValidationError for invalid inputs\n   */\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    return persianLettersValidator(this.options)(control);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersianService.html":{"url":"interfaces/PersianService.html","title":"interface - PersianService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PersianService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Services/persian-service.ts\n        \n\n            \n                Description\n            \n            \n                All services those want to serve conversion to persian language should implement this interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    containsPersian\n                                \n                                \n                                    isPersian\n                                \n                                \n                                    toPersian\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsPersian\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPersian\n                        \n                        \n                    \n                \n            \n            \n                \nisPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toPersian\n                        \n                        \n                    \n                \n            \n            \n                \ntoPersian(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface PersianService {\n\n  isPersian(value: string): boolean;\n\n  toPersian(value: string | number): string;\n\n  containsPersian(value: string): boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDateInterface.html":{"url":"interfaces/SimpleDateInterface.html","title":"interface - SimpleDateInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDateInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/JDate/SimpleDate.interface.ts\n        \n\n            \n                Description\n            \n            \n                A simple interface for grouping three important numbers of a date together: Year, month and day.\nNumbers could be in any calendar.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDateInterface {\n  year: number;\n  month: number;\n  day: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/ArithmeticUtils.ts\n            \n            function\n            div\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/ArithmeticUtils.ts\n            \n            function\n            mod\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/ArithmeticUtils.ts\n            \n            function\n            round\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/InvalidJalaliDate.error.ts\n            \n            class\n            InvalidJalaliDateError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/SimpleDate.interface.ts\n            \n            interface\n            SimpleDateInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts\n            \n            injectable\n            JalaliDateCalculatorService\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts\n            \n            injectable\n            JalaliDateValidatorService\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/jdate.ts\n            \n            class\n            JDate\n            \n                46 %\n                (35/76)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Pipes/IRCurrency.pipe.ts\n            \n            pipe\n            IRCurrencyPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Pipes/enNum.pipe.ts\n            \n            pipe\n            EnNumPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Pipes/faNum.pipe.ts\n            \n            pipe\n            FaNumPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Pipes/nationalCode.pipe.ts\n            \n            pipe\n            NationalCodePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Services/InvalidServiceInput.error.ts\n            \n            class\n            InvalidServiceInputError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Services/persian-letter.service.ts\n            \n            injectable\n            PersianLetterService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Services/persian-letter.service.ts\n            \n            interface\n            PLOptions\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Services/persian-number.service.ts\n            \n            injectable\n            PersianNumberService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Services/persian-service.ts\n            \n            interface\n            PersianService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Validators/persian-directives.ts\n            \n            directive\n            PersianLetterDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Validators/persian-directives.ts\n            \n            directive\n            PersianNumbersDirective\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Validators/persian-validators.ts\n            \n            function\n            persianLettersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Validators/persian-validators.ts\n            \n            function\n            persianNumbersValidator\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            typedoc : ^0.14.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IRCurrencies   (projects/.../IRCurrency.pipe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-persian/src/lib/Pipes/IRCurrency.pipe.ts\n    \n        \n            \n                \n                    \n                        \n                        IRCurrencies\n                    \n                \n                        \n                            \n                                 rial\n                            \n                        \n                        \n                            \n                                Value : ریال\n                            \n                        \n                        \n                            \n                                 r\n                            \n                        \n                        \n                            \n                                Value : ریال\n                            \n                        \n                        \n                            \n                                 toman\n                            \n                        \n                        \n                            \n                                Value : تومان\n                            \n                        \n                        \n                            \n                                 t\n                            \n                        \n                        \n                            \n                                Value : تومان\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            div   (projects/.../ArithmeticUtils.ts)\n                        \n                        \n                            mod   (projects/.../ArithmeticUtils.ts)\n                        \n                        \n                            persianLettersValidator   (projects/.../persian-validators.ts)\n                        \n                        \n                            persianNumbersValidator   (projects/.../persian-validators.ts)\n                        \n                        \n                            round   (projects/.../ArithmeticUtils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-persian/src/lib/JDate/ArithmeticUtils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            div\n                        \n                        \n                    \n                \n            \n            \n                \ndiv(num1, num2)\n                \n            \n\n\n\n\n            \n                \n                    This function returns integer part of division result of num1 and num2 numbers.\nFor example: div (10, 3) is equal to 3.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    num1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mod\n                        \n                        \n                    \n                \n            \n            \n                \nmod(num1, num2)\n                \n            \n\n\n\n\n            \n                \n                    This function return arithmetic mod result of two inputs as a integer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    num1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            round\n                        \n                        \n                    \n                \n            \n            \n                \nround(x)\n                \n            \n\n\n\n\n            \n                \n                    This function removes fraction part of the number if exists. So, for example, it will turn -145,455 to -145 and\n145,455 to 145.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngx-persian/src/lib/Validators/persian-validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            persianLettersValidator\n                        \n                        \n                    \n                \n            \n            \n                \npersianLettersValidator(options, persianLetterService)\n                \n            \n\n\n\n\n            \n                \n                    Reactive form validator that checks form control value contains only persian letters and allowed characters in the options parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        see documents of isPersian method of the PersianLetterService for more info about options.\n\n                                    \n                                \n                                \n                                    persianLetterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            persianNumbersValidator\n                        \n                        \n                    \n                \n            \n            \n                \npersianNumbersValidator(persianNumberService)\n                \n            \n\n\n\n\n            \n                \n                    Reactive form validator that checks form control value contains only persian numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    persianNumberService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxPersian\nThis project was generated with Angular CLI version 7.3.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxPersianModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
