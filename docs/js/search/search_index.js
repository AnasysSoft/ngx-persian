var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/pipes/EnNumPipe.html",[0,1.006,1,2.045]],["body/pipes/EnNumPipe.html",[0,1.191,1,3.103,2,1.863,3,0.439,4,0.439,5,0.439,6,0.392,7,2.834,8,0.973,9,3.634,10,1.595,11,2.476,12,3.103,13,2.945,14,1.658,15,0.755,16,4.441,17,0.956,18,2.11,19,2.707,20,1.755,21,0.758,22,3.462,23,0.67,24,0.042,25,0.511,26,0.588,27,0.909,28,4.441,29,3.103,30,3.103,31,4.441,32,2.62,33,2.707,34,0.758,35,1.703,36,3.634,37,1.094,38,2.707,39,0.758,40,1.88,41,2.11,42,2.11,43,2.11,44,0.511,45,0.439,46,1.191,47,2.42,48,1.094,49,0.956,50,2.42,51,3.462,52,0.025,53,0.032,54,0.025]],["title/pipes/FaNumPipe.html",[0,1.006,55,2.045]],["body/pipes/FaNumPipe.html",[0,1.191,2,1.863,3,0.439,4,0.439,5,0.439,6,0.392,8,0.973,9,3.634,10,1.595,11,2.62,13,2.783,14,1.658,15,0.755,17,0.956,18,2.11,19,2.707,20,1.755,21,0.758,23,0.67,24,0.043,25,0.511,26,0.588,27,0.833,32,2.126,33,2.707,34,0.758,35,1.703,36,3.634,37,1.094,38,2.707,39,0.758,40,1.88,41,2.11,42,2.11,43,2.11,44,0.511,45,0.439,46,1.191,47,2.42,48,1.094,49,0.956,50,2.42,52,0.025,53,0.032,54,0.025,55,3.103,56,2.834,57,3.614,58,4.441,59,1.476,60,3.462,61,4.441,62,3.462]],["title/pipes/IRCurrencyPipe.html",[0,1.006,63,2.045]],["body/pipes/IRCurrencyPipe.html",[0,1.703,2,1.48,3,0.349,4,0.349,5,0.349,6,0.336,8,0.834,14,1.317,15,0.647,17,0.759,18,1.676,19,2.321,20,1.752,21,0.602,23,0.532,24,0.043,25,0.812,26,0.467,27,0.87,32,1.823,34,0.602,35,1.46,37,0.938,38,2.321,39,0.602,43,1.676,44,0.562,45,0.349,46,0.946,48,0.677,49,1.206,52,0.02,53,0.027,54,0.02,59,1.414,63,2.661,64,1.922,65,3.116,66,5.122,67,2.664,68,4.298,69,3.808,70,3.116,71,3.808,72,3.575,73,3.575,74,3.053,75,4.715,76,3.808,77,2.049,78,3.808,79,3.808,80,3.808,81,4.715,82,4.715,83,2.018,84,3.808,85,4.951,86,2.75,87,1.823,88,3.808,89,2.049,90,3.808,91,2.75,92,3.808,93,2.25,94,2.75,95,2.25,96,2.25,97,2.75,98,2.75,99,2.75,100,1.922,101,1.054,102,2.25,103,1.922,104,2.75,105,2.75]],["title/classes/InvalidJalaliDateError.html",[45,0.371,106,1.575]],["body/classes/InvalidJalaliDateError.html",[3,0.506,4,0.506,5,0.506,6,0.428,15,0.678,21,0.873,23,0.772,24,0.043,25,0.589,26,0.678,44,0.589,45,0.506,52,0.029,53,0.035,54,0.029,74,3.39,106,2.813,107,2.787,108,3.264,109,4.278,110,2.431,111,3.97,112,3.988,113,3.264,114,3.264,115,3.264,116,3.264,117,3.264,118,3.264,119,3.264,120,2.787,121,3.264,122,3.97,123,3.97,124,3.264,125,3.264,126,3.264,127,2.431,128,2.787,129,2.146]],["title/classes/InvalidServiceInputError.html",[45,0.371,130,1.784]],["body/classes/InvalidServiceInputError.html",[3,0.504,4,0.504,5,0.504,6,0.428,15,0.676,21,0.871,23,0.77,24,0.043,25,0.587,26,0.676,27,0.676,44,0.587,45,0.504,52,0.029,53,0.035,54,0.029,74,3.385,107,2.78,109,4.274,110,2.424,111,3.964,113,3.256,114,3.256,115,3.256,116,3.256,117,3.256,118,3.256,119,3.256,120,2.78,121,3.256,122,3.964,123,3.964,124,3.256,125,3.256,126,3.256,127,2.424,130,3.183,131,3.256,132,3.978,133,3.256,134,2.141]],["title/injectables/JalaliDateCalculatorService.html",[135,0.902,136,2.045]],["body/injectables/JalaliDateCalculatorService.html",[3,0.133,4,0.396,5,0.133,6,0.429,8,0.877,11,0.857,15,0.705,17,0.766,21,1.051,23,0.803,24,0.043,25,0.663,26,0.705,27,0.304,29,1.251,34,1.021,37,0.769,39,0.229,44,0.155,45,0.227,47,0.731,48,1.022,49,1.181,52,0.017,53,0.013,54,0.008,59,1.601,67,0.963,83,1.004,101,1.197,106,0.563,110,0.638,128,3.716,129,3.086,133,2.976,135,0.552,136,1.251,137,0.563,138,3.397,139,0.856,140,0.258,141,0.857,142,2.154,143,4.003,144,2.345,145,2.345,146,2.345,147,2.345,148,2.073,149,1.79,150,1.79,151,1.79,152,1.79,153,1.79,154,1.79,155,1.79,156,1.79,157,1.79,158,1.79,159,3.396,160,3.501,161,3.593,162,1.046,163,2.216,164,1.79,165,1.046,166,4.204,167,1.79,168,4.278,169,2.302,170,2.345,171,2.345,172,1.43,173,1.92,174,1.046,175,1.046,176,2.679,177,0.856,178,2.181,179,1.046,180,3.501,181,3.818,182,2.976,183,3.875,184,2.554,185,2.676,186,1.79,187,1.046,188,1.692,189,2.377,190,1.79,191,1.902,192,1.79,193,2.377,194,3.201,195,1.79,196,2.777,197,1.79,198,1.046,199,1.79,200,2.554,201,2.9,202,2.345,203,1.79,204,1.046,205,1.79,206,1.92,207,3.402,208,0.766,209,1.79,210,1.79,211,1.046,212,1.465,213,2.777,214,3.402,215,2.777,216,1.79,217,1.046,218,1.79,219,1.79,220,1.046,221,1.465,222,2.777,223,1.79,224,1.465,225,1.94,226,1.79,227,1.79,228,1.79,229,1.79,230,1.79,231,2.777,232,1.79,233,1.79,234,1.79,235,1.79,236,1.79,237,2.272,238,1.79,239,2.345,240,1.79,241,1.79,242,1.046,243,1.465,244,1.79,245,1.046,246,0.963,247,1.465,248,1.79,249,3.121,250,1.465,251,2.777,252,1.046,253,1.046,254,1.046,255,1.046,256,1.046,257,1.046,258,1.046,259,1.046,260,1.046,261,0.638,262,0.638,263,0.856,264,0.856,265,1.046,266,1.046,267,0.563,268,0.563,269,1.046,270,1.046,271,0.501,272,0.563,273,2.792,274,1.046,275,1.046,276,1.79,277,1.046,278,1.79,279,1.046,280,1.79,281,1.046,282,1.692,283,2.777,284,1.046,285,2.777,286,1.046,287,1.465,288,1.79,289,2.345,290,1.046,291,1.92,292,1.046,293,2.345,294,2.679,295,1.046,296,1.046,297,1.046,298,1.79,299,1.639,300,1.639,301,1.046,302,1.046,303,1.046,304,1.465,305,1.262,306,1.046,307,1.79,308,1.046,309,1.046,310,1.046,311,1.046,312,1.046,313,1.046,314,1.046,315,1.046,316,1.046,317,1.046,318,1.046,319,1.046,320,1.046,321,1.79,322,1.046,323,1.79,324,1.046,325,1.046,326,1.046,327,1.046,328,1.046,329,1.046,330,1.046,331,1.046,332,1.046,333,1.046,334,0.856,335,1.046,336,1.046,337,1.046,338,1.046,339,1.79,340,1.046,341,1.79,342,1.046,343,1.046,344,1.046,345,1.046,346,1.046,347,2.345]],["title/injectables/JalaliDateValidatorService.html",[135,0.902,163,1.784]],["body/injectables/JalaliDateValidatorService.html",[3,0.241,4,0.241,5,0.241,6,0.453,8,0.985,15,0.795,17,0.975,21,1.106,23,0.906,24,0.043,25,0.691,26,0.795,27,0.6,29,2.764,34,1.125,37,0.87,39,0.416,44,0.281,45,0.241,48,0.975,49,1.177,52,0.014,53,0.021,54,0.014,59,1.599,67,2.129,77,1.022,83,1.511,103,1.327,106,1.022,110,2.152,128,3.759,129,2.94,134,1.564,135,0.896,137,1.022,138,3.589,140,0.468,141,1.392,142,2.42,159,3.83,160,4.403,161,4.049,163,1.772,166,1.554,172,1.772,173,1.554,177,3.237,180,3.95,181,3.725,182,3.95,183,3.237,184,3.489,185,1.772,193,3.373,194,2.031,200,2.379,201,2.031,206,2.379,208,0.813,212,2.379,221,1.554,224,1.554,237,2.379,243,2.89,247,3.237,250,1.554,261,1.158,262,1.158,263,1.554,264,1.554,267,1.022,268,1.022,271,0.909,272,2.42,348,1.554,349,3.531,350,3.531,351,2.907,352,2.907,353,2.907,354,2.907,355,2.907,356,2.907,357,2.907,358,2.907,359,1.899,360,1.899,361,2.411,362,1.899,363,2.598,364,2.907,365,1.899,366,2.152,367,1.564,368,1.899,369,1.899,370,1.9,371,3.531,372,1.327,373,2.907,374,1.899,375,3.531,376,1.899,377,1.554,378,1.899,379,1.899,380,1.899,381,1.899,382,2.907,383,1.899,384,2.907,385,2.907,386,2.907,387,1.899,388,1.899,389,1.899,390,1.899,391,3.531,392,3.531,393,1.899,394,1.899,395,1.327,396,1.899,397,1.899,398,1.554,399,1.899,400,1.554,401,1.899,402,1.158,403,1.899,404,1.899,405,1.899,406,1.899,407,1.899]],["title/pipes/NationalCodePipe.html",[0,1.006,408,2.045]],["body/pipes/NationalCodePipe.html",[0,1.172,2,1.834,3,0.432,4,0.432,5,0.432,6,0.388,8,0.963,14,1.632,15,0.747,17,0.941,18,2.077,19,2.679,20,1.709,21,0.746,23,0.66,24,0.043,25,0.503,26,0.579,27,0.827,32,2.105,34,0.746,37,0.84,38,2.679,39,0.746,43,2.077,44,0.503,45,0.432,46,1.172,48,0.84,49,0.941,50,2.382,52,0.024,53,0.032,54,0.024,59,1.53,65,3.598,87,2.105,89,2.366,100,2.382,101,1.307,102,2.789,103,2.382,225,3.4,300,3.072,305,1.834,408,3.072,409,2.789,410,4.537,411,5.141,412,4.866,413,4.396,414,4.396,415,3.408,416,4.396,417,4.396,418,2.789,419,3.408,420,3.408,421,2.077,422,3.408]],["title/modules/NgxPersianModule.html",[423,2.395,424,2.045]],["body/modules/NgxPersianModule.html",[3,0.549,4,0.549,5,0.549,6,0.382,24,0.043,37,1.066,39,0.948,44,0.639,45,0.549,52,0.031,53,0.037,54,0.031,424,3.56,425,3.025,426,4.328,427,4.328,428,5.094,429,3.542,430,4.328,431,3.542]],["title/interfaces/PLOptions.html",[432,1.122,433,1.401]],["body/interfaces/PLOptions.html",[3,0.252,4,0.252,5,0.252,6,0.176,8,0.436,10,1.673,12,1.392,13,1.072,20,1.25,24,0.043,25,0.599,26,0.832,27,0.914,32,1.443,33,1.214,34,0.954,35,1.923,37,0.896,39,0.436,40,0.764,42,1.214,44,0.445,45,0.252,46,0.685,48,1.128,49,1.264,52,0.038,53,0.022,54,0.014,59,1.119,77,2.181,83,1.734,87,2.193,101,1.155,134,1.622,135,0.929,140,0.491,141,1.443,142,2.343,169,2.343,178,1.392,188,2.215,189,1.392,208,0.852,267,1.072,268,1.072,271,0.953,272,2.343,273,1.836,361,2.986,363,2.866,366,2.215,367,1.622,370,1.072,372,1.392,395,3.201,402,1.214,421,1.214,432,1.394,433,1.941,434,1.214,435,1.072,436,1.392,437,2.181,438,2.833,439,2.106,440,2.975,441,2.466,442,2.466,443,3.563,444,3.563,445,3.893,446,3.317,447,1.443,448,1.63,449,1.63,450,1.63,451,2.899,452,1.392,453,1.072,454,1.63,455,1.63,456,1.63,457,1.63,458,1.63,459,1.63,460,1.63,461,2.466,462,1.63,463,1.63,464,1.63,465,2.54,466,2.832,467,1.63,468,1.63,469,1.63,470,1.63,471,1.392,472,2.975,473,3.317,474,1.63,475,1.63,476,2.54,477,1.63,478,1.63,479,1.63,480,1.63,481,1.63,482,1.63,483,1.63,484,1.63,485,1.63,486,2.106,487,1.63,488,1.63,489,1.392,490,1.63,491,1.63,492,1.392,493,2.975,494,1.622,495,1.392,496,1.392,497,1.63,498,1.392,499,2.466,500,1.63,501,1.63,502,1.392,503,2.106,504,1.63,505,1.392,506,2.106,507,1.214,508,1.392,509,1.392,510,1.63,511,1.63,512,1.392,513,2.466,514,2.466,515,1.63,516,2.975,517,1.63,518,1.63]],["title/directives/PersianLetterDirective.html",[519,1.575,520,1.784]],["body/directives/PersianLetterDirective.html",[3,0.345,4,0.345,5,0.345,6,0.384,8,0.597,10,0.84,14,1.305,15,0.463,17,1.044,20,1.167,21,0.829,23,0.528,24,0.043,25,0.642,26,0.463,27,0.838,34,0.597,35,1.801,37,1.157,39,0.597,41,1.661,44,0.559,45,0.48,46,1.495,48,1.157,49,1.044,52,0.02,53,0.027,54,0.02,89,1.467,127,2.65,140,0.671,148,3.193,169,2.037,172,2.65,208,1.619,246,2.749,282,2.306,433,2.363,438,2.34,494,2.749,519,2.34,520,3.347,521,1.904,522,2.65,523,1.904,524,3.558,525,4.039,526,3.558,527,3.113,528,3.097,529,3.097,530,3.097,531,3.038,532,3.558,533,3.844,534,3.558,535,3.558,536,3.113,537,3.097,538,3.449,539,2.725,540,3.558,541,4.039,542,2.725,543,3.558,544,3.038,545,2.23,546,3.558,547,3.558,548,1.904,549,2.23,550,2.23,551,2.863,552,3.097,553,2.23,554,2.23,555,2.23]],["title/injectables/PersianLetterService.html",[135,0.902,453,1.575]],["body/injectables/PersianLetterService.html",[3,0.183,4,0.183,5,0.183,6,0.4,8,0.316,10,1.694,12,1.636,13,1.26,15,0.635,17,0.646,20,1.599,21,0.961,23,0.723,24,0.043,25,0.622,26,0.635,27,0.951,32,1.627,33,1.427,34,1.112,35,2.007,37,0.728,39,0.316,40,0.554,42,0.88,44,0.346,45,0.183,46,0.497,48,0.985,49,1.104,52,0.038,53,0.017,54,0.01,57,1.009,59,1.211,67,1.829,77,2.01,83,1.711,87,2.326,101,0.898,134,1.26,135,0.722,137,0.777,140,0.356,141,1.121,142,2.565,169,2.267,176,1.009,178,1.636,188,1.8,189,1.636,208,1.002,267,0.777,268,0.777,271,1.121,272,2.732,273,1.427,361,3.161,363,2.267,366,2.567,367,1.829,370,1.26,372,1.636,395,3.33,402,0.88,421,0.88,432,0.898,433,2.171,435,2.44,436,1.009,437,1.829,438,2.898,439,1.009,440,2.417,441,1.182,442,1.182,443,2.781,444,2.781,445,3.59,446,1.916,447,1.121,448,1.182,449,1.182,450,1.182,451,3.094,452,1.009,453,1.26,454,2.417,455,1.916,456,1.916,457,1.916,458,1.916,459,1.916,460,2.417,461,2.781,462,2.417,463,1.916,464,1.916,465,2.795,466,3.066,467,1.916,468,1.916,469,1.916,470,1.916,471,1.636,472,3.273,473,3.59,474,1.916,475,1.916,476,2.795,477,1.916,478,1.916,479,1.182,480,1.182,481,1.182,482,1.182,483,1.182,484,1.182,485,1.182,486,1.636,487,1.182,488,1.182,489,1.009,490,1.916,491,1.916,492,1.636,493,3.273,494,1.59,495,1.636,496,1.636,497,1.916,498,1.636,499,2.781,500,1.916,501,1.916,502,1.636,503,1.636,504,1.182,505,1.009,506,2.374,507,1.427,508,1.009,509,1.009,510,1.182,511,1.182,512,1.009,513,2.781,514,2.781,515,1.916,516,3.273,517,1.916,518,1.916,556,1.916,557,2.341,558,1.636,559,1.636,560,1.444,561,1.444,562,1.444,563,1.009,564,1.444,565,1.009,566,1.444,567,1.444,568,1.444,569,1.444,570,1.444]],["title/injectables/PersianNumberService.html",[40,1.122,135,0.902]],["body/injectables/PersianNumberService.html",[3,0.237,4,0.237,5,0.237,6,0.444,10,1.691,11,2.407,13,1.881,15,0.759,17,0.792,20,1.734,21,1.079,23,0.865,24,0.043,25,0.727,26,0.759,27,0.983,34,1.052,35,2.015,37,0.861,39,0.409,40,1.101,44,0.276,45,0.237,46,0.643,48,1.183,49,1.168,52,0.013,53,0.021,54,0.013,57,2.741,59,1.359,67,1.881,83,1.912,87,2.139,100,1.306,101,1.101,130,1.75,134,1.006,135,0.885,137,1.006,140,0.46,141,1.375,142,2.706,176,2.741,185,1.75,267,1.006,268,1.006,272,2.793,273,1.75,287,2.35,291,2.35,294,2.006,299,2.006,300,2.006,305,1.545,361,1.75,363,2.111,366,2.391,367,2.111,370,2.111,402,1.139,418,1.53,421,1.75,435,2.706,437,1.545,447,1.375,451,2.723,452,2.006,465,1.306,466,1.306,486,2.006,489,1.306,492,2.006,494,1.006,495,2.006,496,2.006,498,2.006,502,2.006,503,2.006,505,1.306,506,2.006,507,1.75,508,1.306,509,1.306,512,1.306,556,2.35,558,2.006,559,2.006,563,2.006,565,2.006,571,1.53,572,3.496,573,3.496,574,3.496,575,2.871,576,2.871,577,1.869,578,2.871,579,1.869,580,1.869,581,1.869,582,1.869,583,1.869,584,1.869,585,2.871,586,1.869,587,3.923,588,3.923,589,1.869,590,2.871,591,2.871,592,2.871,593,2.871,594,2.871,595,2.871,596,2.871,597,2.871,598,1.869,599,1.869,600,2.871,601,1.869,602,1.869,603,1.869,604,1.869,605,1.869,606,1.869,607,1.869,608,1.869,609,1.869,610,1.869]],["title/directives/PersianNumbersDirective.html",[519,1.575,551,1.784]],["body/directives/PersianNumbersDirective.html",[3,0.359,4,0.359,5,0.359,6,0.343,8,0.62,10,0.873,14,1.356,15,0.481,17,1.072,20,1.198,21,0.62,23,0.548,24,0.043,25,0.574,26,0.481,27,0.811,34,0.62,35,1.831,37,1.176,39,0.62,41,1.726,44,0.574,45,0.493,46,1.526,48,1.176,49,1.072,52,0.02,53,0.028,54,0.02,89,1.524,127,2.704,140,0.698,148,3.226,169,1.524,172,2.704,208,1.212,246,2.781,282,2.368,433,2.124,438,2.091,494,2.781,519,2.387,520,2.91,521,1.979,522,2.368,523,1.979,524,3.63,525,3.907,526,3.63,527,3.226,528,2.317,529,2.317,530,2.317,531,3.1,532,3.63,533,3.907,534,3.63,535,3.63,536,2.91,537,3.18,538,3.1,540,3.63,541,4.095,543,3.63,544,3.1,545,2.317,546,3.63,547,3.63,548,1.979,549,2.317,550,2.317,551,3.286,552,3.18,553,2.317,554,2.317,555,2.317,611,2.831]],["title/interfaces/PersianService.html",[432,1.122,447,1.401]],["body/interfaces/PersianService.html",[3,0.459,4,0.459,5,0.459,6,0.464,8,0.793,10,1.116,15,0.85,17,1.261,20,1.793,21,1.096,23,0.969,24,0.042,25,0.739,26,0.85,27,0.85,34,1.096,44,0.534,52,0.026,53,0.033,54,0.026,59,1.381,140,0.892,363,2.829,377,2.962,432,1.751,434,2.206,435,2.829,437,2.458,439,2.529,447,2.187,471,2.529,507,2.784,558,3.192,559,3.192,563,3.192,565,3.192,612,2.962,613,3.619,614,2.962,615,3.619,616,3.619,617,3.619,618,3.619,619,3.619]],["title/interfaces/SimpleDateInterface.html",[191,1.784,432,1.122]],["body/interfaces/SimpleDateInterface.html",[3,0.506,4,0.506,5,0.506,6,0.352,8,0.873,11,2.323,24,0.041,25,0.772,44,0.589,52,0.029,53,0.035,54,0.029,59,1.61,129,2.146,140,0.983,141,2.323,181,3.895,191,2.957,193,3.895,194,3.895,201,2.787,432,1.86,434,2.431,620,3.264,621,3.988,622,3.988,623,3.988,624,3.988,625,3.988]],["title/coverage.html",[626,3.252]],["body/coverage.html",[0,1.701,1,2.155,5,0.391,6,0.522,7,2.524,24,0.043,25,0.455,40,1.182,45,0.587,52,0.022,53,0.03,54,0.022,55,2.155,56,2.524,63,2.155,64,2.155,83,1.762,101,1.182,106,1.66,108,2.524,129,2.215,130,1.88,131,2.524,135,1.525,136,2.155,138,2.877,139,2.524,163,1.88,191,1.88,246,2.773,261,1.88,262,1.88,304,4.602,334,2.524,348,2.524,408,2.155,409,2.524,432,1.777,433,1.477,435,2.661,436,2.877,447,1.477,453,1.66,519,2.215,520,1.88,522,3.014,523,2.877,527,1.88,536,1.88,551,1.88,571,2.524,612,2.524,620,2.524,626,2.524,627,2.524,628,3.084,629,3.084,630,3.793,631,5.567,632,2.524,633,4.117,634,4.117,635,4.117,636,4.117,637,3.084,638,3.084,639,3.084,640,3.084,641,3.084,642,3.084,643,3.084,644,3.084,645,3.084,646,3.084,647,3.084,648,3.084,649,3.084,650,3.084,651,3.369,652,3.084,653,3.084]],["title/dependencies.html",[654,2.454,655,2.456]],["body/dependencies.html",[24,0.043,39,0.902,52,0.03,53,0.036,54,0.03,93,3.37,548,2.877,655,2.877,656,4.118,657,5.823,658,4.118,659,4.945,660,4.945,661,4.118,662,4.118,663,4.118,664,4.118,665,4.118,666,4.118,667,4.118,668,4.118,669,4.118,670,4.118,671,4.118,672,4.118,673,4.118]],["title/miscellaneous/enumerations.html",[674,1.495,675,2.876]],["body/miscellaneous/enumerations.html",[6,0.384,24,0.043,27,0.951,52,0.031,53,0.037,54,0.031,64,3.042,68,3.563,72,3.563,73,3.563,95,4.183,96,3.563,140,1.072,674,2.653,675,3.563,676,4.353]],["title/miscellaneous/functions.html",[674,1.495,677,2.876]],["body/miscellaneous/functions.html",[3,0.411,6,0.376,8,0.71,10,1.312,11,2.037,15,0.89,23,1.014,24,0.041,26,0.89,27,0.723,30,2.265,34,1.177,40,1.243,48,0.799,52,0.034,53,0.031,54,0.023,59,1.392,77,1.744,87,2.037,89,2.29,140,0.799,148,2.593,188,1.976,208,1.387,246,2.556,261,2.895,262,2.895,282,1.976,305,2.29,370,2.29,410,2.653,437,1.744,438,2.556,451,1.976,453,2.556,476,2.265,522,1.976,527,2.593,536,2.593,538,2.265,544,2.973,630,2.653,632,3.482,651,3.887,674,1.976,677,2.653,678,4.749,679,4.255,680,3.241,681,5.237,682,4.255,683,4.255,684,3.241,685,4.749,686,3.241,687,3.241,688,3.241,689,3.241,690,3.241,691,3.241,692,3.241,693,3.241,694,4.255,695,4.255,696,3.241,697,3.241,698,4.255,699,5.043,700,3.241,701,3.241,702,4.255,703,3.241]],["title/index.html",[140,0.604,704,2.008,705,2.008]],["body/index.html",[4,0.46,10,1.118,15,0.616,24,0.033,30,2.535,52,0.026,53,0.033,54,0.026,101,1.391,225,2.535,271,2.399,398,2.969,614,2.969,706,3.627,707,4.574,708,3.627,709,5.01,710,5.01,711,3.627,712,3.627,713,3.627,714,4.574,715,5.423,716,5.622,717,3.627,718,3.627,719,3.627,720,3.627,721,3.627,722,3.627,723,2.969,724,3.627,725,5.01,726,5.01,727,3.627,728,5.423,729,3.627,730,3.627,731,3.627,732,3.627,733,3.627,734,3.627,735,3.627,736,4.574,737,4.574,738,5.261,739,3.627,740,4.574,741,4.574,742,3.627,743,5.261,744,3.627,745,3.627,746,3.627,747,5.01,748,3.627,749,3.627,750,2.535,751,3.627,752,3.627]],["title/license.html",[704,2.008,705,2.008,753,2.008]],["body/license.html",[24,0.033,52,0.026,53,0.033,54,0.026,70,2.976,271,2.193,367,1.957,400,4.105,627,2.976,723,2.976,750,2.541,753,2.976,754,3.636,755,5.015,756,3.636,757,3.636,758,3.636,759,3.636,760,4.581,761,3.636,762,3.636,763,3.636,764,3.636,765,3.636,766,3.636,767,4.581,768,5.741,769,3.636,770,3.636,771,3.636,772,4.581,773,3.636,774,3.636,775,3.636,776,3.636,777,3.636,778,3.636,779,3.636,780,3.636,781,3.636,782,4.581,783,3.636,784,3.636,785,3.636,786,3.636,787,3.636,788,3.636,789,4.581,790,4.581,791,3.636,792,3.636,793,3.636,794,3.636,795,3.636,796,3.636,797,3.636,798,3.636,799,3.636,800,3.636,801,3.636,802,3.636,803,3.636,804,3.636,805,3.636,806,3.636,807,3.636,808,3.636,809,3.636,810,3.636,811,3.636,812,3.636,813,3.636,814,3.636,815,3.636,816,3.636,817,3.636,818,3.636,819,3.636]],["title/modules.html",[425,2.777]],["body/modules.html",[24,0.038,52,0.033,53,0.038,54,0.033,120,3.217,424,3.217,425,3.217,820,4.603,821,4.603]],["title/overview.html",[822,3.252]],["body/overview.html",[2,2.343,24,0.037,52,0.031,53,0.037,54,0.031,107,3.042,137,2.343,185,2.653,294,3.572,299,3.042,305,2.751,423,4.183,429,3.563,431,3.563,434,2.653,521,3.042,531,3.042,655,3.042,750,3.042,822,3.563,823,4.353,824,4.353,825,5.111,826,4.353]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":83,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"coverage.html":{}}}],["0.14.2",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["001",{"_index":416,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["1",{"_index":185,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"injectables/PersianNumberService.html":{},"overview.html":{}}}],["1,925,100",{"_index":92,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["1.0",{"_index":82,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["1.9.0",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":410,"title":{},"body":{"pipes/NationalCodePipe.html":{},"miscellaneous/functions.html":{}}}],["10/15",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":304,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"coverage.html":{}}}],["100100",{"_index":231,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["11",{"_index":385,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["12",{"_index":298,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["139361631",{"_index":314,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["1397",{"_index":182,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["145",{"_index":695,"title":{},"body":{"miscellaneous/functions.html":{}}}],["145,455",{"_index":694,"title":{},"body":{"miscellaneous/functions.html":{}}}],["146097",{"_index":317,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["1461",{"_index":293,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["150",{"_index":331,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["153",{"_index":323,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["17",{"_index":297,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["183187720",{"_index":316,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["1925100",{"_index":90,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["2",{"_index":299,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianNumberService.html":{},"overview.html":{}}}],["2.5.4",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":334,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"coverage.html":{}}}],["2018",{"_index":215,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["2019",{"_index":757,"title":{},"body":{"license.html":{}}}],["236547",{"_index":417,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["25",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":305,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"pipes/NationalCodePipe.html":{},"injectables/PersianNumberService.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["308",{"_index":320,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["31",{"_index":310,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["3177",{"_index":392,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["34840408",{"_index":302,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["35/76",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["3908",{"_index":318,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["4",{"_index":294,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianNumberService.html":{},"overview.html":{}}}],["46",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":300,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"pipes/NationalCodePipe.html":{},"injectables/PersianNumberService.html":{}}}],["5/9",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":291,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianNumberService.html":{}}}],["6.3.3",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":391,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["621",{"_index":249,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["63",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":287,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianNumberService.html":{}}}],["7.2.0",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["7.3.5",{"_index":712,"title":{},"body":{"index.html":{}}}],["7/11",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["752",{"_index":306,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["8",{"_index":585,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["9",{"_index":421,"title":{},"body":{"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["_",{"_index":461,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["_getmatchedpatternlength",{"_index":556,"title":{},"body":{"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["_getmatchedpatternlength(value",{"_index":502,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["_jday",{"_index":144,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["_jmonth",{"_index":145,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["_jyear",{"_index":146,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["_maxacceptableyear",{"_index":349,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["_minacceptableyear",{"_index":350,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["_stringvalidationregex",{"_index":557,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["_stringvalidationregex(options",{"_index":478,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["above",{"_index":788,"title":{},"body":{"license.html":{}}}],["abstractcontrol",{"_index":541,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["acceptable",{"_index":103,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{}}}],["accessors",{"_index":158,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["according",{"_index":372,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["action",{"_index":814,"title":{},"body":{"license.html":{}}}],["ad",{"_index":248,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["add",{"_index":524,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["alihoseiny",{"_index":759,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":700,"title":{},"body":{"miscellaneous/functions.html":{}}}],["and/or",{"_index":780,"title":{},"body":{"license.html":{}}}],["angular",{"_index":709,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":93,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":548,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":398,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"index.html":{}}}],["applied",{"_index":227,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["arabic",{"_index":57,"title":{},"body":{"pipes/FaNumPipe.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["arabictopersian",{"_index":575,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["arabictopersian(value",{"_index":578,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["arising",{"_index":817,"title":{},"body":{"license.html":{}}}],["arithmetic",{"_index":687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arithmeticutils",{"_index":263,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["around",{"_index":397,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["array",{"_index":496,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["artifacts",{"_index":729,"title":{},"body":{"index.html":{}}}],["associated",{"_index":769,"title":{},"body":{"license.html":{}}}],["attention",{"_index":192,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["authors",{"_index":807,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":720,"title":{},"body":{"index.html":{}}}],["available",{"_index":120,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"modules.html":{}}}],["between",{"_index":390,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["boolean",{"_index":363,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["bootstrap",{"_index":824,"title":{},"body":{"overview.html":{}}}],["both",{"_index":232,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["brings",{"_index":448,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["browse",{"_index":821,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":728,"title":{},"body":{"index.html":{}}}],["c",{"_index":756,"title":{},"body":{"license.html":{}}}],["calculates",{"_index":221,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["calculator.service.ts",{"_index":139,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"coverage.html":{}}}],["calculator.service.ts:100",{"_index":204,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:110",{"_index":217,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:118",{"_index":211,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:129",{"_index":187,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:16",{"_index":253,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:17",{"_index":252,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:170",{"_index":175,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:18",{"_index":164,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:25",{"_index":254,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:34",{"_index":256,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:37",{"_index":258,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:40",{"_index":260,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:54",{"_index":220,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:68",{"_index":242,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:77",{"_index":198,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calculator.service.ts:91",{"_index":245,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["calendar",{"_index":201,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["calendars",{"_index":233,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["change",{"_index":722,"title":{},"body":{"index.html":{}}}],["characters",{"_index":476,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"miscellaneous/functions.html":{}}}],["charge",{"_index":764,"title":{},"body":{"license.html":{}}}],["chars",{"_index":491,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["check",{"_index":749,"title":{},"body":{"index.html":{}}}],["checks",{"_index":370,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":69,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["claim",{"_index":810,"title":{},"body":{"license.html":{}}}],["class",{"_index":45,"title":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["classes",{"_index":107,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"overview.html":{}}}],["cleaning",{"_index":226,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["cli",{"_index":710,"title":{},"body":{"index.html":{}}}],["code",{"_index":225,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"pipes/NationalCodePipe.html":{},"index.html":{}}}],["component",{"_index":726,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":787,"title":{},"body":{"license.html":{}}}],["connection",{"_index":818,"title":{},"body":{"license.html":{}}}],["const",{"_index":273,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["constructor",{"_index":110,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["constructor(...params",{"_index":111,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["constructor(date",{"_index":162,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["constructor(private",{"_index":47,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"injectables/JalaliDateCalculatorService.html":{}}}],["containing",{"_index":28,"title":{},"body":{"pipes/EnNumPipe.html":{}}}],["contains",{"_index":87,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"miscellaneous/functions.html":{}}}],["containspersian",{"_index":558,"title":{},"body":{"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["containspersian(value",{"_index":507,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["contract",{"_index":815,"title":{},"body":{"license.html":{}}}],["control",{"_index":544,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["controlling",{"_index":515,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["controls",{"_index":514,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["conversion",{"_index":615,"title":{},"body":{"interfaces/PersianService.html":{}}}],["convert",{"_index":402,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["converts",{"_index":176,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["converttogeorgian",{"_index":149,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["converttogeorgian(jyear",{"_index":174,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["converttojalali",{"_index":150,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["converttojalali(gdate",{"_index":186,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["convrteddate",{"_index":274,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["convrteddate.day",{"_index":281,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["convrteddate.month",{"_index":279,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["convrteddate.year",{"_index":277,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["copies",{"_index":782,"title":{},"body":{"license.html":{}}}],["copy",{"_index":767,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":755,"title":{},"body":{"license.html":{}}}],["core",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["corresponding",{"_index":567,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["counting",{"_index":384,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["coverage",{"_index":626,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creategdatefromdays",{"_index":151,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["creategdatefromdays(numofdays",{"_index":197,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["creates",{"_index":199,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["currency",{"_index":66,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["damages",{"_index":811,"title":{},"body":{"license.html":{}}}],["date",{"_index":129,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["date(georgianyear",{"_index":342,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["date(gyear",{"_index":327,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["date(this.jalaliyeartogeorgianyear(jyear",{"_index":308,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["dates",{"_index":224,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["day",{"_index":194,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["days",{"_index":200,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["deal",{"_index":770,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":819,"title":{},"body":{"license.html":{}}}],["decimal",{"_index":88,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["decimalpipe",{"_index":75,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["declarations",{"_index":429,"title":{},"body":{"modules/NgxPersianModule.html":{},"overview.html":{}}}],["default",{"_index":67,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["defined",{"_index":21,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{}}}],["dependencies",{"_index":655,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"miscellaneous/functions.html":{}}}],["descriptions",{"_index":441,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["desired",{"_index":79,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["dev",{"_index":717,"title":{},"body":{"index.html":{}}}],["development",{"_index":713,"title":{},"body":{"index.html":{}}}],["di",{"_index":173,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["digit",{"_index":411,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["digitinfo",{"_index":85,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["digits",{"_index":32,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["directive",{"_index":519,"title":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["directives",{"_index":521,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"overview.html":{}}}],["directives.ts",{"_index":523,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["directives.ts:22",{"_index":611,"title":{},"body":{"directives/PersianNumbersDirective.html":{}}}],["directives.ts:38",{"_index":539,"title":{},"body":{"directives/PersianLetterDirective.html":{}}}],["directives.ts:45",{"_index":542,"title":{},"body":{"directives/PersianLetterDirective.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":727,"title":{},"body":{"index.html":{}}}],["directory",{"_index":732,"title":{},"body":{"index.html":{}}}],["dist",{"_index":731,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":778,"title":{},"body":{"license.html":{}}}],["div",{"_index":261,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["div((div(targetgyear",{"_index":330,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div((gyear",{"_index":292,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(153",{"_index":295,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(7",{"_index":326,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(div(4",{"_index":315,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(div(gyear",{"_index":303,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(gmonth",{"_index":290,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(j",{"_index":325,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(jmonth",{"_index":311,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(mod(i",{"_index":322,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(mod(j",{"_index":319,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["div(num1",{"_index":680,"title":{},"body":{"miscellaneous/functions.html":{}}}],["div(targetgyear",{"_index":329,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["division",{"_index":684,"title":{},"body":{"miscellaneous/functions.html":{}}}],["document",{"_index":442,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["documentation",{"_index":627,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documents",{"_index":701,"title":{},"body":{"miscellaneous/functions.html":{}}}],["doing",{"_index":394,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["dynamic",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":744,"title":{},"body":{"index.html":{}}}],["each",{"_index":469,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["elements",{"_index":470,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["empty",{"_index":33,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["end",{"_index":743,"title":{},"body":{"index.html":{}}}],["endigits",{"_index":443,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["english",{"_index":13,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["englishnumberstable",{"_index":572,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["ennum",{"_index":16,"title":{},"body":{"pipes/EnNumPipe.html":{}}}],["ennumpipe",{"_index":1,"title":{"pipes/EnNumPipe.html":{}},"body":{"pipes/EnNumPipe.html":{},"coverage.html":{}}}],["enter",{"_index":78,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["enum",{"_index":94,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["enumerations",{"_index":675,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":208,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["equivalent",{"_index":179,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["error",{"_index":109,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["error(`${value",{"_index":102,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["error.capturestacktrace",{"_index":124,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["error.capturestacktrace(this",{"_index":125,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["esfand",{"_index":386,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["event",{"_index":806,"title":{},"body":{"license.html":{}}}],["example",{"_index":89,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["execute",{"_index":740,"title":{},"body":{"index.html":{}}}],["existence",{"_index":513,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["exists",{"_index":692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":44,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["exports",{"_index":431,"title":{},"body":{"modules/NgxPersianModule.html":{},"overview.html":{}}}],["express",{"_index":797,"title":{},"body":{"license.html":{}}}],["extends",{"_index":74,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["fact",{"_index":362,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["false",{"_index":366,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["fanum",{"_index":58,"title":{},"body":{"pipes/FaNumPipe.html":{}}}],["fanumpipe",{"_index":55,"title":{"pipes/FaNumPipe.html":{}},"body":{"pipes/FaNumPipe.html":{},"coverage.html":{}}}],["farvardin",{"_index":206,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["few",{"_index":235,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["fields",{"_index":440,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["file",{"_index":5,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["files",{"_index":723,"title":{},"body":{"index.html":{},"license.html":{}}}],["find",{"_index":346,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["finding",{"_index":468,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["first",{"_index":205,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["firstdayofjyearinmarch",{"_index":152,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["firstdayofjyearinmarch(jyear",{"_index":203,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["fitness",{"_index":802,"title":{},"body":{"license.html":{}}}],["flag",{"_index":734,"title":{},"body":{"index.html":{}}}],["following",{"_index":70,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"license.html":{}}}],["form",{"_index":699,"title":{},"body":{"miscellaneous/functions.html":{}}}],["format",{"_index":413,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["formats",{"_index":65,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["formatter",{"_index":81,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["formatting",{"_index":80,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["fraction",{"_index":691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["free",{"_index":763,"title":{},"body":{"license.html":{}}}],["full",{"_index":180,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["function",{"_index":246,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":677,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":785,"title":{},"body":{"license.html":{}}}],["further",{"_index":746,"title":{},"body":{"index.html":{}}}],["future",{"_index":238,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["g",{"_index":489,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["gdate",{"_index":196,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gdate.getdate",{"_index":301,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gdate.getfullyear",{"_index":288,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gdate.getmonth",{"_index":286,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gday",{"_index":321,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["generate",{"_index":725,"title":{},"body":{"index.html":{}}}],["generated",{"_index":708,"title":{},"body":{"index.html":{}}}],["georgian",{"_index":166,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["georgianyear",{"_index":336,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["georgianyeartojalaliyear",{"_index":153,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["georgianyeartojalaliyear(gyear",{"_index":210,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["getjday",{"_index":255,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["getjmonth",{"_index":257,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["getjyear",{"_index":259,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gets",{"_index":490,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["getting",{"_index":704,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":243,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["gmonth",{"_index":285,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["gmonthdiv",{"_index":289,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["go",{"_index":748,"title":{},"body":{"index.html":{}}}],["good",{"_index":230,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["granted",{"_index":762,"title":{},"body":{"license.html":{}}}],["graph",{"_index":820,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":500,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["gregorian",{"_index":223,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["grouping",{"_index":622,"title":{},"body":{"interfaces/SimpleDateInterface.html":{}}}],["gt",{"_index":91,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["gyear",{"_index":214,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["help",{"_index":747,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":761,"title":{},"body":{"license.html":{}}}],["holders",{"_index":808,"title":{},"body":{"license.html":{}}}],["http://localhost:4200",{"_index":719,"title":{},"body":{"index.html":{}}}],["https://github.com/sijad/ts",{"_index":283,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["identifier",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":123,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["implement",{"_index":439,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"interfaces/PersianService.html":{}}}],["implementing",{"_index":190,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["implements",{"_index":46,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{}}}],["implied",{"_index":798,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{}}}],["important",{"_index":624,"title":{},"body":{"interfaces/SimpleDateInterface.html":{}}}],["imports",{"_index":430,"title":{},"body":{"modules/NgxPersianModule.html":{}}}],["included",{"_index":791,"title":{},"body":{"license.html":{}}}],["including",{"_index":772,"title":{},"body":{"license.html":{}}}],["index",{"_index":140,"title":{"index.html":{}},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"miscellaneous/functions.html":{}}}],["injectable",{"_index":135,"title":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"coverage.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"overview.html":{}}}],["injected",{"_index":171,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["input",{"_index":35,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{}}}],["input('persianletterdirective",{"_index":554,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["inputs",{"_index":538,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":240,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["instead",{"_index":378,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["integer",{"_index":682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["interface",{"_index":432,"title":{"interfaces/PLOptions.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{}},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":434,"title":{},"body":{"interfaces/PLOptions.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"overview.html":{}}}],["invalid",{"_index":127,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["invalidjalalidate.error",{"_index":264,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["invalidjalalidateerror",{"_index":106,"title":{"classes/InvalidJalaliDateError.html":{}},"body":{"classes/InvalidJalaliDateError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"coverage.html":{}}}],["invalidserviceinput.error",{"_index":599,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["invalidserviceinputerror",{"_index":130,"title":{"classes/InvalidServiceInputError.html":{}},"body":{"classes/InvalidServiceInputError.html":{},"injectables/PersianNumberService.html":{},"coverage.html":{}}}],["irc",{"_index":84,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["ircurrencies",{"_index":95,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"miscellaneous/enumerations.html":{}}}],["ircurrencies[type",{"_index":105,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["ircurrencypipe",{"_index":63,"title":{"pipes/IRCurrencyPipe.html":{}},"body":{"pipes/IRCurrencyPipe.html":{},"coverage.html":{}}}],["isjyearleap",{"_index":351,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isjyearleap(jyear",{"_index":359,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isnan(value",{"_index":99,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["ispersian",{"_index":437,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{}}}],["ispersian(value",{"_index":563,"title":{},"body":{"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["isvalidjdate",{"_index":352,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjdate(jyear",{"_index":364,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjday",{"_index":353,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjday(jyear",{"_index":368,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjmonth",{"_index":354,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjmonth(jmonth",{"_index":374,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjyear",{"_index":355,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["isvalidjyear(jyear",{"_index":380,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["j",{"_index":313,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#l110",{"_index":328,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#l149",{"_index":335,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#l195",{"_index":284,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#l213",{"_index":312,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalali",{"_index":128,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["jalalidatecalculatorservice",{"_index":136,"title":{"injectables/JalaliDateCalculatorService.html":{}},"body":{"injectables/JalaliDateCalculatorService.html":{},"coverage.html":{}}}],["jalalidatevalidator",{"_index":170,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalalidatevalidatorservice",{"_index":163,"title":{"injectables/JalaliDateValidatorService.html":{}},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"coverage.html":{}}}],["jalalidatevalidatorservice._minacceptableyear",{"_index":403,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["jalaliday",{"_index":344,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalalimonth",{"_index":345,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaliyear",{"_index":337,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaliyeartogeorgianyear",{"_index":154,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jalaliyeartogeorgianyear(jyear",{"_index":216,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["javascript",{"_index":168,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jdate",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["jday",{"_index":159,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["jmonth",{"_index":160,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["jmonthlength",{"_index":356,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["jmonthlength(jyear",{"_index":382,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["js",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["julian",{"_index":222,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["jyear",{"_index":161,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["karma",{"_index":742,"title":{},"body":{"index.html":{}}}],["key",{"_index":552,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["kind",{"_index":796,"title":{},"body":{"license.html":{}}}],["language",{"_index":616,"title":{},"body":{"interfaces/PersianService.html":{}}}],["language=jsregexp",{"_index":486,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["leap",{"_index":247,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["legend",{"_index":823,"title":{},"body":{"overview.html":{}}}],["length",{"_index":495,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["letter",{"_index":506,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["letter.service",{"_index":550,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["letter.service.ts",{"_index":436,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"coverage.html":{}}}],["letter.service.ts:24",{"_index":568,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:26",{"_index":569,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:27",{"_index":570,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:36",{"_index":561,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:55",{"_index":560,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:64",{"_index":562,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:83",{"_index":564,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letter.service.ts:96",{"_index":566,"title":{},"body":{"injectables/PersianLetterService.html":{}}}],["letters",{"_index":451,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"miscellaneous/functions.html":{}}}],["liability",{"_index":812,"title":{},"body":{"license.html":{}}}],["liable",{"_index":809,"title":{},"body":{"license.html":{}}}],["license",{"_index":753,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":773,"title":{},"body":{"license.html":{}}}],["limited",{"_index":799,"title":{},"body":{"license.html":{}}}],["list",{"_index":518,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["literal",{"_index":545,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["maintains",{"_index":115,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["make",{"_index":379,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["march",{"_index":207,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["match",{"_index":493,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["matched",{"_index":498,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["matches",{"_index":501,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["matching",{"_index":53,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matchresult",{"_index":503,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["matchresult.length",{"_index":505,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["merchantability",{"_index":801,"title":{},"body":{"license.html":{}}}],["merge",{"_index":776,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["method",{"_index":188,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":17,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{}}}],["million",{"_index":236,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["minmonthnumber",{"_index":404,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["miscellaneous",{"_index":674,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":754,"title":{},"body":{"license.html":{}}}],["mod",{"_index":262,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mod(div(i",{"_index":324,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["mod(gmonth",{"_index":296,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["mod(num1",{"_index":686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modify",{"_index":775,"title":{},"body":{"license.html":{}}}],["module",{"_index":423,"title":{"modules/NgxPersianModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":425,"title":{"modules.html":{}},"body":{"modules/NgxPersianModule.html":{},"modules.html":{}}}],["month",{"_index":193,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["more",{"_index":30,"title":{},"body":{"pipes/EnNumPipe.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["mr",{"_index":758,"title":{},"body":{"license.html":{}}}],["name",{"_index":15,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["national",{"_index":412,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["nationalcode",{"_index":414,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["nationalcodepipe",{"_index":408,"title":{"pipes/NationalCodePipe.html":{}},"body":{"pipes/NationalCodePipe.html":{},"coverage.html":{}}}],["native",{"_index":195,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["navigate",{"_index":718,"title":{},"body":{"index.html":{}}}],["needing",{"_index":401,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["new",{"_index":101,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":716,"title":{},"body":{"index.html":{}}}],["ng_validators",{"_index":533,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["ngmodule",{"_index":428,"title":{},"body":{"modules/NgxPersianModule.html":{}}}],["ngx",{"_index":752,"title":{},"body":{"index.html":{}}}],["ngxpersian",{"_index":706,"title":{},"body":{"index.html":{}}}],["ngxpersianmodule",{"_index":424,"title":{"modules/NgxPersianModule.html":{}},"body":{"modules/NgxPersianModule.html":{},"modules.html":{}}}],["non",{"_index":31,"title":{},"body":{"pipes/EnNumPipe.html":{}}}],["noninfringement",{"_index":805,"title":{},"body":{"license.html":{}}}],["notice",{"_index":789,"title":{},"body":{"license.html":{}}}],["null",{"_index":494,"title":{},"body":{"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{}}}],["num1",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["num2",{"_index":681,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":59,"title":{},"body":{"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"miscellaneous/functions.html":{}}}],["number(value",{"_index":97,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["number.service",{"_index":42,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["number.service.ts",{"_index":571,"title":{},"body":{"injectables/PersianNumberService.html":{},"coverage.html":{}}}],["number.service.ts:10",{"_index":598,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:11",{"_index":586,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:18",{"_index":580,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:31",{"_index":577,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:41",{"_index":581,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:50",{"_index":579,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:60",{"_index":584,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:77",{"_index":583,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["number.service.ts:9",{"_index":589,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["numberofpassedgdays",{"_index":155,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numberofpassedgdays(gdate",{"_index":219,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numberofpassedjdays",{"_index":156,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numberofpassedjdays(jyear",{"_index":241,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numbers",{"_index":11,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/PersianNumberService.html":{},"interfaces/SimpleDateInterface.html":{},"miscellaneous/functions.html":{}}}],["numofdayinjyear",{"_index":347,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numofdays",{"_index":202,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numofgleapyears",{"_index":157,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numofgleapyears(targetgyear",{"_index":244,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["numofjleapyears",{"_index":357,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["numofjleapyears(targetjyear",{"_index":387,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["numofpasseddaysto1farvardin",{"_index":341,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["object",{"_index":169,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"directives/PersianNumbersDirective.html":{}}}],["obtaining",{"_index":766,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":499,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["one",{"_index":29,"title":{},"body":{"pipes/EnNumPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["ones",{"_index":452,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["optional",{"_index":26,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":438,"title":{},"body":{"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["options.endigits",{"_index":479,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["options.persiandigits",{"_index":484,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["options.symbols",{"_index":480,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["options.whitespaces",{"_index":482,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["others",{"_index":477,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["otherwise",{"_index":367,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"license.html":{}}}],["out",{"_index":750,"title":{},"body":{"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":189,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["overview",{"_index":822,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":654,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":49,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{}}}],["parameter",{"_index":77,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":113,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["part",{"_index":683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["particular",{"_index":803,"title":{},"body":{"license.html":{}}}],["passed",{"_index":133,"title":{},"body":{"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{}}}],["passeddays",{"_index":339,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["pattern",{"_index":467,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["permission",{"_index":760,"title":{},"body":{"license.html":{}}}],["permit",{"_index":783,"title":{},"body":{"license.html":{}}}],["persian",{"_index":10,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["persian.module.ts",{"_index":427,"title":{},"body":{"modules/NgxPersianModule.html":{}}}],["persian/src/lib/jdate/arithmeticutils.ts",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["persian/src/lib/jdate/invalidjalalidate.error.ts",{"_index":108,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"coverage.html":{}}}],["persian/src/lib/jdate/invalidjalalidate.error.ts:1",{"_index":112,"title":{},"body":{"classes/InvalidJalaliDateError.html":{}}}],["persian/src/lib/jdate/jalali",{"_index":138,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"coverage.html":{}}}],["persian/src/lib/jdate/jdate.ts",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["persian/src/lib/jdate/simpledate.interface.ts",{"_index":620,"title":{},"body":{"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["persian/src/lib/ngx",{"_index":426,"title":{},"body":{"modules/NgxPersianModule.html":{}}}],["persian/src/lib/pipes/ennum.pipe.ts",{"_index":7,"title":{},"body":{"pipes/EnNumPipe.html":{},"coverage.html":{}}}],["persian/src/lib/pipes/ennum.pipe.ts:16",{"_index":22,"title":{},"body":{"pipes/EnNumPipe.html":{}}}],["persian/src/lib/pipes/fanum.pipe.ts",{"_index":56,"title":{},"body":{"pipes/FaNumPipe.html":{},"coverage.html":{}}}],["persian/src/lib/pipes/fanum.pipe.ts:17",{"_index":60,"title":{},"body":{"pipes/FaNumPipe.html":{}}}],["persian/src/lib/pipes/ircurrency.pipe.ts",{"_index":64,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["persian/src/lib/pipes/ircurrency.pipe.ts:30",{"_index":86,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["persian/src/lib/pipes/nationalcode.pipe.ts",{"_index":409,"title":{},"body":{"pipes/NationalCodePipe.html":{},"coverage.html":{}}}],["persian/src/lib/pipes/nationalcode.pipe.ts:14",{"_index":415,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["persian/src/lib/services/invalidserviceinput.error.ts",{"_index":131,"title":{},"body":{"classes/InvalidServiceInputError.html":{},"coverage.html":{}}}],["persian/src/lib/services/invalidserviceinput.error.ts:1",{"_index":132,"title":{},"body":{"classes/InvalidServiceInputError.html":{}}}],["persian/src/lib/services/persian",{"_index":435,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{},"coverage.html":{}}}],["persian/src/lib/validators/persian",{"_index":522,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persian_letters_pattern",{"_index":454,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persiandigits",{"_index":444,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persianletterdirective",{"_index":520,"title":{"directives/PersianLetterDirective.html":{}},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["persianletterservice",{"_index":453,"title":{"injectables/PersianLetterService.html":{}},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persianletterservice.persian_letters_pattern",{"_index":488,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persianletterservice.symbols_pattern",{"_index":481,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persianletterservice.whitespaces_pattern",{"_index":483,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persianlettersvalidator",{"_index":536,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persianlettersvalidator(options",{"_index":697,"title":{},"body":{"miscellaneous/functions.html":{}}}],["persianlettersvalidator(this.options)(control",{"_index":555,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["persiannumberpattern",{"_index":573,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumbersdirective",{"_index":551,"title":{"directives/PersianNumbersDirective.html":{}},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["persiannumberservice",{"_index":40,"title":{"injectables/PersianNumberService.html":{}},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persiannumberservice._getmatchedpatternlength(value",{"_index":602,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumberservice.persiannumberpattern",{"_index":485,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["persiannumberservice.persiannumberstable[4",{"_index":604,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumberservice.persiannumberstable[5",{"_index":606,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumberservice.persiannumberstable[6",{"_index":608,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumberstable",{"_index":574,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["persiannumbersvalidator",{"_index":527,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persiannumbersvalidator()(control",{"_index":553,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["persiannumbersvalidator(persiannumberservice",{"_index":703,"title":{},"body":{"miscellaneous/functions.html":{}}}],["persianregex",{"_index":509,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["persianregex.test(value",{"_index":512,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["persianservice",{"_index":447,"title":{"interfaces/PersianService.html":{}},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{},"coverage.html":{}}}],["person",{"_index":765,"title":{},"body":{"license.html":{}}}],["persons",{"_index":784,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":0,"title":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"coverage.html":{}}}],["pipe({name",{"_index":43,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["pipes",{"_index":2,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":38,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["ploptions",{"_index":433,"title":{"interfaces/PLOptions.html":{}},"body":{"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"directives/PersianNumbersDirective.html":{},"coverage.html":{}}}],["plus",{"_index":473,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["portions",{"_index":793,"title":{},"body":{"license.html":{}}}],["private",{"_index":142,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["probably",{"_index":61,"title":{},"body":{"pipes/FaNumPipe.html":{}}}],["procedure",{"_index":228,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["prod",{"_index":733,"title":{},"body":{"index.html":{}}}],["production",{"_index":735,"title":{},"body":{"index.html":{}}}],["program",{"_index":450,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["project",{"_index":707,"title":{},"body":{"index.html":{}}}],["projects/.../arithmeticutils.ts",{"_index":678,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../ircurrency.pipe.ts",{"_index":676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../persian",{"_index":679,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["proper",{"_index":116,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["properties",{"_index":141,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["property",{"_index":525,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["protractor",{"_index":745,"title":{},"body":{"index.html":{}}}],["provide",{"_index":532,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["provided",{"_index":794,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":267,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["providers",{"_index":531,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"overview.html":{}}}],["public",{"_index":147,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["publish",{"_index":777,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":804,"title":{},"body":{"license.html":{}}}],["r",{"_index":72,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"miscellaneous/enumerations.html":{}}}],["range",{"_index":371,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["reactive",{"_index":698,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readme",{"_index":751,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":143,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["real",{"_index":209,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["regex",{"_index":466,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["regexp",{"_index":465,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["regexp(`[${persianletterservice.persian_letters_pattern",{"_index":510,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["regexp(`[${persiannumberservice.persiannumberpattern",{"_index":600,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["regexp(`[${result",{"_index":487,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["regular",{"_index":167,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["reload",{"_index":721,"title":{},"body":{"index.html":{}}}],["removes",{"_index":690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replace(/٥/g",{"_index":605,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["replace(/٦/g",{"_index":607,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["replaced",{"_index":36,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{}}}],["replaces",{"_index":9,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{}}}],["representing",{"_index":178,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["reset",{"_index":826,"title":{},"body":{"overview.html":{}}}],["restriction",{"_index":771,"title":{},"body":{"license.html":{}}}],["result",{"_index":52,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":54,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":48,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":34,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/functions.html":{}}}],["rial",{"_index":68,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"miscellaneous/enumerations.html":{}}}],["rights",{"_index":774,"title":{},"body":{"license.html":{}}}],["root",{"_index":268,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["round",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["round(x",{"_index":689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":715,"title":{},"body":{"index.html":{}}}],["running",{"_index":736,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":463,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["scaffolding",{"_index":724,"title":{},"body":{"index.html":{}}}],["searching",{"_index":474,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["second",{"_index":76,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["see",{"_index":282,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["selector",{"_index":535,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["sell",{"_index":781,"title":{},"body":{"license.html":{}}}],["serve",{"_index":614,"title":{},"body":{"interfaces/PersianService.html":{},"index.html":{}}}],["server",{"_index":714,"title":{},"body":{"index.html":{}}}],["service",{"_index":134,"title":{},"body":{"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["service.ts",{"_index":612,"title":{},"body":{"interfaces/PersianService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":617,"title":{},"body":{"interfaces/PersianService.html":{}}}],["service.ts:6",{"_index":618,"title":{},"body":{"interfaces/PersianService.html":{}}}],["service.ts:8",{"_index":619,"title":{},"body":{"interfaces/PersianService.html":{}}}],["services",{"_index":613,"title":{},"body":{"interfaces/PersianService.html":{}}}],["services/persian",{"_index":41,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["set",{"_index":530,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["sets",{"_index":516,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["setting",{"_index":528,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["shall",{"_index":790,"title":{},"body":{"license.html":{}}}],["shows",{"_index":497,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["simple",{"_index":621,"title":{},"body":{"interfaces/SimpleDateInterface.html":{}}}],["simpledate.interface",{"_index":265,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["simpledateinterface",{"_index":191,"title":{"interfaces/SimpleDateInterface.html":{}},"body":{"injectables/JalaliDateCalculatorService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["simply",{"_index":529,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["software",{"_index":768,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"modules/NgxPersianModule.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"index.html":{}}}],["special",{"_index":475,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["specific",{"_index":517,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["specified",{"_index":472,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["splits",{"_index":492,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["stack",{"_index":117,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["start",{"_index":212,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["started",{"_index":705,"title":{"index.html":{},"license.html":{}},"body":{}}],["startfromzero",{"_index":375,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["starting",{"_index":373,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["starts",{"_index":183,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["statements",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":272,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["stored",{"_index":730,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{}}}],["string(value",{"_index":50,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["stuff",{"_index":396,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["subject",{"_index":786,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":779,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":792,"title":{},"body":{"license.html":{}}}],["success",{"_index":546,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["super(...params",{"_index":114,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["super.transform(value",{"_index":104,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["symbols",{"_index":445,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["symbols_pattern",{"_index":460,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["t",{"_index":96,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"miscellaneous/enumerations.html":{}}}],["table",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":526,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["targetgyear",{"_index":251,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["targetjyear",{"_index":389,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["test",{"_index":739,"title":{},"body":{"index.html":{}}}],["tested",{"_index":229,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["tests",{"_index":738,"title":{},"body":{"index.html":{}}}],["text",{"_index":12,"title":{},"body":{"pipes/EnNumPipe.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["texts",{"_index":449,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["this._jday",{"_index":280,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this._jmonth",{"_index":278,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this._jyear",{"_index":276,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.arabictopersian(value",{"_index":610,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["this.converttojalali(this.date",{"_index":275,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.date",{"_index":239,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.firstdayofjyearinmarch(jalaliyear",{"_index":343,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.firstdayofjyearinmarch(jyear",{"_index":309,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.georgianyeartojalaliyear(georgianyear",{"_index":338,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.isvalidjday(jyear",{"_index":407,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["this.isvalidjmonth(jmonth",{"_index":406,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["this.isvalidjyear(jyear",{"_index":405,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["this.message",{"_index":126,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["this.numberofpassedgdays(gdate",{"_index":340,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.numberofpassedgdays(new",{"_index":307,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.numofgleapyears(gyear",{"_index":333,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["this.persiannumberservice.toenglish(value",{"_index":51,"title":{},"body":{"pipes/EnNumPipe.html":{}}}],["this.persiannumberservice.topersian(value",{"_index":62,"title":{},"body":{"pipes/FaNumPipe.html":{}}}],["this.validator.numofjleapyears(jyear",{"_index":332,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["those",{"_index":471,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"interfaces/PersianService.html":{}}}],["three",{"_index":623,"title":{},"body":{"interfaces/SimpleDateInterface.html":{}}}],["throw",{"_index":100,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{},"injectables/PersianNumberService.html":{}}}],["thrown",{"_index":119,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["toenglish",{"_index":576,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["toenglish(value",{"_index":582,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["together",{"_index":625,"title":{},"body":{"interfaces/SimpleDateInterface.html":{}}}],["toman",{"_index":73,"title":{},"body":{"pipes/IRCurrencyPipe.html":{},"miscellaneous/enumerations.html":{}}}],["topersian",{"_index":559,"title":{},"body":{"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["topersian(value",{"_index":565,"title":{},"body":{"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"interfaces/PersianService.html":{}}}],["tort",{"_index":816,"title":{},"body":{"license.html":{}}}],["trace",{"_index":118,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["transform",{"_index":18,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["transform(value",{"_index":19,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"pipes/NationalCodePipe.html":{}}}],["true",{"_index":361,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["ts",{"_index":122,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["tslib",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":693,"title":{},"body":{"miscellaneous/functions.html":{}}}],["two",{"_index":688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":25,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"interfaces/SimpleDateInterface.html":{},"coverage.html":{}}}],["type.tolowercase",{"_index":98,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["typedoc",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":71,"title":{},"body":{"pipes/IRCurrencyPipe.html":{}}}],["u0629\\u0630",{"_index":457,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["u0639\\u0641",{"_index":458,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["u064d\\u064e\\u064f\\u067e\\u0670\\u0686\\u0698\\u200c\\u0621",{"_index":456,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["u0654",{"_index":459,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["u06a9\\u06af\\u06c0\\u06cc\\u060c\\u062a\\u062b\\u062c\\u062d\\u062e\\u062f\\u063a\\u064a\\u064b\\u064c",{"_index":455,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["u06f0",{"_index":587,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f1",{"_index":590,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f2",{"_index":591,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f3",{"_index":592,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f4",{"_index":593,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f5",{"_index":594,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f6",{"_index":595,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f7",{"_index":596,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f8",{"_index":597,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["u06f9",{"_index":588,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["undefined",{"_index":508,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{}}}],["unit",{"_index":737,"title":{},"body":{"index.html":{}}}],["until",{"_index":250,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["up",{"_index":234,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["use",{"_index":271,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{},"index.html":{},"license.html":{}}}],["useexisting",{"_index":534,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["using",{"_index":172,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["v8",{"_index":121,"title":{},"body":{"classes/InvalidJalaliDateError.html":{},"classes/InvalidServiceInputError.html":{}}}],["valid",{"_index":177,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["validate",{"_index":537,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["validate(control",{"_index":540,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["validating",{"_index":399,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validation",{"_index":395,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["validationerror",{"_index":547,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["validator",{"_index":148,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{},"miscellaneous/functions.html":{}}}],["validator.service",{"_index":266,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["validator.service.ts",{"_index":348,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"coverage.html":{}}}],["validator.service.ts:112",{"_index":369,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:122",{"_index":365,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:14",{"_index":393,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:15",{"_index":358,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:24",{"_index":383,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:36",{"_index":388,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:79",{"_index":360,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:88",{"_index":381,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validator.service.ts:96",{"_index":376,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{}}}],["validatorfn",{"_index":702,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":549,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["validators.ts",{"_index":651,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["value",{"_index":27,"title":{},"body":{"pipes/EnNumPipe.html":{},"pipes/FaNumPipe.html":{},"pipes/IRCurrencyPipe.html":{},"classes/InvalidServiceInputError.html":{},"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"pipes/NationalCodePipe.html":{},"interfaces/PLOptions.html":{},"directives/PersianLetterDirective.html":{},"injectables/PersianLetterService.html":{},"injectables/PersianNumberService.html":{},"directives/PersianNumbersDirective.html":{},"interfaces/PersianService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["value.length",{"_index":418,"title":{},"body":{"pipes/NationalCodePipe.html":{},"injectables/PersianNumberService.html":{}}}],["value.match(new",{"_index":601,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["value.match(persianletterservice._stringvalidationregex(options",{"_index":504,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["value.replace(/٤/g",{"_index":603,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["value.substring(0",{"_index":419,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["value.substring(3",{"_index":420,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["value.tostring",{"_index":609,"title":{},"body":{"injectables/PersianNumberService.html":{}}}],["value.trim",{"_index":511,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["value[9",{"_index":422,"title":{},"body":{"pipes/NationalCodePipe.html":{}}}],["values",{"_index":464,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["vase",{"_index":269,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["versa",{"_index":270,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["version",{"_index":711,"title":{},"body":{"index.html":{}}}],["via",{"_index":741,"title":{},"body":{"index.html":{}}}],["want",{"_index":377,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"interfaces/PersianService.html":{}}}],["warranties",{"_index":800,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":795,"title":{},"body":{"license.html":{}}}],["whether",{"_index":813,"title":{},"body":{"license.html":{}}}],["whitespaces",{"_index":446,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["whitespaces_pattern",{"_index":462,"title":{},"body":{"interfaces/PLOptions.html":{},"injectables/PersianLetterService.html":{}}}],["winter",{"_index":218,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["within",{"_index":213,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["without",{"_index":400,"title":{},"body":{"injectables/JalaliDateValidatorService.html":{},"license.html":{}}}],["wrapper",{"_index":543,"title":{},"body":{"directives/PersianLetterDirective.html":{},"directives/PersianNumbersDirective.html":{}}}],["x",{"_index":696,"title":{},"body":{"miscellaneous/functions.html":{}}}],["year",{"_index":181,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{},"interfaces/SimpleDateInterface.html":{}}}],["years",{"_index":237,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["yes",{"_index":165,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{}}}],["zero",{"_index":184,"title":{},"body":{"injectables/JalaliDateCalculatorService.html":{},"injectables/JalaliDateValidatorService.html":{}}}],["zone.js",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":825,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"pipes/EnNumPipe.html":{"url":"pipes/EnNumPipe.html","title":"pipe - EnNumPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EnNumPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Pipes/enNum.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Replaces all persian numbers in the text to the english numbers.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        enNum\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Pipes/enNum.pipe.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a string containing one or more non-english digits. Could be an empty string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        input value replaced all persian digits with english digits.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {PersianNumberService} from '../Services/persian-number.service';\n\n/**\n * Replaces all persian numbers in the text to the english numbers.\n */\n@Pipe({name: 'enNum'})\nexport class EnNumPipe  implements PipeTransform {\n\n  constructor(private persianNumberService: PersianNumberService) {}\n\n  /**\n   * @return input value replaced all persian digits with english digits.\n   * @param value a string containing one or more non-english digits. Could be an empty string.\n   */\n  transform(value: string): string {\n    value = String(value);\n    return this.persianNumberService.toEnglish(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FaNumPipe.html":{"url":"pipes/FaNumPipe.html","title":"pipe - FaNumPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FaNumPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Pipes/faNum.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Replaces all arabic and english numbers with persian numbers.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        faNum\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Pipes/faNum.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a number or string (probably empty).\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a string that all english and arabic numbers in the input has been replaced with persian digits.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform} from '@angular/core';\nimport {PersianNumberService} from '../Services/persian-number.service';\n\n/**\n * Replaces all arabic and english numbers with persian numbers.\n */\n@Pipe({name: 'faNum'})\nexport class FaNumPipe implements PipeTransform {\n\n  constructor(private persianNumberService: PersianNumberService) {}\n\n  /**\n   *\n   * @param value a number or string (probably empty).\n   * @return a string that all english and arabic numbers in the input has been replaced with persian digits.\n   */\n  transform(value: string | number): string {\n    value = String(value);\n    return this.persianNumberService.toPersian(value);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IRCurrencyPipe.html":{"url":"pipes/IRCurrencyPipe.html","title":"pipe - IRCurrencyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IRCurrencyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Pipes/IRCurrency.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Formats input as a currency value.\ndefault type is rial. You can choose on of the following currency types:\n  r or rial for ریال\n\n  to or toman for تومان  This pipe extends DecimalPipe, so as second parameter, you can enter your desired formatting string. Default formatter is: 1.0-0\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        irc\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number, type: string, digitInfo: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Pipes/IRCurrency.pipe.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        a number of a string only contains digits\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'rial'\n                                    \n\n                                    \n                                        currency type\n\n                                    \n                                \n                                \n                                    digitInfo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '1.0-0'\n                                    \n\n                                    \n                                        decimal pipe formatter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            1925100 -&gt; 1,925,100 ریال\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform} from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\n\nexport enum IRCurrencies {\n  rial = 'ریال',\n  r = 'ریال',\n  toman = 'تومان',\n  t = 'تومان'\n}\n\n/**\n * Formats input as a currency value.\n * default type is rial. You can choose on of the following currency types:\n *\n *      r or rial for ریال\n *\n *      to or toman for تومان\n *\n *  This pipe extends DecimalPipe, so as second parameter, you can enter your desired formatting string. Default formatter is: 1.0-0\n */\n@Pipe({name: 'irc'})\nexport class IRCurrencyPipe extends DecimalPipe implements PipeTransform {\n\n  /**\n   * @param value a number of a string only contains digits\n   * @param type currency type\n   * @param digitInfo decimal pipe formatter\n   * @example 1925100 -> 1,925,100 ریال\n   */\n  transform(value: string | number, type: string = 'rial', digitInfo: string = '1.0-0') {\n    value = Number(value);\n    type = type.toLowerCase();\n    if (isNaN(value)) { throw new Error(`${value} is not a acceptable number`); }\n    return super.transform(value, digitInfo) + ' ' + IRCurrencies[type];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidJalaliDateError.html":{"url":"classes/InvalidJalaliDateError.html","title":"class - InvalidJalaliDateError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidJalaliDateError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/JDate/InvalidJalaliDate.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(...params: any[])\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-persian/src/lib/JDate/InvalidJalaliDate.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidJalaliDateError extends Error {\n  constructor(...params) {\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    // @ts-ignore\n    if (Error.captureStackTrace) {\n      // @ts-ignore\n      Error.captureStackTrace(this, InvalidJalaliDateError);\n    }\n\n    this.message = 'Invalid jalali date.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidServiceInputError.html":{"url":"classes/InvalidServiceInputError.html","title":"class - InvalidServiceInputError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidServiceInputError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Services/InvalidServiceInput.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(...params: any[])\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-persian/src/lib/Services/InvalidServiceInput.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidServiceInputError extends Error {\n  constructor(...params) {\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    // @ts-ignore\n    if (Error.captureStackTrace) {\n      // @ts-ignore\n      Error.captureStackTrace(this, InvalidServiceInputError);\n    }\n\n    this.message = 'Invalid value has been passed to the service.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JalaliDateCalculatorService.html":{"url":"injectables/JalaliDateCalculatorService.html","title":"injectable - JalaliDateCalculatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JalaliDateCalculatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _jDay\n                            \n                            \n                                    Private\n                                    Readonly\n                                _jMonth\n                            \n                            \n                                    Private\n                                    Readonly\n                                _jYear\n                            \n                            \n                                    Public\n                                validator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToGeorgian\n                            \n                            \n                                convertToJalali\n                            \n                            \n                                createGDateFromDays\n                            \n                            \n                                firstDayOfJYearInMarch\n                            \n                            \n                                GeorgianYearToJalaliYear\n                            \n                            \n                                jalaliYearToGeorgianYear\n                            \n                            \n                                numberOfPassedGDays\n                            \n                            \n                                numberOfPassedJDays\n                            \n                            \n                                numOfGLeapYears\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    jDay\n                                \n                                \n                                    jMonth\n                                \n                                \n                                    jYear\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date?: Date, validator: JalaliDateValidatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Georgian date as a regular javascript Date object.\n\n                                                        \n                                                \n                                                \n                                                        validator\n                                                  \n                                                        \n                                                                        JalaliDateValidatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                jalaliDateValidator injected using DI.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToGeorgian\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToGeorgian(jYear: number, jMonth: number, jDay: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:170\n                \n            \n\n\n            \n                \n                    Converts a valid jalali date to a javascript Date object representing a equivalent Georgian date.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a full Jalali year like 1397\n\n                                    \n                                \n                                \n                                    jMonth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        starts from zero\n\n                                    \n                                \n                                \n                                    jDay\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        starts from 1\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToJalali\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToJalali(gDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:129\n                \n            \n\n\n            \n                \n                    this method converts Georgian date to the jalali date. Output is an object implementing SimpleDateInterface.\nATTENTION: month number starts from 0, but day number starts from 1. Just like native javascript Date object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Georgian date as a javascript Date object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SimpleDateInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGDateFromDays\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGDateFromDays(numOfDays: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:77\n                \n            \n\n\n            \n                \n                    Creates a javascript Date object from number of passed days in Georgian calendar representing Georgian date.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    numOfDays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            firstDayOfJYearInMarch\n                        \n                        \n                    \n                \n            \n            \n                \nfirstDayOfJYearInMarch(jYear)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:100\n                \n            \n\n\n            \n                \n                    first day of the Farvardin month in Jalali calendar is in March month. This method returns the day number of new jalali year in March.\nThe day number starts from 1 not zero and is equal to the real numbers in the calendar.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GeorgianYearToJalaliYear\n                        \n                        \n                    \n                \n            \n            \n                \nGeorgianYearToJalaliYear(gYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:118\n                \n            \n\n\n            \n                \n                    Converts georgian year to the jalali year. Output year is the jalali year that start within the Georgian year.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full georgian year like 2018\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            jalaliYearToGeorgianYear\n                        \n                        \n                    \n                \n            \n            \n                \njalaliYearToGeorgianYear(jYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:110\n                \n            \n\n\n            \n                \n                    Converts jalali year number to the georgian year. Output year is the georgian year that jalali year starts within it, not the year\nthat starts in the winter of jalali year.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numberOfPassedGDays\n                        \n                        \n                    \n                \n            \n            \n                \nnumberOfPassedGDays(gDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:54\n                \n            \n\n\n            \n                \n                    Calculates the Julian Day number from Gregorian or Julian calendar dates.\nOnly some code cleaning applied to the source code.\nThe procedure was tested to be good since 1 March, -100100 (of both calendars) up to a few million years into the future.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    gDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.date\n                                    \n\n                                    \n                                        an instance of javascript date representing a Georgian date.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numberOfPassedJDays\n                        \n                        \n                    \n                \n            \n            \n                \nnumberOfPassedJDays(jYear: number, jMonth: number, jDay: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:68\n                \n            \n\n\n            \n                \n                    Returns number of passed days from source day in jalali calendar to the given jalali date.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                                \n                                    jMonth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        starts from zero\n\n                                    \n                                \n                                \n                                    jDay\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        day number starts from one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numOfGLeapYears\n                        \n                        \n                    \n                \n            \n            \n                \nnumOfGLeapYears(targetGYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:91\n                \n            \n\n\n            \n                \n                    This function returns number of passed leap years from AD 621 until targetGYear.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    targetGYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is full year number like 2018\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _jDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _jMonth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _jYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JalaliDateValidatorService\n\n                        \n                    \n                    \n                        \n                            Default value : new JalaliDateValidatorService()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:25\n                            \n                        \n\n                \n                    \n                        jalaliDateValidator injected using DI.\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        jDay\n                    \n                \n\n                \n                    \n                        getjDay()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jMonth\n                    \n                \n\n                \n                    \n                        getjMonth()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jYear\n                    \n                \n\n                \n                    \n                        getjYear()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts:40\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {div, mod} from './ArithmeticUtils';\nimport {InvalidJalaliDateError} from './InvalidJalaliDate.error';\nimport {SimpleDateInterface} from './SimpleDate.interface';\nimport {JalaliDateValidatorService} from './jalali-date-validator.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * This class converts Jalali date to Georgian and vase versa. You can use all of the methods as static methods.\n *\n */\nexport class JalaliDateCalculatorService {\n\n  private readonly _jYear: number;\n  private readonly _jMonth: number;\n  private readonly _jDay: number;\n\n  /**\n   *\n   * @param date Georgian date as a regular javascript Date object.\n   * @param validator jalaliDateValidator injected using DI.\n   */\n  constructor(private date?: Date, public validator: JalaliDateValidatorService = new JalaliDateValidatorService(),) {\n    if (this.date) {\n      const convrtedDate = this.convertToJalali(this.date);\n      this._jYear = convrtedDate.year;\n      this._jMonth = convrtedDate.month;\n      this._jDay = convrtedDate.day;\n    }\n  }\n\n  get jDay(): number {\n    return this._jDay;\n  }\n  get jMonth(): number {\n    return this._jMonth;\n  }\n  get jYear(): number {\n    return this._jYear;\n  }\n\n  /**\n   * Calculates the Julian Day number from Gregorian or Julian calendar dates.\n   *\n   * Only some code cleaning applied to the source code.\n   *\n   * The procedure was tested to be good since 1 March, -100100 (of both calendars) up to a few million years into the future.\n   * @param gDate an instance of javascript date representing a Georgian date.\n   * @see https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L195\n\n   */\n  numberOfPassedGDays(gDate: Date = this.date): number {\n    const gMonth = gDate.getMonth() - 7;\n    const gYear = gDate.getFullYear() + 100100;\n    const gMonthDiv = div(gMonth, 6);\n    const result = div((gYear + gMonthDiv) * 1461, 4) + div(153 * mod(gMonth + 17, 12) + 2, 5) + gDate.getDate() - 34840408;\n    return result - div(div(gYear + gMonthDiv, 100) * 3, 4) + 752;\n  }\n\n  /**\n   * Returns number of passed days from source day in jalali calendar to the given jalali date.\n   * @param jYear full jalali year like 1397\n   * @param jMonth starts from zero\n   * @param jDay day number starts from one\n   */\n  numberOfPassedJDays(jYear: number, jMonth: number, jDay: number): number {\n    return this.numberOfPassedGDays(new Date(this.jalaliYearToGeorgianYear(jYear), 2, this.firstDayOfJYearInMarch(jYear))) +\n      jMonth * 31 - div(jMonth + 1, 7) * (jMonth - 6) + jDay - 1;\n  }\n\n  /**\n   * Creates a javascript Date object from number of passed days in Georgian calendar representing Georgian date.\n   * @see https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L213\n   */\n  createGDateFromDays(numOfDays: number): Date {\n    const j = (4 * numOfDays + 139361631) + div(div(4 * numOfDays + 183187720, 146097) * 3, 4) * 4 - 3908;\n    const i = div(mod(j, 1461), 4) * 5 + 308;\n    const gDay = div(mod(i, 153), 5) + 1;\n    const gMonth = mod(div(i, 153), 12);\n    const gYear = div(j, 1461) - 100100 + div(7 - gMonth, 6);\n    return new Date(gYear, gMonth, gDay);\n  }\n\n  /**\n   * This function returns number of passed leap years from AD 621 until targetGYear.\n   * @param targetGYear is full year number like 2018\n   * @see https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L110\n   */\n  numOfGLeapYears(targetGYear: number): number {\n    return div(targetGYear, 4) - div((div(targetGYear, 100) + 1) * 3, 4) - 150;\n  }\n\n  /**\n   * first day of the Farvardin month in Jalali calendar is in March month. This method returns the day number of new jalali year in March.\n   * The day number starts from 1 not zero and is equal to the real numbers in the calendar.\n   * @param jYear full jalali year like 1397\n   */\n  firstDayOfJYearInMarch(jYear): number {\n    const gYear = jYear + 621;\n    return this.validator.numOfJLeapYears(jYear) - this.numOfGLeapYears(gYear) + 20;\n  }\n\n  /**\n   * Converts jalali year number to the georgian year. Output year is the georgian year that jalali year starts within it, not the year\n   * that starts in the winter of jalali year.\n   * @param jYear full jalali year like 1397\n   */\n  jalaliYearToGeorgianYear(jYear: number): number {\n    return jYear + 621;\n  }\n\n  /**\n   * Converts georgian year to the jalali year. Output year is the jalali year that start within the Georgian year.\n   * @param gYear full georgian year like 2018\n   */\n  GeorgianYearToJalaliYear(gYear: number): number {\n    return gYear - 621;\n  }\n\n  /**\n   * this method converts Georgian date to the jalali date. Output is an object implementing SimpleDateInterface.\n   *\n   * ATTENTION: month number starts from 0, but day number starts from 1. Just like native javascript Date object.\n   * @param gDate Georgian date as a javascript Date object.\n   * @see https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L149\n   */\n  convertToJalali(gDate: Date): SimpleDateInterface {\n    const georgianYear = gDate.getFullYear();\n    let jalaliYear = this.GeorgianYearToJalaliYear(georgianYear);\n    const passedDays = this.numberOfPassedGDays(gDate);\n    const numOfPassedDaysTo1Farvardin = this.numberOfPassedGDays(new Date(georgianYear, 2, this.firstDayOfJYearInMarch(jalaliYear)));\n\n    let jalaliDay: number;\n    let jalaliMonth: number;\n\n    // Find number of days that passed since 1 Farvardin.\n    let numOfDayInJYear = passedDays - numOfPassedDaysTo1Farvardin;\n    if (numOfDayInJYear >= 0) {\n      if (numOfDayInJYear \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JalaliDateValidatorService.html":{"url":"injectables/JalaliDateValidatorService.html","title":"injectable - JalaliDateValidatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JalaliDateValidatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _maxAcceptableYear\n                            \n                            \n                                    Private\n                                    Static\n                                _minAcceptableYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isJYearLeap\n                            \n                            \n                                isValidJDate\n                            \n                            \n                                isValidJDay\n                            \n                            \n                                isValidJMonth\n                            \n                            \n                                isValidJYear\n                            \n                            \n                                jMonthLength\n                            \n                            \n                                numOfJLeapYears\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isJYearLeap\n                        \n                        \n                    \n                \n            \n            \n                \nisJYearLeap(jYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:79\n                \n            \n\n\n            \n                \n                    If JYear is a leap year in jalali Calendar, return true. We using the fact that if a year is leap, number of leap years until that year\nand the year after it is not equal.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : full jalali year like: 1397\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidJDate\n                        \n                        \n                    \n                \n            \n            \n                \nisValidJDate(jYear, jMonth, jDay)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:122\n                \n            \n\n\n            \n                \n                    If Jalali date is not a valid Jalali date, return false. otherwise returns true.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full year number like: 1397\n\n                                    \n                                \n                                \n                                    jMonth\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        starts from zero\n\n                                    \n                                \n                                \n                                    jDay\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        starts from one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidJDay\n                        \n                        \n                    \n                \n            \n            \n                \nisValidJDay(jYear: number, jMonth: number, jDay: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:112\n                \n            \n\n\n            \n                \n                    Checks if day number is in valid range according to the given year and month.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                                \n                                    jMonth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        month number starting from zero\n\n                                    \n                                \n                                \n                                    jDay\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        day number starting from one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidJMonth\n                        \n                        \n                    \n                \n            \n            \n                \nisValidJMonth(jMonth: number, startFromZero: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:96\n                \n            \n\n\n            \n                \n                    Checks if jalali month is in valid range or not. In default, jMonth should start from zero.\nIf you want to start month number from one instead of zero, you should make startFromZero parameter to false.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    jMonth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    startFromZero\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidJYear\n                        \n                        \n                    \n                \n            \n            \n                \nisValidJYear(jYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:88\n                \n            \n\n\n            \n                \n                    Checks if jalali year is in acceptable range or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            jMonthLength\n                        \n                        \n                    \n                \n            \n            \n                \njMonthLength(jYear: number, jMonth)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:24\n                \n            \n\n\n            \n                \n                    Returns number of days in a given month counting from 1.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full jalali year like 1397\n\n                                    \n                                \n                                \n                                    jMonth\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of month from 0 for Farvardin to 11 for Esfand.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numOfJLeapYears\n                        \n                        \n                    \n                \n            \n            \n                \nnumOfJLeapYears(targetJYear: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:36\n                \n            \n\n\n            \n                \n                    Calculates the number of the leap years in jalali Calendar.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    targetJYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        should be full year like: 1397 and should be between -61 to 3177.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _maxAcceptableYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3177\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _minAcceptableYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -61\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {div, mod} from './ArithmeticUtils';\nimport {InvalidJalaliDateError} from './InvalidJalaliDate.error';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Methods of this Service doing validation stuff on a Jalali date. You can use this Service using DI in all around of your app for\n * validating Jalali dates without needing to convert them to the Georgian Date.\n */\nexport class JalaliDateValidatorService {\n\n  private static _minAcceptableYear = -61;\n  private static _maxAcceptableYear = 3177;\n\n  constructor() { }\n\n  /**\n   * Returns number of days in a given month counting from 1.\n   * @param jYear full jalali year like 1397\n   * @param jMonth number of month from 0 for Farvardin to 11 for Esfand.\n   */\n  jMonthLength(jYear: number, jMonth): number {\n    if (jMonth = JalaliDateValidatorService._minAcceptableYear && jYear = minMonthNumber && jMonth  0;\n  }\n\n  /**\n   * If Jalali date is not a valid Jalali date, return false. otherwise returns true.\n   * @param jYear full year number like: 1397\n   * @param jMonth starts from zero\n   * @param jDay starts from one\n   */\n  isValidJDate(jYear, jMonth, jDay): boolean {\n    return this.isValidJYear(jYear) && this.isValidJMonth(jMonth) && this.isValidJDay(jYear, jMonth, jDay);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NationalCodePipe.html":{"url":"pipes/NationalCodePipe.html","title":"pipe - NationalCodePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  NationalCodePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Pipes/nationalCode.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Formats a 10-digit number or string to national code format.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        nationalCode\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Pipes/nationalCode.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a 10-digit number or a string only contains 10 digits.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            001-236547-5\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform} from '@angular/core';\n\n/**\n * Formats a 10-digit number or string to national code format.\n */\n@Pipe({name: 'nationalCode'})\nexport class NationalCodePipe implements PipeTransform {\n\n  /**\n   *\n   * @param value a 10-digit number or a string only contains 10 digits.\n   * @example 001-236547-5\n   */\n  transform(value: string | number): any {\n    value = String(value);\n    if (value.length !== 10) { throw new Error(`${value} is not a acceptable national code.`); }\n    return `${value.substring(0, 3)}-${value.substring(3, 9)}-${value[9]}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxPersianModule.html":{"url":"modules/NgxPersianModule.html","title":"module - NgxPersianModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxPersianModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/ngx-persian.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: []\n})\nexport class NgxPersianModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PLOptions.html":{"url":"interfaces/PLOptions.html","title":"interface - PLOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PLOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Services/persian-letter.service.ts\n        \n\n            \n                Description\n            \n            \n                isPersian options parameter object should implement this interface. Fields descriptions are in the isPersian method document.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        enDigits\n                                \n                                \n                                            Optional\n                                        persianDigits\n                                \n                                \n                                            Optional\n                                        symbols\n                                \n                                \n                                            Optional\n                                        whitespaces\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enDigits\n                                    \n                                \n                                \n                                    \n                                        enDigits:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persianDigits\n                                    \n                                \n                                \n                                    \n                                        persianDigits:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbols\n                                    \n                                \n                                \n                                    \n                                        symbols:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitespaces\n                                    \n                                \n                                \n                                    \n                                        whitespaces:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {PersianService} from './persian-service';\nimport {PersianNumberService} from './persian-number.service';\n\n/**\n * isPersian options parameter object should implement this interface. Fields descriptions are in the isPersian method document.\n */\nexport interface PLOptions {\n  persianDigits?: boolean;\n  enDigits?: boolean;\n  symbols?: boolean;\n  whitespaces?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * This service brings validation of persian texts to the program and let you convert some not-persian letters with persian ones.\n *\n */\nexport class PersianLetterService implements PersianService {\n\n  static PERSIAN_LETTERS_PATTERN = '\\u06A9\\u06AF\\u06C0\\u06CC\\u060C\\u062A\\u062B\\u062C\\u062D\\u062E\\u062F\\u063A\\u064A\\u064B\\u064C' +\n                                       '\\u064D\\u064E\\u064F\\u067E\\u0670\\u0686\\u0698\\u200C\\u0621-\\u0629\\u0630-\\u0639\\u0641-\\u0654';\n  private static SYMBOLS_PATTERN = '؟$-/:-?،{-~!\"^_`\\\\[\\\\]';\n  static WHITESPACES_PATTERN = '\\\\s';\n\n  /**\n   * According to the options values, returns a RegExp object. The regex pattern of it contains regex of finding each of\n   * elements those specified in the options object plus persian letters.\n   * @return a RegExp object that can use in searching a string for special characters (persian letters and others specified in the options)\n   * @param options\n   * @private\n   */\n  private static _stringValidationRegex(options: PLOptions): RegExp {\n    let result = '';\n    if (options.enDigits) { result += '0-9'; }\n    if (options.symbols) { result += PersianLetterService.SYMBOLS_PATTERN; }\n    if (options.whitespaces) { result += PersianLetterService.WHITESPACES_PATTERN; }\n    if (options.persianDigits) { result += PersianNumberService.persianNumberPattern; }\n    // language=JSRegexp\n    return new RegExp(`[${result + PersianLetterService.PERSIAN_LETTERS_PATTERN}]`, 'g');\n  }\n\n  /**\n   * This method gets regex of persian letters and other chars specified in the options and then splits the input value by that regex.\n   * If match result is null - there is no match - returns 0. otherwise returns length of the match array that shows number of matched\n   * occurred in the input value.\n   * @param value\n   * @param options\n   * @return a number greater equal to 0 representing number of matches occurred in the input value.\n   * @private\n   */\n  private static _getMatchedPatternLength(value: string, options: PLOptions): number {\n    const matchResult = value.match(PersianLetterService._stringValidationRegex(options));\n    return matchResult ? matchResult.length : 0;\n  }\n\n  /**\n   * If input value contains any persian letter or is an empty string, returns true. otherwise returns false.\n   * @param value\n   */\n  containsPersian(value: string): boolean {\n    if (value === undefined || value === null) { return false; }\n    // language=JSRegexp\n    const persianRegex = new RegExp(`[${PersianLetterService.PERSIAN_LETTERS_PATTERN}]`);\n    return value.trim() ? persianRegex.test(value) : true;\n  }\n\n  /**\n   * Checks if input value is a persian text or not. If input value contains any letter that is not persian, the output will be false.\n   * Result of validation on existence  of other characters controls by options parameter.\n   * @param value\n   * @param options controlling validation result on existence  of other characters controls by options parameter. Fields:\n   *        persianDigits: if sets to true, validation result will be true if input value contains persian digits plus persian letters\n   *        enDigits: if sets to true, validation result will be true if input value contains english digits plus persian letters\n   *        symbols: if sets to true, validation result will be true if input value contains specific symbols plus persian letters.\n   *                 symbols list: ?$-/:؟!~\"'^_-[]{}()%&*>\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PersianLetterDirective.html":{"url":"directives/PersianLetterDirective.html","title":"directive - PersianLetterDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PersianLetterDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Validators/persian-directives.ts\n        \n\n            \n                Description\n            \n            \n                You can add PersianLetterDirective property to your input tag for using persianNumbersValidator function on its value\nFor setting options value, you can simply set PersianLetterDirective property equal to the PLOptions object.\n\n            \n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: PersianLetterDirective }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        persianLettersValidator\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                PersianLetterDirective\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        PersianLetterDirective\n                    \n                \n                \n                    \n                        Type :         PLOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Validators/persian-directives.ts:38\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Validators/persian-directives.ts:45\n                \n            \n\n\n            \n                \n                    Only a wrapper for persianLettersValidator validator function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        null for success or ValidationError for invalid inputs\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\nimport {persianLettersValidator, persianNumbersValidator} from './persian-validators';\nimport {PLOptions} from '../Services/persian-letter.service';\n\n\n/**\n * You can add PersianNumbersDirective property to your input tag for using persianNumbersValidator function on its value.\n * @see persianNumbersValidator\n */\n@Directive({\n  selector: 'PersianNumbersDirective',\n  providers: [{provide: NG_VALIDATORS, useExisting: PersianNumbersDirective}]\n})\nexport class PersianNumbersDirective implements Validator {\n\n  /**\n   * Only a wrapper for persianNumbersValidator validator function.\n   * @param control\n   * @return null for success or ValidationError for invalid inputs\n   */\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    return persianNumbersValidator()(control);\n  }\n}\n\n/**\n * You can add PersianLetterDirective property to your input tag for using persianNumbersValidator function on its value\n * For setting options value, you can simply set PersianLetterDirective property equal to the PLOptions object.\n * @see persianLettersValidator\n */\n@Directive({\n  selector: 'persianLettersValidator',\n  providers: [{provide: NG_VALIDATORS, useExisting: PersianLetterDirective}]\n})\nexport class PersianLetterDirective implements Validator {\n\n  @Input('PersianLetterDirective') options: PLOptions;\n\n  /**\n   * Only a wrapper for persianLettersValidator validator function.\n   * @param control\n   * @return null for success or ValidationError for invalid inputs\n   */\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    return persianLettersValidator(this.options)(control);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersianLetterService.html":{"url":"injectables/PersianLetterService.html","title":"injectable - PersianLetterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PersianLetterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Services/persian-letter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                PERSIAN_LETTERS_PATTERN\n                            \n                            \n                                    Private\n                                    Static\n                                SYMBOLS_PATTERN\n                            \n                            \n                                    Static\n                                WHITESPACES_PATTERN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _getMatchedPatternLength\n                            \n                            \n                                    Private\n                                    Static\n                                _stringValidationRegex\n                            \n                            \n                                containsPersian\n                            \n                            \n                                isPersian\n                            \n                            \n                                toPersian\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            _getMatchedPatternLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMatchedPatternLength(value: string, options: PLOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:55\n                \n            \n\n\n            \n                \n                    This method gets regex of persian letters and other chars specified in the options and then splits the input value by that regex.\nIf match result is null - there is no match - returns 0. otherwise returns length of the match array that shows number of matched\noccurred in the input value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                PLOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        a number greater equal to 0 representing number of matches occurred in the input value.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            _stringValidationRegex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _stringValidationRegex(options: PLOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:36\n                \n            \n\n\n            \n                \n                    According to the options values, returns a RegExp object. The regex pattern of it contains regex of finding each of\nelements those specified in the options object plus persian letters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PLOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RegExp\n\n                    \n                    \n                        a RegExp object that can use in searching a string for special characters (persian letters and others specified in the options)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsPersian\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:64\n                \n            \n\n\n            \n                \n                    If input value contains any persian letter or is an empty string, returns true. otherwise returns false.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPersian\n                        \n                        \n                    \n                \n            \n            \n                \nisPersian(value: string, options: PLOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:83\n                \n            \n\n\n            \n                \n                    Checks if input value is a persian text or not. If input value contains any letter that is not persian, the output will be false.\nResult of validation on existence  of other characters controls by options parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    options\n                                    \n                                                PLOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {\n                                                  persianDigits: false,\n                                                  enDigits: false,\n                                                  symbols: true,\n                                                  whitespaces: true}\n                                    \n\n                                    \n                                        controlling validation result on existence  of other characters controls by options parameter. Fields:\npersianDigits: if sets to true, validation result will be true if input value contains persian digits plus persian letters\nenDigits: if sets to true, validation result will be true if input value contains english digits plus persian letters\nsymbols: if sets to true, validation result will be true if input value contains specific symbols plus persian letters.\nsymbols list: ?$-/:؟!~\"'^_-[]{}()%&*>\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toPersian\n                        \n                        \n                    \n                \n            \n            \n                \ntoPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:96\n                \n            \n\n\n            \n                \n                    Converts arabic letters: ي and ك to persian corresponding letters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PERSIAN_LETTERS_PATTERN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : '\\u06A9\\u06AF\\u06C0\\u06CC\\u060C\\u062A\\u062B\\u062C\\u062D\\u062E\\u062F\\u063A\\u064A\\u064B\\u064C' +\n                                       '\\u064D\\u064E\\u064F\\u067E\\u0670\\u0686\\u0698\\u200C\\u0621-\\u0629\\u0630-\\u0639\\u0641-\\u0654'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            SYMBOLS_PATTERN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '؟$-/:-?،{-~!\"^_`\\\\[\\\\]'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WHITESPACES_PATTERN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\\\s'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-letter.service.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {PersianService} from './persian-service';\nimport {PersianNumberService} from './persian-number.service';\n\n/**\n * isPersian options parameter object should implement this interface. Fields descriptions are in the isPersian method document.\n */\nexport interface PLOptions {\n  persianDigits?: boolean;\n  enDigits?: boolean;\n  symbols?: boolean;\n  whitespaces?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * This service brings validation of persian texts to the program and let you convert some not-persian letters with persian ones.\n *\n */\nexport class PersianLetterService implements PersianService {\n\n  static PERSIAN_LETTERS_PATTERN = '\\u06A9\\u06AF\\u06C0\\u06CC\\u060C\\u062A\\u062B\\u062C\\u062D\\u062E\\u062F\\u063A\\u064A\\u064B\\u064C' +\n                                       '\\u064D\\u064E\\u064F\\u067E\\u0670\\u0686\\u0698\\u200C\\u0621-\\u0629\\u0630-\\u0639\\u0641-\\u0654';\n  private static SYMBOLS_PATTERN = '؟$-/:-?،{-~!\"^_`\\\\[\\\\]';\n  static WHITESPACES_PATTERN = '\\\\s';\n\n  /**\n   * According to the options values, returns a RegExp object. The regex pattern of it contains regex of finding each of\n   * elements those specified in the options object plus persian letters.\n   * @return a RegExp object that can use in searching a string for special characters (persian letters and others specified in the options)\n   * @param options\n   * @private\n   */\n  private static _stringValidationRegex(options: PLOptions): RegExp {\n    let result = '';\n    if (options.enDigits) { result += '0-9'; }\n    if (options.symbols) { result += PersianLetterService.SYMBOLS_PATTERN; }\n    if (options.whitespaces) { result += PersianLetterService.WHITESPACES_PATTERN; }\n    if (options.persianDigits) { result += PersianNumberService.persianNumberPattern; }\n    // language=JSRegexp\n    return new RegExp(`[${result + PersianLetterService.PERSIAN_LETTERS_PATTERN}]`, 'g');\n  }\n\n  /**\n   * This method gets regex of persian letters and other chars specified in the options and then splits the input value by that regex.\n   * If match result is null - there is no match - returns 0. otherwise returns length of the match array that shows number of matched\n   * occurred in the input value.\n   * @param value\n   * @param options\n   * @return a number greater equal to 0 representing number of matches occurred in the input value.\n   * @private\n   */\n  private static _getMatchedPatternLength(value: string, options: PLOptions): number {\n    const matchResult = value.match(PersianLetterService._stringValidationRegex(options));\n    return matchResult ? matchResult.length : 0;\n  }\n\n  /**\n   * If input value contains any persian letter or is an empty string, returns true. otherwise returns false.\n   * @param value\n   */\n  containsPersian(value: string): boolean {\n    if (value === undefined || value === null) { return false; }\n    // language=JSRegexp\n    const persianRegex = new RegExp(`[${PersianLetterService.PERSIAN_LETTERS_PATTERN}]`);\n    return value.trim() ? persianRegex.test(value) : true;\n  }\n\n  /**\n   * Checks if input value is a persian text or not. If input value contains any letter that is not persian, the output will be false.\n   * Result of validation on existence  of other characters controls by options parameter.\n   * @param value\n   * @param options controlling validation result on existence  of other characters controls by options parameter. Fields:\n   *        persianDigits: if sets to true, validation result will be true if input value contains persian digits plus persian letters\n   *        enDigits: if sets to true, validation result will be true if input value contains english digits plus persian letters\n   *        symbols: if sets to true, validation result will be true if input value contains specific symbols plus persian letters.\n   *                 symbols list: ?$-/:؟!~\"'^_-[]{}()%&*>\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersianNumberService.html":{"url":"injectables/PersianNumberService.html","title":"injectable - PersianNumberService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PersianNumberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Services/persian-number.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                englishNumbersTable\n                            \n                            \n                                    Static\n                                persianNumberPattern\n                            \n                            \n                                    Private\n                                    Static\n                                persianNumbersTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _getMatchedPatternLength\n                            \n                            \n                                arabicToPersian\n                            \n                            \n                                containsPersian\n                            \n                            \n                                isPersian\n                            \n                            \n                                toEnglish\n                            \n                            \n                                toPersian\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            _getMatchedPatternLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMatchedPatternLength(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:31\n                \n            \n\n\n            \n                \n                    splits input value by persian letters and then returns length of matched array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        0 if input value has no persian letter, numbers of persian letters in the input value otherwise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            arabicToPersian\n                        \n                        \n                    \n                \n            \n            \n                \narabicToPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:50\n                \n            \n\n\n            \n                \n                    Converts arabic numbers to the persian ones.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsPersian\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:18\n                \n            \n\n\n            \n                \n                    Checks if input value contains any persian number or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if input value contains any persian number. false otherwise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPersian\n                        \n                        \n                    \n                \n            \n            \n                \nisPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:41\n                \n            \n\n\n            \n                \n                    Checks if input value contains only persian letters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEnglish\n                        \n                        \n                    \n                \n            \n            \n                \ntoEnglish(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:77\n                \n            \n\n\n            \n                \n                    Convert persian numbers in input value to the english numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toPersian\n                        \n                        \n                    \n                \n            \n            \n                \ntoPersian(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:60\n                \n            \n\n\n            \n                \n                    Converts all arabic and english numbers to the persian numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            englishNumbersTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            persianNumberPattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u06F0-\\u06F9'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            persianNumbersTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['\\u06F0', '\\u06F1', '\\u06F2', '\\u06F3', '\\u06F4', '\\u06F5', '\\u06F6', '\\u06F7', '\\u06F8', '\\u06F9']\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-persian/src/lib/Services/persian-number.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {PersianService} from './persian-service';\nimport {InvalidServiceInputError} from './InvalidServiceInput.error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersianNumberService implements PersianService {\n  static persianNumberPattern = '\\u06F0-\\u06F9';\n  private static persianNumbersTable = ['\\u06F0', '\\u06F1', '\\u06F2', '\\u06F3', '\\u06F4', '\\u06F5', '\\u06F6', '\\u06F7', '\\u06F8', '\\u06F9'];\n  private static englishNumbersTable = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\n  /**\n   * Checks if input value contains any persian number or not.\n   * @param value\n   * @return true if input value contains any persian number. false otherwise.\n   */\n  containsPersian(value: string): boolean {\n    if (!value) { return false; }\n    // language=JSRegexp\n    const persianRegex = new RegExp(`[${PersianNumberService.persianNumberPattern}]`);\n    return persianRegex.test(value);\n  }\n\n  /**\n   * splits input value by persian letters and then returns length of matched array.\n   * @param value\n   * @return 0 if input value has no persian letter, numbers of persian letters in the input value otherwise.\n   * @private\n   */\n  private static _getMatchedPatternLength(value: string): number {\n    // language=JSRegexp\n    const matchResult = value.match(new RegExp(`[${PersianNumberService.persianNumberPattern}]`, 'g'));\n    return matchResult ? matchResult.length : 0;\n  }\n\n  /**\n   * Checks if input value contains only persian letters.\n   * @param value\n   */\n  isPersian(value: string): boolean {\n    if (!value) {return false; }\n    return value.length === PersianNumberService._getMatchedPatternLength(value);\n  }\n\n  /**\n   * Converts arabic numbers to the persian ones.\n   * @param value\n   */\n  arabicToPersian(value: string): string {\n    return value.replace(/٤/g, PersianNumberService.persianNumbersTable[4])\n                .replace(/٥/g, PersianNumberService.persianNumbersTable[5])\n                .replace(/٦/g, PersianNumberService.persianNumbersTable[6]);\n  }\n\n  /**\n   * Converts all arabic and english numbers to the persian numbers.\n   * @param value\n   */\n  toPersian(value: string | number): string {\n    if (value === undefined || value === null) {throw new InvalidServiceInputError(); }\n    value = value.toString();\n    value = this.arabicToPersian(value);\n    let regex: RegExp;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PersianNumbersDirective.html":{"url":"directives/PersianNumbersDirective.html","title":"directive - PersianNumbersDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PersianNumbersDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Validators/persian-directives.ts\n        \n\n            \n                Description\n            \n            \n                You can add PersianNumbersDirective property to your input tag for using persianNumbersValidator function on its value.\n\n            \n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: PersianNumbersDirective }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        PersianNumbersDirective\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Validators/persian-directives.ts:22\n                \n            \n\n\n            \n                \n                    Only a wrapper for persianNumbersValidator validator function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        null for success or ValidationError for invalid inputs\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\nimport {persianLettersValidator, persianNumbersValidator} from './persian-validators';\nimport {PLOptions} from '../Services/persian-letter.service';\n\n\n/**\n * You can add PersianNumbersDirective property to your input tag for using persianNumbersValidator function on its value.\n * @see persianNumbersValidator\n */\n@Directive({\n  selector: 'PersianNumbersDirective',\n  providers: [{provide: NG_VALIDATORS, useExisting: PersianNumbersDirective}]\n})\nexport class PersianNumbersDirective implements Validator {\n\n  /**\n   * Only a wrapper for persianNumbersValidator validator function.\n   * @param control\n   * @return null for success or ValidationError for invalid inputs\n   */\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    return persianNumbersValidator()(control);\n  }\n}\n\n/**\n * You can add PersianLetterDirective property to your input tag for using persianNumbersValidator function on its value\n * For setting options value, you can simply set PersianLetterDirective property equal to the PLOptions object.\n * @see persianLettersValidator\n */\n@Directive({\n  selector: 'persianLettersValidator',\n  providers: [{provide: NG_VALIDATORS, useExisting: PersianLetterDirective}]\n})\nexport class PersianLetterDirective implements Validator {\n\n  @Input('PersianLetterDirective') options: PLOptions;\n\n  /**\n   * Only a wrapper for persianLettersValidator validator function.\n   * @param control\n   * @return null for success or ValidationError for invalid inputs\n   */\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    return persianLettersValidator(this.options)(control);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersianService.html":{"url":"interfaces/PersianService.html","title":"interface - PersianService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PersianService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/Services/persian-service.ts\n        \n\n            \n                Description\n            \n            \n                All services those want to serve conversion to persian language should implement this interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    containsPersian\n                                \n                                \n                                    isPersian\n                                \n                                \n                                    toPersian\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsPersian\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPersian\n                        \n                        \n                    \n                \n            \n            \n                \nisPersian(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toPersian\n                        \n                        \n                    \n                \n            \n            \n                \ntoPersian(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-persian/src/lib/Services/persian-service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface PersianService {\n\n  isPersian(value: string): boolean;\n\n  toPersian(value: string | number): string;\n\n  containsPersian(value: string): boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDateInterface.html":{"url":"interfaces/SimpleDateInterface.html","title":"interface - SimpleDateInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDateInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-persian/src/lib/JDate/SimpleDate.interface.ts\n        \n\n            \n                Description\n            \n            \n                A simple interface for grouping three important numbers of a date together: Year, month and day.\nNumbers could be in any calendar.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDateInterface {\n  year: number;\n  month: number;\n  day: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/ArithmeticUtils.ts\n            \n            function\n            div\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/ArithmeticUtils.ts\n            \n            function\n            mod\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/ArithmeticUtils.ts\n            \n            function\n            round\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/InvalidJalaliDate.error.ts\n            \n            class\n            InvalidJalaliDateError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/SimpleDate.interface.ts\n            \n            interface\n            SimpleDateInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/jalali-date-calculator.service.ts\n            \n            injectable\n            JalaliDateCalculatorService\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/jalali-date-validator.service.ts\n            \n            injectable\n            JalaliDateValidatorService\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/JDate/jdate.ts\n            \n            class\n            JDate\n            \n                46 %\n                (35/76)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Pipes/IRCurrency.pipe.ts\n            \n            pipe\n            IRCurrencyPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Pipes/enNum.pipe.ts\n            \n            pipe\n            EnNumPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Pipes/faNum.pipe.ts\n            \n            pipe\n            FaNumPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Pipes/nationalCode.pipe.ts\n            \n            pipe\n            NationalCodePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Services/InvalidServiceInput.error.ts\n            \n            class\n            InvalidServiceInputError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Services/persian-letter.service.ts\n            \n            injectable\n            PersianLetterService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Services/persian-letter.service.ts\n            \n            interface\n            PLOptions\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Services/persian-number.service.ts\n            \n            injectable\n            PersianNumberService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Services/persian-service.ts\n            \n            interface\n            PersianService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Validators/persian-directives.ts\n            \n            directive\n            PersianLetterDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Validators/persian-directives.ts\n            \n            directive\n            PersianNumbersDirective\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Validators/persian-validators.ts\n            \n            function\n            persianLettersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-persian/src/lib/Validators/persian-validators.ts\n            \n            function\n            persianNumbersValidator\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            typedoc : ^0.14.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IRCurrencies   (projects/.../IRCurrency.pipe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-persian/src/lib/Pipes/IRCurrency.pipe.ts\n    \n        \n            \n                \n                    \n                        \n                        IRCurrencies\n                    \n                \n                        \n                            \n                                 rial\n                            \n                        \n                        \n                            \n                                Value : ریال\n                            \n                        \n                        \n                            \n                                 r\n                            \n                        \n                        \n                            \n                                Value : ریال\n                            \n                        \n                        \n                            \n                                 toman\n                            \n                        \n                        \n                            \n                                Value : تومان\n                            \n                        \n                        \n                            \n                                 t\n                            \n                        \n                        \n                            \n                                Value : تومان\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            div   (projects/.../ArithmeticUtils.ts)\n                        \n                        \n                            mod   (projects/.../ArithmeticUtils.ts)\n                        \n                        \n                            persianLettersValidator   (projects/.../persian-validators.ts)\n                        \n                        \n                            persianNumbersValidator   (projects/.../persian-validators.ts)\n                        \n                        \n                            round   (projects/.../ArithmeticUtils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-persian/src/lib/JDate/ArithmeticUtils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            div\n                        \n                        \n                    \n                \n            \n            \n                \ndiv(num1, num2)\n                \n            \n\n\n\n\n            \n                \n                    This function returns integer part of division result of num1 and num2 numbers.\nFor example: div (10, 3) is equal to 3.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    num1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mod\n                        \n                        \n                    \n                \n            \n            \n                \nmod(num1, num2)\n                \n            \n\n\n\n\n            \n                \n                    This function return arithmetic mod result of two inputs as a integer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    num1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            round\n                        \n                        \n                    \n                \n            \n            \n                \nround(x)\n                \n            \n\n\n\n\n            \n                \n                    This function removes fraction part of the number if exists. So, for example, it will turn -145,455 to -145 and\n145,455 to 145.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngx-persian/src/lib/Validators/persian-validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            persianLettersValidator\n                        \n                        \n                    \n                \n            \n            \n                \npersianLettersValidator(options, persianLetterService)\n                \n            \n\n\n\n\n            \n                \n                    Reactive form validator that checks form control value contains only persian letters and allowed characters in the options parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        see documents of isPersian method of the PersianLetterService for more info about options.\n\n                                    \n                                \n                                \n                                    persianLetterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            persianNumbersValidator\n                        \n                        \n                    \n                \n            \n            \n                \npersianNumbersValidator(persianNumberService)\n                \n            \n\n\n\n\n            \n                \n                    Reactive form validator that checks form control value contains only persian numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    persianNumberService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxPersian\nThis project was generated with Angular CLI version 7.3.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nngx-persian\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Mr Alihoseiny\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxPersianModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
